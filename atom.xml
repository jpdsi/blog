<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Developer Support Internet Team Blog</title>
  
  <subtitle>日本マイクロソフトの Azure Bot Service / Internet Information Services (IIS) / Internet Explorer / Microsoft Edge に関するサポート情報のブログです。</subtitle>
  <link href="https://jpdsi.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://jpdsi.github.io/blog/"/>
  <updated>2021-12-22T06:12:12.931Z</updated>
  <id>https://jpdsi.github.io/blog/</id>
  
  <author>
    <name>Developer Support Internet Japan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Azure Web PubSub サービスの利用</title>
    <link href="https://jpdsi.github.io/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/"/>
    <id>https://jpdsi.github.io/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/</id>
    <published>2021-12-19T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.931Z</updated>
    
    <content type="html"><![CDATA[<p>＊本記事は <a href="https://qiita.com/advent-calendar/2021/microsoft-azure-tech">Microsoft Azure Tech Advent Calendar 2021</a> の 20 日目の記事になります。</p><p>皆さんこんにちは。Developer Support Internet チームの伊藤です。今回の記事では、2021 年 11 月に正式にリリースされた、Azure Web PubSub Service についてご紹介します。少しでもこれから初めて Azure Web PubSub Service に触るという方や、Azure Web PubSub Service の使用を検討してるという方々の参考になればと嬉しいです！</p><h1 id="Azure-Web-PubSub-Service-とは"><a href="#Azure-Web-PubSub-Service-とは" class="headerlink" title="Azure Web PubSub Service とは"></a>Azure Web PubSub Service とは</h1><p>Azure Web PubSub Service とはパブリッシュ-サブスクライブ パターンを利用して、リアルタイムに双方向通信を実現するメッセージング サービスです。(以降、この記事では適宜 PubSub と略します。)<br>例えば、複数人でのチャット サービスや地図アプリでの現在地の表示、複数の IoT デバイスとの情報のやり取り等では、高いリアルタイム性を求められますが、そういったケースでは PubSub の使用を検討できます。</p><p>その他の概要やユースケースは<a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/overview">こちらの公開情報 (Azure Web PubSub サービスとは)</a> にも纏められてます。</p><h1 id="Azure-SignalR-との差異"><a href="#Azure-SignalR-との差異" class="headerlink" title="Azure SignalR との差異"></a>Azure SignalR との差異</h1><p>双方向通信を使用する Azure 製品として、現状 <a href="https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-overview">Azure SignalR</a> があります。ただし、Azure SignalR と PubSub はどちらが上位互換であるというものではなく、それぞれユースケース等が異なります。</p><p>PubSub の利点として、標準の WebSocket 接続をサポートしており、各言語の様々な WebSocket クライアント SDK を利用することができる点です。</p><p>また、WebSocket のサブプロトコルにも対応しており、 JSON/Protobuf のサブプロトコルを使用したり、独自にサブプロトコルを実装することもできます。(本記事を書いた際は JSON/Protobuf の 2 種類を用意しています。) 加えて、C# 以外にも JavaScript、Java、Python の SDK にも対応していることも PubSub の強みの 1 つです。</p><p>Azure SignalR を使う利点としては既に ASP.NET Core 等で SignalR をご利用の場合には、比較的開発コストを抑えて Azure SignalR へ移行できます。また、.NET や .NET Core を使用したシステムと統合する必要がある場合(例えば Blazor との連携等) には有力な選択肢となります。</p><p>また、PubSub と比べた時の大きな違いとしては、Azure SignalR は WebSocket だけでなく、Server Send Event や Long Porring 等にも対応しています。そのため、WebSocket に非対応のクライアントを利用している場合もサポートされる HTTP ベースの双方向通信の方式にフォールバックすることが可能です。</p><p>これらのように、Azure SignalR と PubSub では得意なところや不得意なところがそれぞれありますので、もしこれらの利用を検討されている方は、ぜひご自身が作成しようとしているシステムがどのような特性を必要とするか、どのような言語やエコシステムを使用するか等に合わせて利用するサービスを検討してください！その他の違い等については<a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/resource-faq#how-do-i-choose-between-azure-signalr-service-and-azure-web-pubsub-service">こちらの公開情報 (Azure SignalR Service と Azure Web PubSub サービスのどちらかを選択するにはどうすればよいですか?)</a> でも纏められてます。</p><p>なお、余談にはなりますが、もし 現在 ASP.NET Core の SignalR を使用していて、これから Azure SignalR への移行を検討してるという方は、ぜひ<a href="https://jpdsi.github.io/blog/web-apps/MigrationAzureSignalR/">本ブログのこちらの記事</a> もご参考ください！</p><h1 id="チュートリアルでの動作確認"><a href="#チュートリアルでの動作確認" class="headerlink" title="チュートリアルでの動作確認"></a>チュートリアルでの動作確認</h1><p>それでは実際にサンプルを動かしながら動作を確認していきましょう。</p><p>PubSub ではいくつかの公式チュートリアルが用意されていて、コードを触らないで既に用意された<a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/quickstart-live-demo">デモ用のサイトを利用するチュートリアル</a>もありますが、今回は折角なので SDK を用いて各個人でサンプルを試すチュートリアルをいくつかご紹介します。また、Azure SignalR との差別化も含めて、今回は JaveScript(Node.js) の SDK を使用します。</p><p>＊各チュートリアルを完全にトレースすると分量が多くなるので、要所要所をスクリーンショット等を添えて補足していきます。</p><p>＊ Node.js の 12.x 以降が必要となります。</p><h2 id="PubSub-リソースの作成"><a href="#PubSub-リソースの作成" class="headerlink" title="PubSub リソースの作成"></a>PubSub リソースの作成</h2><p>まずは<a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/howto-develop-create-instance">こちらの公開情報(Azure portal から Web PubSub インスタンスを作成する)</a> の手順にそって Azure Portal から PubSub のリソースを作成しましょう。価格レベルはとりあえずこの記事で紹介するチュートリアルを試す目的であれば <code>Free</code> で問題ありません。</p><p><img src="/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/AzureWebPubSub-for-beginner_2021-12-15-22-10-34.png" alt="リソース作成時の画面"></p><p>リソースを無事に作成できたら、以下のキーの項目から、Primary の接続文字列の値をどこかにメモしておきましょう！この後のチュートリアルがスムーズにできます！</p><p><img src="/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/AzureWebPubSub-for-beginner_2021-12-16-01-28-51.png" alt="リソースのキーの確認画面"></p><h3 id="Tips-チュートリアル中に使用する環境変数について"><a href="#Tips-チュートリアル中に使用する環境変数について" class="headerlink" title="Tips : チュートリアル中に使用する環境変数について"></a>Tips : チュートリアル中に使用する環境変数について</h3><p>PubSub のチュートリアルでは基本的に bash を使ったコマンドで紹介されていますが、もしも Windows の PowerShell を使って開発をされている場合には、以下のような <code>$env</code> コマンドで環境変数を設定できます。以下の実行例では、<code>WebPubSubConnectionString</code> という環境変数に <code>&quot;&lt;connection-string&gt;&quot;</code> という String を値として設定しています。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:WebPubSubConnectionString</span>=<span class="string">&quot;&lt;connection-string&gt;&quot;</span></span><br></pre></td></tr></table></figure><p>$env コマンドの詳細は<a href="https://docs.microsoft.com/ja-jp/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.2#using-and-changing-environment-variables">こちらの公開情報</a>をご確認ください。</p><p>なお、上記の環境変数は PowerShell を閉じたり、別のウィンドウでは効力がありません。そのため、実際の利用等では <code>.env</code> という環境変数用のファイルを作成するのも良いかと思います。ご参考程度ですが、 npm の環境変数用のファイルを扱うモジュールとして、<a href="https://www.npmjs.com/package/dotenv">dotenv というモジュール</a> 等があります。</p><p>今回の記事では Windows の PowerShell で環境変数を設定していきます。</p><h2 id="メッセージの発行とサブスクライブのチュートリアル"><a href="#メッセージの発行とサブスクライブのチュートリアル" class="headerlink" title="メッセージの発行とサブスクライブのチュートリアル"></a>メッセージの発行とサブスクライブのチュートリアル</h2><h3 id="チュートリアルの大まかな流れと実際の画面"><a href="#チュートリアルの大まかな流れと実際の画面" class="headerlink" title="チュートリアルの大まかな流れと実際の画面"></a>チュートリアルの大まかな流れと実際の画面</h3><p><a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/tutorial-pub-sub-messages?tabs=javascript#set-up-the-project">こちらのチュートリアル</a> ではシンプルなコンソールでの動作を確認できます。プログラムとしてはメッセージを受信する側の <code>Subscriber</code> とメッセージを送信する側の <code>Publisher</code> の 2 つがあります。基本的には手順通りにコマンドを実行していくと各プログラム等も完成しますが、こちらの GitHub に<a href="https://github.com/Azure/azure-webpubsub/tree/main/samples/javascript/pubsub">完成したサンプル</a>もあります。</p><p>このサンプルでは以下のような手順で動作を確認します。</p><ol><li>subscriber 側で環境変数を設定する。($env コマンド)</li><li>subscriber を起動する。(node subscribe.js)</li><li>publisher 側で環境変数を設定する。($env コマンド)</li><li>publisher で任意のメッセージを送信する。(node pusblish.js “&lt;任意のメッセージ&gt;”)</li></ol><p>環境変数の設定では、上述の <code>$env</code> コマンド等を使用します。(subscriber と publisher でそれぞれコンソールを用意して、それぞれで環境変数を設定します。)</p><p>実行した場合のコンソール画面は以下のようになります。画面左側は subscriber で、右側が publisher です。画面左側の subscriber で接続が確立して connected となった状態で、publisher 側で引数として指定して実行されたメッセージを subscriber 側に送信しています。<br><img src="/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/AzureWebPubSub-for-beginner_2021-12-16-01-37-31.png" alt="プログラムを実行中のコンソールの様子(左:subscriber 側、右:publisher 側)"></p><h3 id="プログラムの概要"><a href="#プログラムの概要" class="headerlink" title="プログラムの概要"></a>プログラムの概要</h3><p>subscriber 側のプログラムは以下になります。subscriber 側では環境変数を設定した後に、<code>node subscribe.js</code> という風に subscriber を起動するのみです。環境変数で指定した <code>WebPubSubConnectionString</code> の値を基に WebPubSubServiceClient インスタンスを作成して、そこからトークンや接続用の URL を作成していますね。</p><p>main() 関数の後半部分では、正常に動作したら connected という値が表示され、publisher からのメッセージを受け取った際には Message Recieved: &lt;送られたメッセージ&gt; とコンソールに出力するように実装されています。WebSocket のインスタンスである <code>ws</code> を作成してからは特に PubSub 固有の実装ということもなく、一般的な WebSocket と同じような実装ですね！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> WebSocket = <span class="built_in">require</span>(<span class="string">&#x27;ws&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; WebPubSubServiceClient &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@azure/web-pubsub&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> hub = <span class="string">&quot;pubsub&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> service = <span class="keyword">new</span> WebPubSubServiceClient(process.env.WebPubSubConnectionString, hub);</span><br><span class="line">  <span class="keyword">let</span> token = <span class="keyword">await</span> service.getClientAccessToken();</span><br><span class="line">  <span class="keyword">let</span> ws = <span class="keyword">new</span> WebSocket(token.url);</span><br><span class="line">  ws.on(<span class="string">&#x27;open&#x27;</span>, <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;connected&#x27;</span>));</span><br><span class="line">  ws.on(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="params">data</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;Message received: %s&#x27;</span>, data));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure><p>pusblisher 側のプログラムは以下になります。かなりシンプルなプログラムですね。<code>process.argv[2]</code> というところでプログラム実行時の引数をメッセージとして取得してます。このサンプルでは同じハブにいるユーザー全員にメッセージを送るために PubSub 用に作られた SDK である <code>@azure/web-pubsub</code> を pusblisher 側でも使用していますね。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; WebPubSubServiceClient &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@azure/web-pubsub&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hub = <span class="string">&quot;pubsub&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> service = <span class="keyword">new</span> WebPubSubServiceClient(process.env.WebPubSubConnectionString, hub);</span><br><span class="line"></span><br><span class="line"><span class="comment">// by default it uses `application/json`, specify contentType as `text/plain` if you want plain-text</span></span><br><span class="line">service.sendToAll(process.argv[<span class="number">2</span>], &#123; <span class="attr">contentType</span>: <span class="string">&quot;text/plain&quot;</span> &#125;);</span><br></pre></td></tr></table></figure><h2 id="WebSocket-のサブプロトコルのチュートリアル"><a href="#WebSocket-のサブプロトコルのチュートリアル" class="headerlink" title="WebSocket のサブプロトコルのチュートリアル"></a>WebSocket のサブプロトコルのチュートリアル</h2><h3 id="WebSocket-のサブプロトコルの概要"><a href="#WebSocket-のサブプロトコルの概要" class="headerlink" title="WebSocket のサブプロトコルの概要"></a>WebSocket のサブプロトコルの概要</h3><p>PubSub の利点の一つとして Websocket のサブプロトコルを使用できます。Websocket のサブプロトコルの大まかなイメージとしては、WebSocket の接続を行う際に、送信するデータに JSON 等の形式の規則を指定できるイメージです。WebSocket のサブプロトコルの詳細については<a href="https://datatracker.ietf.org/doc/html/rfc6455#section-1.9">RFC6455 の WebSocket の項目</a> をご参考ください。</p><h3 id="チュートリアルの大まかな流れと実際の画面-1"><a href="#チュートリアルの大まかな流れと実際の画面-1" class="headerlink" title="チュートリアルの大まかな流れと実際の画面"></a>チュートリアルの大まかな流れと実際の画面</h3><p>今回は、<a href="https://docs.microsoft.com/ja-jp/azure/azure-web-pubsub/tutorial-subprotocol?tabs=csharp">こちらのチュートリアル</a>に沿って試してみようと思います。<a href="https://github.com/Azure/azure-webpubsub/tree/main/samples/javascript/logstream/">GitHub のサンプルもこちら</a> にあります。大まかな全体の流れとしては以下のような流れで行います。</p><ol><li>Web ページをホストするサーバーアプリ側で環境変数を設定する。($env コマンド)</li><li>サーバーアプリを起動する。(node server)</li><li>ブラウザーで <a href="http://localhost:8080/">http://localhost:8080</a> へとアクセスする。</li><li>クライアントアプリを起動する。(node stream)</li><li>クライアントアプリ側でメッセージを送信する。(クライアント側のコンソールでメッセージを入力)</li><li>ブラウザーに送信したメッセージが表示されるのを確認する。</li></ol><p>プログラム実行時のコンソールは以下のようになります。左側が Web ページをホストするサーバーアプリ、右側がクライアントアプリになります。サーバーアプリ側でやることは環境変数を設定してからは起動するのみです。クライアントアプリではクライアントアプリを起動してから、メッセージを入力していきます。<br><img src="/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/AzureWebPubSub-for-beginner_2021-12-15-22-47-20.png" alt="プログラムを実行中のコンソールの様子(左:サーバー側、右:クライアント側)"></p><p>以下のようにクライアント側から送信したメッセージがブラウザー側で表示されていることを確認できます。<br><img src="/blog/azure-web-pubsub/AzureWebPubSub-for-beginner/AzureWebPubSub-for-beginner_2021-12-16-01-01-20.png" alt="http://localhost:8080 での画面"></p><h3 id="プログラムの概要-1"><a href="#プログラムの概要-1" class="headerlink" title="プログラムの概要"></a>プログラムの概要</h3><p>Web ページをホストするサーバー 側のプログラムは以下のようになっています。先程の subscriber のプログラムと大きく違う点として、express というモジュールを使用して、サーバーアプリ化していますね。</p><p>また、クライアントが使用する Token に WebPubSubServiceClient のインスタンスのメソッドを使って roles を指定してます。これにより、クライアントが stream グループに対してメッセージを送ることや、グループへの参加/脱退が可能となります。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; WebPubSubServiceClient &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@azure/web-pubsub&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> endpoint = <span class="keyword">new</span> WebPubSubServiceClient(process.env.WebPubSubConnectionString, <span class="string">&#x27;stream&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/negotiate&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> token = <span class="keyword">await</span> endpoint.getClientAccessToken(&#123;</span><br><span class="line">    <span class="attr">roles</span>: [<span class="string">&#x27;webpubsub.sendToGroup.stream&#x27;</span>, <span class="string">&#x27;webpubsub.joinLeaveGroup.stream&#x27;</span>]</span><br><span class="line">  &#125;);</span><br><span class="line">  res.json(&#123;</span><br><span class="line">    <span class="attr">url</span>: token.url</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line">app.listen(<span class="number">8080</span>, <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;server started&#x27;</span>));</span><br></pre></td></tr></table></figure><p>ブラウザー側で開いている .html ファイルより一部を抜粋したコードが以下です。WebSocket の message のイベントを検出した際に、ページ上にクライアントから送られてきたメッセージをログのように表示させます。また、WebSocket のインスタンスを作成する時に、第 2 引数として <code>&#39;json.webpubsub.azure.v1&#39;</code> と入力しています。これが、今回使用する JSON 向けに用意されたサブプロトコルです。</p><p>また、ws.send の際に JSON.stringfy() 関数で JSON に成形していることが確認できますね。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;output&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    (<span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">&#x27;/negotiate&#x27;</span>)</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> data = <span class="keyword">await</span> res.json();</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> ws = <span class="keyword">new</span> WebSocket(data.url, <span class="string">&#x27;json.webpubsub.azure.v1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> ackId = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">      ws.onopen = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;connected&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">type</span>: <span class="string">&#x27;joinGroup&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">group</span>: <span class="string">&#x27;stream&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">ackId</span>: ++ackId,</span></span><br><span class="line"><span class="javascript">        &#125;));</span></span><br><span class="line"><span class="javascript">      &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> output = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#output&#x27;</span>);</span></span><br><span class="line"><span class="javascript">      ws.onmessage = <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> message = <span class="built_in">JSON</span>.parse(event.data);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (message.type === <span class="string">&#x27;message&#x27;</span> &amp;&amp; message.group === <span class="string">&#x27;stream&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> d = <span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="javascript">          d.innerText = message.data;</span></span><br><span class="line"><span class="javascript">          output.appendChild(d);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="built_in">document</span>.body.scrollHeight);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;;</span></span><br><span class="line"><span class="javascript">    &#125;)();</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>クライアント側のプログラムは以下になります。先程のチュートリアルと比べると少し記述は増えてますね。先程の .html 同様に ws.send で送る値を JSON に変換しています。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> WebSocket = <span class="built_in">require</span>(<span class="string">&#x27;ws&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">`http://localhost:8080/negotiate`</span>);</span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> res.json();</span><br><span class="line">  <span class="keyword">let</span> ws = <span class="keyword">new</span> WebSocket(data.url, <span class="string">&#x27;json.webpubsub.azure.v1&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> ackId = <span class="number">0</span>;</span><br><span class="line">  ws.on(<span class="string">&#x27;open&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    process.stdin.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;sendToGroup&#x27;</span>,</span><br><span class="line">        <span class="attr">group</span>: <span class="string">&#x27;stream&#x27;</span>,</span><br><span class="line">        <span class="attr">ackId</span>: ++ackId,</span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: data.toString()</span><br><span class="line">      &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  ws.on(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="params">data</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&quot;Received: %s&quot;</span>, data));</span><br><span class="line">  process.stdin.on(<span class="string">&#x27;close&#x27;</span>, <span class="function">() =&gt;</span> ws.close());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure><h1 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h1><p>他にもいくつかチュートリアルはありますが、今回は分量など含めてここまでとなります。双方向通信の仕組みやサービスは色々と出回っていますが、ぜひ今後の選択肢として Azure Web PubSub サービスもご検討いただけたら嬉しいです！</p><p>まだまだ一般公開されたばかりのサービスですので、今後もっと発展するとより皆さんのご要望にそった機能等も追加されるかもしれませんので、ぜひよろしくお願いします。それでは、また次回！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;＊本記事は &lt;a href=&quot;https://qiita.com/advent-calendar/2021/microsoft-azure-tech&quot;&gt;Microsoft Azure Tech Advent Calendar 2021&lt;/a&gt; の 20 日目の記事になります</summary>
      
    
    
    
    
    <category term="Azure Web PubSub Service" scheme="https://jpdsi.github.io/blog/tags/Azure-Web-PubSub-Service/"/>
    
  </entry>
  
  <entry>
    <title>Bot Framework Composer を用いた Azure Bot 構築</title>
    <link href="https://jpdsi.github.io/blog/azure-bot-service/bot-merry-christmas/"/>
    <id>https://jpdsi.github.io/blog/azure-bot-service/bot-merry-christmas/</id>
    <published>2021-12-07T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.911Z</updated>
    
    <content type="html"><![CDATA[<p>ちょっと早いですが Merry Christmas！Azure Bot Service サポート チームの石沢です！</p><p>皆様、Bot Framework Composer をご存じですか？なんとこれを利用すればノンコーディングでも Bot を構築することが可能です！<br>Bot でサービス構築したいけどコーディングはちょっと…という方でも GUI を操作するだけで構築完了してしまう優れものです。<br>今回は初めての Bot Framework Composer を利用される方向けに、Merry Christmas と話しかけると Merry Christmas と返してくれる、こちらから話しかけた内容をそのままオウム返ししてくる Bot を Azure 上に構築してみます。</p><hr><p>Bot Framework Composer を利用するにあたって、以下のソフトウェアのインストールする必要があります。<br>本記事では、Node.js は 17.2.0、.NET Core SDK は 3.1.21、Composer は 2.0.0 バージョンを使用しました。</p><p>・Node.js (<a href="https://nodejs.org/en/">https://nodejs.org/en/</a>)</p><p>・.NET Core SDK 3.1 以降 (<a href="https://dotnet.microsoft.com/download/dotnet/3.1">https://dotnet.microsoft.com/download/dotnet/3.1</a>)</p><p>・Composer (<a href="https://aka.ms/bf-composer-download-win">https://aka.ms/bf-composer-download-win</a>)</p><p>参考：Install Bot Framework Composer - Prerequisites<br><a href="https://docs.microsoft.com/en-us/composer/install-composer?tabs=windows#prerequisites">https://docs.microsoft.com/en-us/composer/install-composer?tabs=windows#prerequisites</a></p><hr><h1 id="1-Composer-を起動して-Bot-を作成しよう！"><a href="#1-Composer-を起動して-Bot-を作成しよう！" class="headerlink" title="1. Composer を起動して Bot を作成しよう！"></a>1. Composer を起動して Bot を作成しよう！</h1><p>それでは早速インストールした Composer を起動しましょう。<br>Composer を起動すると以下の画面が表示されますので、おもむろに [+ Create New] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-01.png" alt="Step1"></p><p>表示された画面で、最もシンプルな Bot のテンプレートである “Empty Bot” を選択して、[Next] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-02.png" alt="Step2"></p><p>次の画面ではこの Bot のプロジェクトに名前を付けてあげましょう。あわせて Bot が保存されるフォルダも指定してあげてください。<br>ここでは Runtime type は “Azure Web App” が設定されていることを確認して、[Create] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-03.png" alt="Step3"></p><hr><h1 id="2-Bot-を編集しよう！"><a href="#2-Bot-を編集しよう！" class="headerlink" title="2. Bot を編集しよう！"></a>2. Bot を編集しよう！</h1><p>さて、Create が無事完了すると以下のような画面に遷移します。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-04.png" alt="Step4"></p><p>ここで左のナビゲーションパネルから、”Unknown intent” をクリックして、さらに “Send a response” をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-05.png" alt="Step5"></p><p>“Unknown intent” では、ユーザーの入力が Bot 側でよくわからないものと認識された場合の処理フローが示されています。<br>今回の “Empty Bot” テンプレートの場合は、入力を認識するような処理は入っていないので、ユーザーの全ての入力がこのフローに入ります。<br>なんとなく想像できるのではないかと思いますが、ここでユーザーの入力をそのまま返すようにフローを書き替えるだけで、Merry Christmas という入力にたいして Merry Christmas という応答を返す Bot が完成します。<br>フローを書き替えるためには、まず右のパネルに表示された “Add alternative” をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-06.png" alt="Step6"></p><p>ここで Bot が返すテキストを設定できるのですが、入力されたユーザーのテキストを示すプロパティを選択します。”{x}” をクリックして、”turn.activity.text” を選択します。 </p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-07.png" alt="Step7"></p><p>選択できたら、”Sorry, I didn’t get that.” というレスポンスは不要なので、”Remove variation” をクリックして削除してしまいましょう。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-08.png" alt="Step8"></p><p>これでオウム返しする Bot が完成しました！</p><hr><h1 id="3-Bot-を-ローカルでテストしよう！"><a href="#3-Bot-を-ローカルでテストしよう！" class="headerlink" title="3. Bot を ローカルでテストしよう！"></a>3. Bot を ローカルでテストしよう！</h1><p>Composer ではローカルでのテストも容易に行うことができます！<br>後日記事を追記いたしますので、今しばらくお待ちください。</p><hr><h1 id="4-Bot-を-Publishしよう！"><a href="#4-Bot-を-Publishしよう！" class="headerlink" title="4. Bot を Publishしよう！"></a>4. Bot を Publishしよう！</h1><p>さて、あとは作成した Bot を Azure 上に Deploy して Publish するだけです。<br>これも GUI でぽちぽちするだけでできます。Composer の雲のマークのメニューを選択して、”Publishing profile” タブを選択して、さらに [Add new] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-09.png" alt="Step9"></p><p>ここで Publish 用のプロファイルを作成します。Name は任意のものを入力し、Publishing target には “Publish bot to Azure” を選択して、[Next] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-10.png" alt="Step10"><br>次に Bot を動作させるために新しいリソースを作成するか、既存のリソースをインポートするかを選択します。<br>ここでは、新しくリソースを作成するため “Create new resources” を選択して、[Next] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-11.png" alt="Step11"></p><p>Azure アカウントへのログインが求められるのでログインします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-12.png" alt="Step12"></p><p>ログインできたら、利用するサブスクリプションや Resource group についての設定を行い、[Next] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-13.png" alt="Step13"></p><p>次に追加するリソースを選択します。今回の目的の通り動作させるだけであれば “Required” 以外は追加しなくても問題ありません。</p><p>確認画面が出てくるので、問題なさそうであれば [Create] をクリックして、リソースのデプロイが完了するのを待ちましょう。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-14.png" alt="Step14"></p><p>以下のようなメッセージが表示されれば OK です！</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-15.png" alt="Step15"></p><p>次に “Publish” タブを選択してから、パブリッシュしたい Bot にチェックを入れて、先ほど作成したプロファイルを “Publish target” に設定したら [Publish selected bots] をクリックします。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-16.png" alt="Step16"></p><p>次の画面では、Comments に任意のコメントを入れて、[Okay] をクリックして Publish の完了を待ちましょう。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-17.png" alt="Step17"></p><p>Publish が成功しているかどうかは、Message に ”Success” と表示されていることで確認できます。</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-18.png" alt="Step18"></p><hr><h1 id="5-Bot-の動作確認をしよう！"><a href="#5-Bot-の動作確認をしよう！" class="headerlink" title="5. Bot の動作確認をしよう！"></a>5. Bot の動作確認をしよう！</h1><p>ここでは詳細は割愛しますが、Azure Portal にアクセスして、作成した Azure Bot リソースから、”Web チャットでテスト” で実際に動作させてみるのが最も簡単な動作確認方法でしょう。<br>当初の目的であった “Merry Christmas と話しかけると Merry Christmas と返してくれる Bot を Azure 上に構築する” が達成できたことを確認できます！</p><p><img src="/blog/azure-bot-service/bot-merry-christmas/bot-merry-christmas-18.png" alt="Step19"></p><p>というわけで 1 つもコーディングせずに Bot の構築ができてしまいました！<br>今回は以上です。それでは、また次回！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ちょっと早いですが Merry Christmas！Azure Bot Service サポート チームの石沢です！&lt;/p&gt;
&lt;p&gt;皆様、Bot Framework Composer をご存じですか？なんとこれを利用すればノンコーディングでも Bot を構築することが可能で</summary>
      
    
    
    
    
    <category term="Azure Bot Service" scheme="https://jpdsi.github.io/blog/tags/Azure-Bot-Service/"/>
    
  </entry>
  
  <entry>
    <title>&lt;Career&gt;&lt;第二弾&gt; インターンから見た Microsoft と Developer Support Internet (DSI) チーム (2021)</title>
    <link href="https://jpdsi.github.io/blog/general/career2-intern-experience/"/>
    <id>https://jpdsi.github.io/blog/general/career2-intern-experience/</id>
    <published>2021-11-24T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.931Z</updated>
    
    <content type="html"><![CDATA[<p>＊本記事はこれから日本マイクロソフトのインターンシップ、あるいは就職先として考える学生に向けて、実際に 2021 年のサマーインターンシップに参加してもらった学生に書いてもらいました。<br>インターン生の率直な感想を皆さんにお伝えするために、普段の内容より少々くだけた表現となっておりますのでご了承ください。<br>以下からが本文となります。</p><p>こんにちは！CSS Developer Support Internet チームでサマーインターンシップに参加しております宮脇（Miyawaki）と申します。<br>本記事では、私が Microsoft Japan で働いてみた所感と将来のインターン生、今後マイクロソフトを就職先に考える学生に向けた Tips をまとめようと思います。</p><p>例えば、以下のような質問に、私見ではありますが回答できればと思います。</p><ul><li>  インターンシップには参加したいけど、不安……</li><li>  Microsoft のインターンシップって何をするの？</li><li>  インターンシップ期間は長いけど、他のことは何もできなくなるの？</li></ul><p>目次は以下の通りです。</p><ol><li> Microsoft のミッション</li><li> Customer Service &amp; Support (CSS) Developer Support Internet について</li><li> インターンシップで行ったこと（私の場合）</li><li> インターンシップでの学び・所感</li></ol><p>それでは、Let’s Explorer the Internship at Microsoft!</p><hr><p>2021 年度の場合は、1 ヵ月半のインターンシップのうち、最初の一週間に <strong>“Intern Learning Week”</strong> という期間が設けられていて、Microsoft の mission や culture について知ることができました。</p><blockquote><p><strong>Our Mission : Empower every person and every organization on the planet to achieve more.（地球上のすべての個人とすべての組織が、より多くのことを達成できるようにする）</strong><br><strong>Culture</strong> :</p><ul><li>  GROWTH MINDSET（成長する考え方）</li><li>  CUSTOMER OBSESSED（お客様に寄り添う）</li><li>  DIVERSITY AND INCLUSION（ダイバーシティ &amp; インクルージョン）</li><li>  ONE MICROSOFT（ワン・マイクロソフト）</li><li>MAKING A DIFFERENCE（世界を変える）<br>  参考 : <a href="https://www.microsoft.com/ja-jp/mscorp/college/msd-company-mv.aspx">https://www.microsoft.com/ja-jp/mscorp/college/msd-company-mv.aspx</a></li></ul></blockquote><p>Intern Learning Week で学べる Microsoft のいわゆる「社訓・社風」はすべて上に詰まっているといっても過言ではないでしょう。</p><p>ちなみに私が最も好きな Culture は “ONE MICROSOFT” です！<br>チームとしての Microsoft の団結力は限りなく強固で、他者貢献の意識を非常に重要視しています。<br>インターンシップに参加していただくことで、よりリアルに肌で感じることができるのではないかと思います。</p><h1 id="2-Customer-Service-amp-Support-CSS-Developer-Support-Internet-について"><a href="#2-Customer-Service-amp-Support-CSS-Developer-Support-Internet-について" class="headerlink" title="2. Customer Service &amp; Support (CSS) Developer Support Internet について"></a>2. Customer Service &amp; Support (CSS) Developer Support Internet について</h1><p>Customer Service &amp; Support (CSS) は、Microsoft の製品／サービスを利用するお客様をサポートし、Empower していく役割を担っています。<br>その中でも、私が所属した Developer Support Internet (DSI) は、Edge, Internet Explorer, IIS (Internet Information Services), Azure Bot Service といったサービスのサポートをを担当しています。</p><p>私は「サポート業務」というと、電話の受け答えを淡々と行う業務かと思っていました。<br>しかし、実際には顧客目線で出来るだけ早く的確な返答を行う高度なコミュニケーション、担当分野に対する専門的で幅広い技術知識、チーム内外での連携するチームワークといったプロフェッショナルスキルを要求される業務でした。  </p><p>この点については、Microsoft の Culture である “ONE MICROSOFT” や “CUSTOMER OBSESSED” を社員全員が意識している結果が反映されているのではと考えています。</p><h1 id="3-インターンシップで行ったこと"><a href="#3-インターンシップで行ったこと" class="headerlink" title="3. インターンシップで行ったこと"></a>3. インターンシップで行ったこと</h1><p>インターンシップでは、大きく下の 3 つについて取り組みました。</p><ul><li>  <strong>チーム内業務</strong></li><li>  <strong>インターン生同士のプロジェクト</strong></li><li>  <strong>インターン生個人の活動</strong></li></ul><p>まず<strong>チーム内業務</strong>について、こちらはみなさんが主にイメージしているインターンシップの内容と一致していると思います。<br>具体的には、CSS のサポート業務の一連の流れについての理解、DSI で担当しているサービスの体験、関連する知識の学習、模擬サポート業務体験が挙げられます。</p><p>次に<strong>インターン生同士のプロジェクト</strong>について、これは今年度 (FY21) に取り組まれたサマーインターンシップのイベントです。<br>人事の方が用意してくださった 4 つのテーマから一つ選び、インターン生同士が協力してプロジェクトに取り組みます。<br>参考までに、私は日本マイクロソフトの組織内に存在するコミュニティーからゲストをお呼びして、<br>インターン生と社員の交流を促進するためのプロジェクトに所属して、交流の場を儲けるイベントを開催しました。</p><p>最後に<strong>インターン生個人の活動</strong>について、こちらはインターン生がメンターやマネージャーと相談し、目標とやることを明確にしたうえで業務時間中に取り組む活動です。<br>正直、何をするのかはみなさん次第だと思います。以前のインターン生の活動履歴や、インターンシップ応募時に提出した履歴書の内容がヒントになるかもしれません！  </p><p>参考までに、私は DSI 内と CSS 全体でそれぞれ勉強会を開催しました。</p><p>通常のインターンシップでは味わえないほど、リアルで濃い体験ができると思います。<br>もちろん、メンターやその他社員の方が相談に乗ってくださりますので、のびのびと活動できるかと思います！</p><h1 id="4-インターンシップでの学び・所感"><a href="#4-インターンシップでの学び・所感" class="headerlink" title="4. インターンシップでの学び・所感"></a>4. インターンシップでの学び・所感</h1><p>次に、インターンシップでの学びについて簡単にまとめさせていただきます</p><ul><li>  <strong>コミュニケーション x 技術</strong></li><li>  <strong>GROWTH MINDSET</strong></li></ul><p>最初に<strong>コミュニケーション x 技術</strong>について、これは私がこれからのキャリアを考えたときに、Microsoft でフル活用できると思ったスキルです。 これらは単体でなくセットになったとき初めて CSS で活かされるのだと思います。  </p><p>具体的にコミュニケーションでは、迅速な返答、わかりやすく言語化する能力、相手の考えていることを推察する能力、お客様に合わせた柔軟な言葉選び等が該当します。<br>そして技術では、製品／サービスに対する知識、トラブルシューティング能力、既存の知識とトラブル発生の現状を結びつける能力等が該当します。</p><p>ただし、決して私も最初からこのような能力があったわけではありませんし、今も全て備えているわけではありません。<br>それよりもむしろ、インターンシップを通して業務に必要とされている能力と自身に足りない点が<strong>明確になった</strong>と考えています。そういった点で、インターンシップは有意義でした。</p><p>次に<strong>GROWTH MINDSET</strong> について、こちらは Microsoft の Culture からの引用です。<br>本インターンシップを通して学んだのは、「GROWTH MINDSET （成長し続ける心）の醸成には明確な目的と行動が必要であること」であり、Microsoft のインターンシップではそれらが実践できます。</p><p><strong>今までしてきたことよりも、何をするのか？またその行動の明確な目標と想定されるインパクトは考えているか？</strong><br>この実践は、これからのキャリア形成のときにも活かされるのではないかと思います。</p><p>……と、上では抽象的でポジティブなことばかり書いてきました。<br>そこで、苦労したことについても取り上げようかと思います。</p><p>私がインターンシップで苦労したこと、それは<strong>自身の体力・時間の確保</strong>です。<br>私は本インターンシップに加えて、大学院での研究活動、各種作品コンテストの制作等を並行してきました。</p><p>なんとなく想像できるかと思いますが、これらすべてを並行して両立することは物理的に難しいです。<br>どれかが中途半端にならないように、スケジューリングとキャパシティの把握には気を付けておくべきかなと思います。</p><p>以上、少しリアルなことについても書きましたが、成長意欲と他人の役に立ちたいという意思を持っておられる方、そしてなにより Microsoft とそのテクノロジーに興味を持っている方は、Microsoft のインターンシップに参加するべきです！<br>他社では味わえない、リアルな体験があなたを待っています！</p><hr><h1 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h1><p>長くなってしまいましたが、インターンシップに参加する方、また参加を検討されている方のお役に立てるのであれば幸いです。<br>皆さんにとって最高の夏になりますように！<strong>Come as you are!</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;＊本記事はこれから日本マイクロソフトのインターンシップ、あるいは就職先として考える学生に向けて、実際に 2021 年のサマーインターンシップに参加してもらった学生に書いてもらいました。&lt;br&gt;インターン生の率直な感想を皆さんにお伝えするために、普段の内容より少々くだけた表現</summary>
      
    
    
    
    
    <category term="チーム紹介" scheme="https://jpdsi.github.io/blog/tags/%E3%83%81%E3%83%BC%E3%83%A0%E7%B4%B9%E4%BB%8B/"/>
    
    <category term="インターンシップ" scheme="https://jpdsi.github.io/blog/tags/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%83%E3%83%97/"/>
    
  </entry>
  
  <entry>
    <title>IE モードのよくあるご質問</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/</id>
    <published>2021-11-21T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.983Z</updated>
    
    <content type="html"><![CDATA[<p>更新履歴:<br>2021/05/14 新規<br>2021/05/19 更新<br>2021/06/15 更新<br>2021/06/23 更新<br>2021/06/30 更新<br>2021/07/02 更新<br>2021/07/19 更新<br>2021/07/30 更新<br>2021/10/01 更新<br>2021/10/19 更新<br>2021/10/20 更新<br>2021/11/22 更新</p><hr><p>みなさんこんにちは。日本マイクロソフトの IE/Edge サポートチームです。</p><p>これまでに「IE モード」について以下の２つのブログ記事を公開していますが、今回はよくあるご質問についてまとめたいと思います。</p><p>新しいバージョンの Microsoft Edge の “IE モード” について<br><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEMode/">https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEMode/</a></p><p>まだデフォルトIE？ 新しい Microsoft Edge を使いませんか？<br><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-about-using-new-edge/">https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-about-using-new-edge/</a></p><p>なお、IE モードに関する公式ドキュメントは以下にまとまっていますので、基本的な内容についてはこちらをご覧ください。</p><p><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode">Internet Explorer (IE) モードとは</a></p><p><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-faq">IE モードのトラブルシューティングと FAQ</a></p><p><a href="https://aka.ms/IEModeGuideJP">(PDF) Microsoft Edge + Internet Explorer モード Getting Started ガイド</a></p><p>※ <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode#prerequisites">こちらの前提条件</a>　に記載のとおり、IE モードは最新の OS 更新と最新の Edge であることが前提となっていますので、おや?? と思ったらまずは最新状態かどうかをご確認ください。</p><p>※ Microsoft Edge の展開または IE モードの構成支援や IE から IE モードへの移行に関する互換性の動作に関して、上記「(PDF) Microsoft Edge + Internet Explorer モード Getting Started ガイド」の「リソース - サポート」項にて、ご利用いただける弊社サポートサービスを紹介しています。<br>お困りのことがありましたらご利用をご検討ください。</p><hr><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><h3 id="互換性に関する情報"><a href="#互換性に関する情報" class="headerlink" title="互換性に関する情報"></a>互換性に関する情報</h3><ul><li><a href="#window-open-%E3%81%AB%E3%82%88%E3%82%8B%E5%AD%90%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AE%E6%89%B1%E3%81%84">window.open による子ウィンドウの扱い</a></li><li><a href="#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E9%A0%98%E5%9F%9F%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA">ウィンドウのクライアント領域のサイズ</a></li><li><a href="#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97%E5%A4%96%E3%81%AB%E9%96%8B%E3%81%91%E3%81%AA%E3%81%84">ウィンドウをデスクトップ外に開けない</a></li><li><a href="#%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%BC-%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E6%99%82%E3%81%AE%E9%80%9A%E4%BF%A1%E3%81%A7%E8%B5%B7%E3%81%93%E3%82%8B%E3%81%93%E3%81%A8">ブラウザー エンジンの切り替え時の通信で起こること</a></li><li><a href="#%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E8%A6%81%E6%B1%82%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E5%88%B6%E9%99%90">クライアント証明書を要求する場合の制限</a></li></ul><h3 id="How-to-Tips"><a href="#How-to-Tips" class="headerlink" title="How to/Tips"></a>How to/Tips</h3><ul><li><a href="#Web-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E6%96%B9%E6%B3%95">Web コンテンツのデバッグ方法</a></li><li><a href="#Cookie-%E3%81%AE%E5%85%B1%E6%9C%89">Cookie の共有</a></li><li><a href="#%E3%83%9A%E3%83%BC%E3%82%B8%E9%81%B7%E7%A7%BB%E6%99%82%E3%81%AE%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%BC-%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88">ページ遷移時のブラウザー エンジンの切り替え</a></li><li><a href="#IE-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%97%E3%81%9F%E3%81%84">IE モードでの表示をテストしたい</a></li><li><a href="#Internet-Explorer-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%86%8D%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E3%82%92%E8%A8%B1%E5%8F%AF">Internet Explorer モードでサイトの再読み込みを許可</a></li><li><a href="#%E3%82%B5%E3%82%A4%E3%83%88%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%82%B5%E3%82%A4%E3%83%88%E3%81%8C-IE-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84">サイトリストで指定しているサイトが IE モードで表示されない</a></li><li><a href="#%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88-%E3%83%A2%E3%83%BC%E3%83%89%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%9F%E3%81%84">ドキュメント モードを確認したい</a></li><li><a href="#%E3%83%8B%E3%83%A5%E3%83%BC%E3%83%88%E3%83%A9%E3%83%AB-%E3%82%B5%E3%82%A4%E3%83%88">ニュートラル サイト</a></li><li><a href="#%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9-%E3%83%90%E3%83%BC%E3%82%92%E9%9D%9E%E8%A1%A8%E7%A4%BA%E3%81%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95">アドレス バーを非表示にする方法</a></li></ul><hr><h2 id="window-open-による子ウィンドウの扱い"><a href="#window-open-による子ウィンドウの扱い" class="headerlink" title="window.open による子ウィンドウの扱い"></a>window.open による子ウィンドウの扱い</h2><p>Microsoft Edge の IE11 モードでは、IE11 のブラウザー エンジンで表示する必要のある Web サイトを Microsoft Edge 上のタブ内で表示しますが、IE モードで表示されている Web コンテンツ内で window.open メソッドを実行して表示される子ウィンドウは新しい Microsoft Edge のウィンドウとなります。</p><p>IE モードでは、Web ページ コンテンツの表示 (レンダリング) やスクリプトは IE11 のブラウザー エンジンによって処理されますが、ブラウザー ウィンドウとしての外枠 (フレーム) 部分は Microsoft Edge によって制御されます。具体的には、以下の図の緑色の枠線内は IE モードによって処理されますが、枠の外側は Microsoft Edge によって処理されます。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/windowopen1.png" alt="ウィンドウの構造"></p><p>上記動作に伴い、window.open(url, windowName, windowFeatures) の引数 windowFeatures で指定する以下のオプションは反映されません。<br>なお、この動作は Microsoft Edge における想定された動作となります。</p><ul><li>location<br>引数 url で指定されるサイトがローカル イントラネットや信頼済みサイト ゾーンで、かつ、引数 windowFeatures において location=no と指定していても、以下のようにアドレス バーは表示されます (ただし、アドレス バーでの操作はできません)。</li></ul><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/windowopen2.png" alt="画面例"></p><ul><li><p>resizable<br>resizable オプション指定は常に無視され、ユーザーはウィンドウ サイズを変更することができます。</p></li><li><p>fullscreen<br>fullscreen オプション指定は常に無視され、全画面表示とはなりません。</p></li><li><p>channelmode<br>channelmode オプション指定は常に無視され、シアター表示とはなりません。</p></li></ul><p>(参考情報)<br>window.open - Web API | MDN<br><a href="https://developer.mozilla.org/ja/docs/Web/API/Window/open">https://developer.mozilla.org/ja/docs/Web/API/Window/open</a></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ウィンドウのクライアント領域のサイズ"><a href="#ウィンドウのクライアント領域のサイズ" class="headerlink" title="ウィンドウのクライアント領域のサイズ"></a>ウィンドウのクライアント領域のサイズ</h2><p>IE モードであっても、ブラウザー ウィンドウとしての外枠 (フレーム) 部分は Microsoft Edge によって制御されます。</p><p>異なるブラウザー内での表示となるため、IE11 デスクトップ アプリと比較して、クライアント領域のサイズがわずかに異なります。<br><span style="color: #ff0000">コンテンツが 1 ピクセル単位で厳密な位置調整をしている場合、テキストの折り返しが発生する、表示しきれない</span>などの問題が生じることがあります。</p><p>クライアント領域のサイズの差異によるレイアウトの崩れが起きていないか、実際に IE モードで動作させての確認を推奨します。<br>もしレイアウトの崩れが発生する場合は、クライアント領域のサイズの差異に影響を受けないようなページ レイアウトへ変更してください。</p><p><strong>2021/10/19 追記:</strong> バージョン 95 より追加される以下のふたつのポリシーにより、IE モードのサイトから window.open メソッドを介して生成されるポップアップ ウィンドウの高さと幅に対するカスタム調整値を指定できます。<br>このカスタム調整値により、指定したピクセル数ぶん既定よりクライアント領域を広げることが可能になります。</p><p>InternetExplorerIntegrationWindowOpenHeightAdjustment<br><a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationwindowopenheightadjustment">https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationwindowopenheightadjustment</a></p><p>InternetExplorerIntegrationWindowOpenWidthAdjustment<br><a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationwindowopenwidthadjustment">https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationwindowopenwidthadjustment</a></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ウィンドウをデスクトップ外に開けない"><a href="#ウィンドウをデスクトップ外に開けない" class="headerlink" title="ウィンドウをデスクトップ外に開けない"></a>ウィンドウをデスクトップ外に開けない</h2><p>IE11 デスクトップ アプリでは、セキュリティ設定の [サイズや位置の制限なしにスクリプトでウィンドウを開くことを許可する] が有効であれば、window.open メソッドや window.moveTo メソッドでデスクトップ外の座標を指定することにより、デスクトップ外でウィンドウを開くことができます。</p><p>IE モードでもこれらの API の動作自体は変わりませんが、別途 Chromium のセキュリティ上の制約により、デスクトップ外に開いたウィンドウはデスクトップ内に戻されてしまいます。そのため、結果としては、<span style="color: #ff0000">IE モードでデスクトップ外にウィンドウを開くことができません。</span></p><p>デスクトップ外のウィンドウで処理を行うのではなく、表示されているウィンドウ内のスクリプトや iframe で処理を行うよう変更してください。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ブラウザー-エンジンの切り替え時の通信で起こること"><a href="#ブラウザー-エンジンの切り替え時の通信で起こること" class="headerlink" title="ブラウザー エンジンの切り替え時の通信で起こること"></a>ブラウザー エンジンの切り替え時の通信で起こること</h2><p>ブラウザー エンジンの切り替え時 (Edge から IE モード、およびその逆) の通信は以下のようになります。</p><ul><li>POST メソッドが GET メソッドになる</li><li>HTTP リクエスト ヘッダーに Referrer が含まれない</li></ul><p>ページ遷移時に POST リクエストではなく GET リクエストが Web サーバーに送信されている場合には、こちらの制限に該当していると言えます。<br>POST リクエストが GET リクエストとなる動作は、異なるプロセス間での POST データのやり取りに対するセキュリティ的な懸念の観点と、技術的な制約からなる想定された動作となり、この動作を変更することはできません。</p><p>元のページから POST リクエストで通信を行った場合は GET リクエストに変わるため、POST リクエストの body に含まれる内容は消失します。<br>対処策としては、データを引き渡す必要がないように、関連する一連のページをすべて IE モードで表示するか、Edge で開けるように統一するかのどちらかとなります。</p><p><strong>2021/10/20 変更:</strong> なお、<a href="https://www.microsoft.com/en-us/microsoft-365/roadmap?filters=Microsoft%20Edge,Rolling%20out,In%20development&searchterms=Microsoft,Edge,post,data">こちらのロードマップにて情報公開されました</a>が、早くて <a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-release-schedule">2021/11/18 の週にリリース予定のバージョン 96</a> から上記の制限がなくなる見込みです。今後の予定についてはロードマップのドキュメントをご覧ください。</p><p><strong>2021/11/22 追記:</strong> <a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-relnote-stable-channel#version-960105429-november-19">バージョン 96</a> から既定の動作として上記の制限がなくなりました。なお、<a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationcomplexnavdatatypes">Internet Explorer モードの開始時または終了時にフォーム データや HTTP ヘッダーを送信するかどうかを構成します</a> ポリシーを使用して、Microsoft Edge と Internet Explorer モードを切り替えるナビゲーションに含めるデータ型を指定できます。</p><p><span style="color: #ff0000;font-weight:bold;">注意 : この追加機能をご利用いただくには以下の更新プログラムの適用が必要です。(リストにない OS バージョンではご利用いただけません)</span><br>Windows 10 バージョン 1909 : <a href="https://support.microsoft.com/ja-jp/topic/2021-%E5%B9%B4-11-%E6%9C%88-9-%E6%97%A5-kb5007189-os-%E3%83%93%E3%83%AB%E3%83%89-18362-1916-91b4647c-9979-4d84-8e64-efc8674e8c1f">KB5007189</a> 以降<br>Windows 10 バージョン 2004 以降、Windows Server 2004/20H2 : <a href="https://support.microsoft.com/ja-jp/topic/2021-%E5%B9%B4-10-%E6%9C%88-26-%E6%97%A5-kb5006738-os-%E3%83%93%E3%83%AB%E3%83%89-19041-1320-19042-1320-%E3%81%8A%E3%82%88%E3%81%B3-19043-1320-%E3%83%97%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC-ccbce6bf-ae00-4e66-9789-ce8e7ea35541">KB5006738</a> 以降<br>Windows 11、Windows Server 2022 : 近日公開予定</p><p>(参考)<br><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-faq#my-application-requires-transferring-post-data-between-ie-mode-and-microsoft-edge-is-this-supported">IE モードのトラブルシューティングと FAQ</a> も併せてご覧ください。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="クライアント証明書を要求する場合の制限"><a href="#クライアント証明書を要求する場合の制限" class="headerlink" title="クライアント証明書を要求する場合の制限"></a>クライアント証明書を要求する場合の制限</h2><p>ここでは、よくあるご質問の 1 つとして IE モードを使用する上で “SSL クライアント認証を使用しており、アクセスするサイトがクライアント証明書を要求する場合” の制限についてお伝えします。</p><p>なお、以下は 2021 年 7 月 30 日現在の Edge の最新版（バージョン 92）の動作をもとに説明していますが、今後、この制限によるお客様へのインパクト状況などを鑑みて、当該動作の変更を再検討する可能性もあります。</p><h3 id="IE-モードを使用している場合に証明書の選択ダイアログが-2-回表示される動作について"><a href="#IE-モードを使用している場合に証明書の選択ダイアログが-2-回表示される動作について" class="headerlink" title="IE モードを使用している場合に証明書の選択ダイアログが 2 回表示される動作について"></a>IE モードを使用している場合に証明書の選択ダイアログが 2 回表示される動作について</h3><p>Edge 上で IE モードを使用し、SSL クライアント認証を使用しており、アクセスするサイトがクライアント証明書を要求する場合、サイトにアクセスしてページが表示されるまでに、クライアント証明書の要求ダイアログが合計 2 回表示される場合があります。</p><p>具体的には、以下の 2 回のリクエストが Web サーバーに送信されるため、その都度 Web サーバーがクライアント証明書を要求するため、合計で 2 回のクライアント証明書選択ダイアログが表示されることになります。</p><p>　1 回目<br>　IE モードを動作させるプロセス（iexplore.exe）が、サイトにアクセスしてクライアント証明書を要求される</p><p>　2 回目<br>　Edge のプロセス（msedge.exe）が、ブラウザーのタブ部分に表示する Favicon ファイル（*）のリクエストのためにサイトにアクセスしてクライアント証明書を要求される</p><p>　*Favicon ファイルとは Web ページのアイコン画像のことであり、Favicon の取得が行えない場合、Edge では Internet Explorer の画像を既定で表示させます</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/favicon.png" alt="Favicon ファイルの表示部分のイメージ"></p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/clientcertificate1.png" alt="iexplore.exe が表示する証明書選択ダイアログ"></p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/clientcertificate2.png" alt="msedge.exe が表示する証明書選択ダイアログ"></p><p>&lt;補足&gt;<br>・2 回目の証明書選択ダイアログにて [キャンセル] をクリックしていただいても、Web ページ自体には影響はありません。ただ、Favicon ファイルは取得できなくなるため、Edge のタブ部分にはアイコン画像が表示されなくなります。</p><p>・2 回目の証明書選択ダイアログにて [キャンセル] をクリックした後、別のページに遷移した場合には、再度 Favicon ファイルを要求するため、再度 2 回目のクライアント証明書選択ダイアログが表示されます。</p><p>・Favicon ファイルは、その他のリソース（HTML, CSS ファイルなどと）同様ローカルにキャッシュされます。一度 Favicon ファイルがローカルにキャッシュされた場合、次回以降、Edge はローカルにあるキャッシュされた Favicon ファイルを使用するため、2 回目の証明書選択ダイアログは表示されなくなります。ただし、ブラウザー終了後にキャッシュを削除する設定、または明示的にキャッシュを削除した場合には、ローカルにキャッシュされた Favicon ファイルが削除されてしまうため、それ以降は再度 2 回目の証明書選択ダイアログが表示されることになります。</p><p>・クライアント証明書を Smart Card などから取得する際には PIN が要求されるため、その場合はクライアント証明書選択ダイアログと PIN 入力画面が 2 回表示される動作となります。</p><h3 id="当該動作と-IE-モードの制限について"><a href="#当該動作と-IE-モードの制限について" class="headerlink" title="当該動作と IE モードの制限について"></a>当該動作と IE モードの制限について</h3><p>Favicon を表示しているウィンドウ部分は、IE モードではなく、Edge が担う部分となるため、通信を発行する主体は Edge となります。なお、他社製のブラウザー同様、この Favicon へのリクエスト自体は想定された動作となります。</p><p>ただ、上記 1 回目, 2 回目がそれぞれのプロセスにて実行されるのは、Edge と IE モードを安全に分離させる上での技術的な制約があるためです。Web ページを表示する IE と、それをホストする Edge を完全に分離してセキュアなブラウジングを維持するための制限であるため当該動作についてお困りの場合には後述の対処策のご検討をお願いいたします。</p><h3 id="対処策について"><a href="#対処策について" class="headerlink" title="対処策について"></a>対処策について</h3><p>2 回目の証明書選択ダイアログを非表示にする場合、以下の 2 つの方法が考えられます。</p><p>　a) Web サーバーにて Favicon ファイルだけ、クライアント証明書を要求しないよう設定を変更する<br>　b) ブラウザーがアクセスするサイトの head タグ内に、ダミーの Favicon ファイルへのリンクを埋め込み、Favicon ファイルへのリクエストの送信を抑止させる</p><p><span style="text-decoration: underline">a について手順イメージ</span><br>IIS マネージャーを使用されている場合には、まず SSL 設定にて [SSL が必要] をオン、そして “クライアント証明書:” を “必要” と指定します。<br>その上で、”コンテンツ ビュー” を選択して、表示される Favicon ファイルを選択します。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/contentsview.png" alt="IIS マネージャー上での &quot;コンテンツ ビュー&quot; のイメージ"></p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/functionview.png" alt="IIS マネージャー上での &quot;機能ビューに切り替え&quot; のイメージ"></p><p>画面右にある [機能ビューに切り替え] を押下し、画面左側のフレームに表示された<br>Favicon ファイルに対して、再度 SSL 設定から [SSL が必要] をオフにします。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/needssl.png" alt="SSL の設定にて、Favicon ファイルにのみ [SSL が必要] をオフにするイメージ"></p><p><span style="text-decoration: underline">b について設定イメージ</span><br>head タグ内に記載するダミーの Favicon ファイルへのリンクは以下となります。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;icon&quot; href=&quot;data:,&quot;&gt;</span><br></pre></td></tr></table></figure><p>例えば IIS であれば、iisstart.htm 内に以下の様に埋め込みます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;icon&quot; href=&quot;data:,&quot;&gt;</span><br><span class="line">&lt;title&gt;IIS Windows&lt;/title&gt;</span><br></pre></td></tr></table></figure><p>&lt;補足&gt;<br>ご参考までとはなりますが、サーバー側での対応策以外にも Edge の設定でもクライアント証明書選択ダイアログが 2 回表示される動作を回避することは可能です。</p><p>シンプルな方法としては、例えば以下の Edge の拡張機能をインストールすることで特定に URL へのリクエストをブロックすることができるため、Favicon ファイルの<br>URL を登録することで 2 回目のクライアント証明書選択ダイアログは表示されません。</p><p>HTTP Request Blocker<br><a href="https://chrome.google.com/webstore/detail/http-request-blocker/eckpjmeijpoipmldfbckahppeonkoeko/related">https://chrome.google.com/webstore/detail/http-request-blocker/eckpjmeijpoipmldfbckahppeonkoeko/related</a></p><p>また、以下の Edge のグループ ポリシーを構成することで、特定のパターンの場合にはクライアント証明書を自動的に送信させることが可能となりますので、これらを構成した<br>場合も、2 回目のクライアント証明書選択ダイアログを表示されないよう構成可能です。</p><p>AutoSelectCertificateForUrls<br><a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#autoselectcertificateforurls">https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#autoselectcertificateforurls</a></p><p>ForceCertificatePromptsOnMultipleMatches<br><a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#forcecertificatepromptsonmultiplematches">https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#forcecertificatepromptsonmultiplematches</a></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="Web-コンテンツのデバッグ方法"><a href="#Web-コンテンツのデバッグ方法" class="headerlink" title="Web コンテンツのデバッグ方法"></a>Web コンテンツのデバッグ方法</h2><p>Microsoft Edge の IE モードでは、IE11 のブラウザー エンジンで表示する必要のある Web サイトを Microsoft Edge 上のタブ内で表示しますが、IE モードで表示されている Web コンテンツに対して、Microsoft Edge の F12 開発者ツールを使用することはできません。<br>IE モードで表示されている Web コンテンツをデバッグするには、IEChooser (Microsoft Edge 開発者ツール) を使用します。具体的には、以下の手順にてデバッグ作業を行います。</p><p>※ このトピックは、Windows 10 および Windows Server 2016、Windows Server 2019 以上の環境を前提としています。Windows 8.1 および Windows Server 2012 R2 以前の Windows プラットフォームについては、恐れ入りますが、後述の方法で IE モードで表示されている Web コンテンツをデバッグすることはできません。</p><ol><li>Microsoft Edge 上で、IE モードの Web コンテンツを表示します。</li><li>%WINDIR%\System32\F12 フォルダー内にある、IEChooser.exe (Windows 10 のバージョン 1709 以前、および Windows Server 2016 では F12Chooser.exe) を起動します。</li><li>以下のようなウィンドウが表示されますので、IE モードで表示されている Web コンテンツをクリックします。<br>なお、以下のウィンドウ内には、IE11 および IE モードで表示されている Web コンテンツのファイル名またはタイトルが表示されますので、その情報を基に対象の Web コンテンツを選択します。</li></ol><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/IEChooser1.png" alt="ターゲットの選択"></p><ol start="4"><li>開発者ツールが起動しますので、Web コンテンツをデバッグします。</li></ol><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/IEChooser2.png" alt="開発者ツール画面"></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="Cookie-の共有"><a href="#Cookie-の共有" class="headerlink" title="Cookie の共有"></a>Cookie の共有</h2><p>以下のドキュメントに詳細がまとまっていますが、<span style="color: #ff0000">セッション Cookie</span> に関して、Edge から IE モードにのみ共有することができます。<br><span style="color: #ff0000">セッション Cookie</span>を逆方向へ (IE モードから Edge へ) 共有することはできません。</p><p>Microsoft Edge から Internet Explorer への Cookie の共有<br><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-add-guidance-cookieshare">https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-add-guidance-cookieshare</a></p><p><span style="color: #ff0000;font-weight:bold;">※ 共有できる Cookie の種類は、有効期限のある永続 Cookie ではなく、有効期間のないセッション Cookie のみですのでご注意ください。</span></p><p>最も理想的な解決方法は、Cookie の共有が必要なコンテンツを全て Edge に移行させることです。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ページ遷移時のブラウザー-エンジンの切り替え"><a href="#ページ遷移時のブラウザー-エンジンの切り替え" class="headerlink" title="ページ遷移時のブラウザー エンジンの切り替え"></a>ページ遷移時のブラウザー エンジンの切り替え</h2><p>以下のポリシーの設定状態によって、IE モードで表示しているページからの遷移時の動作が変わります。</p><p>InternetExplorerIntegrationSiteRedirect<br><a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationsiteredirect">https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationsiteredirect</a></p><p>実際の動きをみてみましょう。(ポリシー変更後はいったん Edge を再起動させてください)</p><p>サイトリストには以下のふたつの URL を登録した状態にします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;site url=&quot;docs.microsoft.com/ja-jp/deployedge/edge-ie-mode&quot;&gt;</span><br><span class="line">&lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;aka.ms&quot;&gt;</span><br><span class="line">&lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br></pre></td></tr></table></figure><p>このサイトリストが反映された状態で以下の A, B の操作をすると、ポリシーの設定状態によって下記のとおりになります。</p><p>A) <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode">https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode</a> を (IE モードで) 開いたあと、ページ左側の目次から任意の別のページを開く<br>B) <a href="https://aka.ms/windows/releaseinfo">https://aka.ms/windows/releaseinfo</a> を開く</p><ul><li><p>未構成もしくは既定<br>A, B) 遷移先のページが Edge モードで表示される。</p></li><li><p>自動ナビゲーションのみを Internet Explorer モードで維持する<br>A) 遷移先のページが Edge モードで表示される。<br>B) 遷移先のページが IE モードで表示される。</p></li><li><p>すべてのページ内ナビゲーション を Internet Explorer モードで維持する<br>A, B) 遷移先のページが IE モードで表示される。</p></li><li><p><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></p></li></ul><hr><h2 id="IE-モードでの表示をテストしたい"><a href="#IE-モードでの表示をテストしたい" class="headerlink" title="IE モードでの表示をテストしたい"></a>IE モードでの表示をテストしたい</h2><p>IE モードのテストのために、毎回サイトリストを書き替えたり、ポリシーを設定しなおすことは大変な手間がかかります。<br>この手間を解消するために、以下の A, B どちらかの方法でメニューから IE モードもしくは Edge モードを切り替え、コンテンツを表示することが可能です。</p><p><span style="color: #ff0000">これらの機能はテストを目的に用意されており、意図しないサイトで IE モードを利用することは、想定しない ActiveX の実行など、セキュリティのリスクがありますので十分ご注意ください。</span></p><p>以下の通知は、サイトリストを使用せずに後述の A, B の方法で手動で IE モードに切り替えた場合に表示されるものです。テスト モードでこのメッセージを抑止する方法はありません。サイトリストを使用して IE モードを利用する場合には表示されません。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/iemodetest2.png" alt="このサイトは Internet Explorer モードで開かれています"></p><p>なお、テスト モードの利用は IE モードが構成されていることが前提となります。以下のポリシーで IE モードを有効に設定してください。</p><pre><code>  [コンピューターの構成] or [ユーザーの構成]   ＋[管理用テンプレート]    ＋[Microsoft Edge]  「Internet Explorer 統合を構成する」有効にし IE モードを選択</code></pre><p>A) <a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationtestingallowed">InternetExplorerIntegrationTestingAllowed (Internet Explorer モードのテストを許可) ポリシー</a> を有効に設定する</p><pre><code>  [コンピューターの構成] or [ユーザーの構成]   ＋[管理用テンプレート]    ＋[Microsoft Edge]  「Internet Explorer モードのテストを許可」有効</code></pre><p>※ 上記のポリシーはバージョン 95 から利用できなくなりますので、バージョン 92 (2021/7/22 の週にリリース予定) からは、<a href="#Internet-Explorer-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%86%8D%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E3%82%92%E8%A8%B1%E5%8F%AF">Internet Explorer モードでサイトの再読み込みを許可</a> をご利用ください。</p><p>B) “--ie-mode-test” オプションを付加して msedge.exe を実行する<br>実行例)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe&quot; --ie-mode-test</span><br></pre></td></tr></table></figure><p>上記 A, B の方法を利用することで、ポリシーの説明にもあるように [その他のツール] 以下に、[サイトを Internet Explorer モードで開く]、[サイトを Edge モードで開く] メニューが表示されます。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/iemodetest.png" alt="選択したモードで開く操作"></p><p>(参考)<br>グループ ポリシーを使用して Internet Explorer 統合を有効にする<br><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-policies#enable-internet-explorer-integration-using-group-policy">https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-policies#enable-internet-explorer-integration-using-group-policy</a></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="Internet-Explorer-モードでサイトの再読み込みを許可"><a href="#Internet-Explorer-モードでサイトの再読み込みを許可" class="headerlink" title="Internet Explorer モードでサイトの再読み込みを許可"></a>Internet Explorer モードでサイトの再読み込みを許可</h2><p>現在この機能はコンシューマー向けであり、Windows 10 Home、あるいはドメイン不参加の Windows 10 Pro で利用可能です。<br>Windows 10 Enterprise エディションやドメイン参加環境の Pro エディションでは使用できません(※) ので、上述の A もしくは B の方法で「サイトを Internet Explorer モードで開く」という機能を使用します。<br>(なお上記は OS のエディションについてであり、Edge 自体に OOOO エディションのようなものはありません。)</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/reload-in-internet-explorer-mode.png" alt="Internet Explorer モードでサイトの再読み込みを許可 設定"></p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/ReloadInIEMode.png" alt="Internet Explorer モードでサイトの再読み込みを許可 メニュー"></p><p>(参考) 以下の注釈部分でも触れています。<br><a href="https://support.microsoft.com/ja-jp/office/microsoft-edge-%e3%81%ae-internet-explorer-%e3%83%a2%e3%83%bc%e3%83%89-6604162f-e38a-48b2-acd2-682dbac6f0de?ui=ja-jp&rs=ja-jp&ad=jp">Microsoft Edge の Internet Explorer モード</a></p><p>※ バージョン 92 (2021/7/22 の週にリリース予定) から、<a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationreloadiniemodeallowed">Internet Explorer モードで未構成のサイトを再度読み込みできるようにする</a> ポリシーを有効にすることで、エンタープライズ環境でも「Internet Explorer モードでサイトの再読み込みを許可」を利用可能になります。</p><p>※ <a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#internetexplorerintegrationreloadiniemodeallowed">Internet Explorer モードで未構成のサイトを再度読み込みできるようにする</a> ポリシーで機能を利用するには、Windows 10 version 1909 では <a href="https://support.microsoft.com/en-us/topic/june-15-2021-kb5003698-os-build-18363-1645-preview-1ecf117e-1f89-40f9-a0a5-ed5766737620">KB5003698</a> 以上、Windows 10 version 2004 / 20H2 / 21H1 では <a href="https://support.microsoft.com/en-us/topic/june-21-2021-kb5003690-os-builds-19041-1081-19042-1081-and-19043-1081-preview-11a7581f-2a01-47d5-ba12-431709ee2248">KB5003690</a> 以上を適用する必要があります。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="サイトリストで指定しているサイトが-IE-モードで表示されない"><a href="#サイトリストで指定しているサイトが-IE-モードで表示されない" class="headerlink" title="サイトリストで指定しているサイトが IE モードで表示されない"></a>サイトリストで指定しているサイトが IE モードで表示されない</h2><p>まずは edge://compat を開いて、Edge が読み込んでいるサイトリストの内容を確認します。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/compat_enterprise.png" alt="Edge が読み込んでいるサイトリストの内容"></p><p>確認ポイント</p><ul><li>URL 一覧の中に、IE モードで表示したい項目が存在するか。</li><li>対象のサイトについて “エンジン” が “IE11” となっているか。</li><li>“エンジン”が “ニュートラル” となっている場合、遷移元のページが IE モードで表示されているか。</li></ul><p>もし想定していない状態であれば、なぜ意図したサイトリストが利用されていないのかを掘り下げていきます。</p><p>確認ポイント</p><ul><li>サイトリストのバージョンを更新したか。</li><li><a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/enterprise-mode-schema-version-2-guidance">エンタープライズ モード スキーマ v.2 ガイダンス</a> に沿っているか。</li><li>シンプルに１つだけ登録した状態であれば、Edge に反映されるか。</li></ul><p>サイトリストの内容には問題がない場合、edge://compat/iediagnostic を開いて、ポリシーの設定状態を確認します。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/compat_iediagnostic.png" alt="診断情報の画面"><br><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/compat_iediagnostic2.png" alt="診断情報の画面"></p><p>確認ポイント</p><ul><li>“Internet Explorer モードの設定” で上記のようになっているかどうか。</li><li>“グループ ポリシーの設定” が想定したとおりになっているかどうか。</li><li>Edge と Windows のそれぞれの更新状態は最新か。</li></ul><p>設定について <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-policies">IE モード ポリシーの構成</a> のドキュメントをみながら構成を確認します。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ドキュメント-モードを確認したい"><a href="#ドキュメント-モードを確認したい" class="headerlink" title="ドキュメント モードを確認したい"></a>ドキュメント モードを確認したい</h2><p>アドレス バーの横にある IE モードのアイコンをクリックすると確認できます。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/docmode.png" alt="ドキュメント モードなどの確認"></p><p>なお、ドキュメント モードは IE11 デスクトップ アプリと同じく <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/dn384051(v=vs.85)">こちらにあるフロー</a> に従って決定されます。</p><p>たとえば、エンタープライズ モードで Web ページを表示するように指定している場合に、対象の Web ページにて meta タグ (X-UA-Compatible) の指定や !DOCTYPE 宣言がないとドキュメント モードは IE5 となります。</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/docmode2.png" alt="エンタープライズ モードでドキュメント モードが IE5 の例"></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ニュートラル-サイト"><a href="#ニュートラル-サイト" class="headerlink" title="ニュートラル サイト"></a>ニュートラル サイト</h2><p>ニュートラルの機能は、<font color="red">その URL に遷移してきた際の直前のブラウザーを維持することです。</font><br>つまり、Edge で遷移してきた場合には Edge を維持し、IE モードで遷移してきた場合には IE モードを維持するにようにできます。</p><p>以下のような場面で利用します。</p><h3 id="認証がうまくいかないケース"><a href="#認証がうまくいかないケース" class="headerlink" title="認証がうまくいかないケース"></a>認証がうまくいかないケース</h3><p>IE モードを利用するとき『認証がうまくいかない』というお問い合せをよくいただきますので、ここで紹介します。</p><p>認証がうまくいかないという話では <a href="../cross-protected-mode-cookie/">保護モードをまたいだ Cookie について</a> という記事で、Azure AD (AAD) 認証を必要とする Web アプリケーションを例としました。<br>対象の Web アプリケーションのドメインと認証時にアクセスする login.microsoftonline.com が異なったセキュリティ ゾーンに属していた場合、認証済みを示す Cookie がリクエストに含まれないことで、ユーザーがログオンしていないと判断され、再度認証を求められてしまうという現象を解説しました。</p><p>IE モードを利用するとき『どの URL を IE モードで表示するか』を設定しますが、対象の Web アプリケーションの URL に加えて、<font color="red"><strong>認証サーバー / シングル サインオン サーバーに対してのアクセスも IE モードで動作するように明示的に構成する</strong></font> 必要があります。<br>認証サーバーも含めておかないと、以下のように IE モードと Edge とで行き来するときに認証に必要な Cookie が共有されずに認証ができません。</p><ol><li>対象の Web アプリケーションの URL にアクセスします。(IE モードで動作します)</li><li>認証のために認証サーバーにアクセスします。(Edge で通信します)</li><li>Edge 側で認証済みを示す Cookie を受け取ります。</li><li>対象の Web アプリケーションにリダイレクトしますが、ここで IE モードに切り替わります。</li><li>IE モードとしては認証済みを示す Cookie を持っていないので、Cookie なしの状態でリクエストすることになります。</li><li>認証済みを示す Cookie がリクエストに含まれないことで、ユーザーがログオンしていないと判断され、再度認証を求められます。</li></ol><p>ただ、認証時に通信するサーバーをすべて IE モードで動作するように明示的に指定してしまうと、逆に Edge でアクセスする必要があるパターンでうまくいきません。</p><p>具体例として、Azure AD (AAD) 認証を必要とする Web アプリケーションとして Office.com を使って試してみます。<br>(本来は IE モードを使わずに Edge でご覧いただくことをおすすめします)</p><p>まずは以下のように対象サイト (office.com) だけを登録してみます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;site url=&quot;office.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br></pre></td></tr></table></figure><p>このサイト リストを読み込んで、office.com にアクセスすると IE モードで開きます。<br>サインインの操作をしてみるとわかりますが、サインインが完了しません。(場合によっては、認証画面の表示がループしてしまうこともあります)<br>これは、上述のとおり、認証済みを示す Cookie がリクエストに含まれないことで、ユーザーがログオンしていないと判断されたためです。</p><p>そこで以下のように、今回の認証時に経由する可能性がある、login.microsoftonline.com, login.windows.net, login.live.com に対しても IE モードになるように &lt;open-in&gt;IE11&lt;/open-in&gt; を設定してみます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;site url=&quot;office.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.microsoftonline.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.windows.net&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.live.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br></pre></td></tr></table></figure><p>これにより、認証時に通信するサーバーすべてが IE モードで動作し、認証完了まで進みます。</p><p>それでは、この状態で <a href="https://outlook.live.com/owa/">Outlook on the web (OWA)</a> を開いてみましょう。<br>OWA は IE モードで開くように登録をしていないので、通常の Edge で開きます。<br>サインインをしようとすると、login.live.com が IE モードとして登録されているので、サインイン画面が IE モードで開きます。<br>アカウント情報を入力してみると…</p><p>エラーになってしまいました :(</p><p><img src="/blog/internet-explorer-microsoft-edge/ie-mode-faq/owa.png" alt="サインインのエラー画面"></p><p>認証サーバー (login.microsoftonline.com, login.windows.net, login.live.com) を IE モードの対象から外せば、OWA は開きます。<br>でもそうすると、先ほどの Office.com がまたダメになってしまいます。</p><p>どちらもうまくいくように構成するにはどうしたらよいか…</p><p><strong><font color="red">Edge と IE のどちらからも経由され得るサイトを『ニュートラル』に登録することで解決できます！</font></strong></p><p>冒頭に記述したように、ニュートラルの機能は、<font color="red">その URL に遷移してきた際の直前のブラウザーを維持することです。</font><br>つまり、Edge で遷移してきた場合には Edge を維持し、IE モードで遷移してきた場合には IE モードを維持するにようにできます。</p><p>それでは、先ほどのサイト リストを以下のように認証サーバー (login.microsoftonline.com, login.windows.net, login.live.com) に対してそれぞれ &lt;open-in&gt;None&lt;/open-in&gt; に変えます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;site url=&quot;office.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;IE11&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.microsoftonline.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;None&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.windows.net&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;None&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br><span class="line">&lt;site url=&quot;login.live.com&quot;&gt;</span><br><span class="line">    &lt;open-in&gt;None&lt;/open-in&gt;</span><br><span class="line">&lt;/site&gt;</span><br></pre></td></tr></table></figure><p>こうすると、IE モードで開く Office.com から認証サーバーにアクセスするときは IE モードが維持され、Edge で開く OWA から認証サーバーにアクセスするときは Edge が維持されますので、認証処理の途中でモードが変わってしまうことを回避できます。</p><p>なお、下記ドキュメントの「ニュートラル サイトを構成する」の部分にも記載がありますが、上記の例のように Edge と IE のどちらからも経由され得るサイトはすべてニュートラルに登録する必要があります。</p><p>エンタープライズ モード サイト リストでのサイトの構成<br><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-sitelist">https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-sitelist</a></p><p>一時的な対応策としては [Internet Explorer モード ページから起動したときに未構成サイトへの「ページ内」ナビゲーションの動作を指定する] というポリシーが利用できますので、状況に合わせた対応をご検討いただければと思います。</p><p>Internet Explorer モードでページ内ナビゲーションを保持する<br><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-learnmore-inpage-nav">https://docs.microsoft.com/ja-jp/deployedge/edge-learnmore-inpage-nav</a></p><h2 id="アドレス-バーを非表示にする方法"><a href="#アドレス-バーを非表示にする方法" class="headerlink" title="アドレス バーを非表示にする方法"></a>アドレス バーを非表示にする方法</h2><p><strong>2021/10/20 追加:</strong><br><a href="#window-open-%E3%81%AB%E3%82%88%E3%82%8B%E5%AD%90%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AE%E6%89%B1%E3%81%84">window.open による子ウィンドウの扱い</a> で説明している通り、Edge では基本的にアドレス バーを非表示にできません。<br>ただし、Edge を <a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-configure-kiosk-mode">キオスク モード</a> で起動したり、サイトを <a href="https://docs.microsoft.com/ja-jp/microsoft-edge/progressive-web-apps-chromium/">PWA</a> としてインストールしたりすることで、そのサイトのアドレス バーは表示されなくなります。</p><p>また、Chromium で提供している <a href="https://peter.sh/experiments/chromium-command-line-switches/#app">–app コマンドライン スイッチ</a> を msedge.exe に指定して起動できる “アプリケーション モード” でも、そのサイトのアドレス バーは表示されなくなります。<br>アプリケーション モードは、ユーザーが Web ページをコンピューター上のネイティブ アプリケーションに近い外観で動作させることを可能にします。つまり、ツール バーやアドレス バーをすべて非表示にして、Web ページの本文を中心に表示します。<br>この機能は Edge で開発を行っているわけではありませんが、以下の通り、–app コマンドライン スイッチは現状のまま引き続き Edge で利用できます。</p><blockquote><p><strong>Microsoft Edge における “–app” コマンドライン スイッチのサポート</strong><br>私たちは、Google が Chromium から “–app” コマンドライン スイッチを削除できるかどうかを判断するためのオープンなバグを持っていることを理解しています。<br>Google は現在、このスイッチが使用されているかどうか、また、このスイッチを削除することでお客様にどのような影響があるかを判断するために、より多くの使用情報を収集しています。<br>Google が “–app” スイッチの廃止を決定した場合でも、Microsoft Edge 製品チームは、Edge 製品でこのスイッチを提供し続けることをお約束し、お客様のためにこの機能の継続性を確保します。</p><p>Jason McConnell<br>Microsoft Edge プログラム マネージャー</p></blockquote><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更新履歴:&lt;br&gt;2021/05/14 新規&lt;br&gt;2021/05/19 更新&lt;br&gt;2021/06/15 更新&lt;br&gt;2021/06/23 更新&lt;br&gt;2021/06/30 更新&lt;br&gt;2021/07/02 更新&lt;br&gt;2021/07/19 更新&lt;br&gt;2021/07/3</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="IE モード" scheme="https://jpdsi.github.io/blog/tags/IE-%E3%83%A2%E3%83%BC%E3%83%89/"/>
    
  </entry>
  
  <entry>
    <title>新しい Microsoft Edge での file プロトコルの制限について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/FileProtocol/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/FileProtocol/</id>
    <published>2021-11-17T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.931Z</updated>
    
    <content type="html"><![CDATA[<p>更新履歴:<br>2021/10/06 更新<br>2021/11/18 更新</p><hr><p>こんにちわ！</p><p>今回は、新しい Microsoft Edge での file: プロトコルの制限についてお知らせします。<br>Chromium ベースの新しい Microsoft Edge では、セキュリティ上の制限により file: プロトコルのリンクは機能しません。<br>この制限は Chromium における制限となりますが、新しい Microsoft Edge 側でこの制限を解除可能なオプションを提供する予定は現状ありません。</p><blockquote><p>File system search result link does not open on Firefox or Chrome<br><a href="https://support.google.com/gsa/answer/2664790?hl=en">https://support.google.com/gsa/answer/2664790?hl=en</a></p></blockquote><p>新しい Microsoft Edge においても file プロトコルが使用できるようにするには、サードパーティー製の拡張機能ですが <a href="https://chrome.google.com/webstore/detail/enable-local-file-links/nikfmfgobenbhmocjaaboihbeocackld">Enable local file links</a> などのご利用や、<a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode">IE モード</a> のご利用をご検討ください。</p><p>以下に動作の具体例をあげます。</p><hr><p>A : アドレスバーに file:// の URL を直接入力して開く場合<br>外部からのアクセスではなく、ファイルを直接開く動作となります。<br>そのため、ファイルを開くことが可能です。</p><p>B : ローカル マシンに保存している HTML ファイルを Microsoft Edge (Chromium) で開いている場合<br>外部ではなくローカル ファイルからのアクセスのため、file:// のリンク先を開くことが可能です。</p><p>C : <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode">IE モード</a> を利用した場合<br>端末にインストールされている Internet Explorer を利用してサイトを開きます。<br>Internet Explorer の単体利用時と同様に file:// のリンク先を開くことが可能です。</p><hr><p>※ IE モードについて、以下の記事もご参照いただければと思いますが、ご利用に関してお困りなことがありましたら私たちサポートまでお問い合わせください！</p><p>新しいバージョンの Microsoft Edge の “IE モード” について<br><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEMode/">https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEMode/</a></p><p><strong>2021/10/06 追記:</strong> なお、<a href="https://www.microsoft.com/ja-jp/microsoft-365/roadmap?filters=Microsoft%20Edge,Rolling%20out,In%20development&searchterms=file,links">こちらのロードマップにて情報公開されました</a>通り、早くて <a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-release-schedule">2021/10/21 の週にリリース予定のバージョン 95</a> にて file:// のリンクを有効にできる新しいポリシーを追加する見込みです。今後の予定についてはロードマップのドキュメントをご覧ください。</p><p><strong>2021/11/18 追記:</strong> <a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-relnote-stable-channel#version-950102030-october-21">2021/10/21 にリリースされたバージョン 95</a> にて、”ローカル イントラネット” ゾーン、かつ HTTPS のサイトに限って、file:// のリンク押下した場合に、リンクの指定対象ファイル (もしくは対象フォルダ) の一階層上のフォルダ (親フォルダ) をエクスプローラーで開くことを可能とする <a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-policies#intranetfilelinksenabled">IntranetFileLinksEnabled ポリシー</a> をリリースしました。セキュリティ上の観点から、ファイルを直接開くわけではなく一階層上のフォルダを開く動作となっています。予めご了承ください。</p><p>短いですが、今回は以上です。<br>それでは、また次回！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更新履歴:&lt;br&gt;2021/10/06 更新&lt;br&gt;2021/11/18 更新&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;こんにちわ！&lt;/p&gt;
&lt;p&gt;今回は、新しい Microsoft Edge での file: プロトコルの制限についてお知らせします。&lt;br&gt;Chromium ベースの新し</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="Chromium" scheme="https://jpdsi.github.io/blog/tags/Chromium/"/>
    
  </entry>
  
  <entry>
    <title>&lt;Career&gt;&lt;第一弾&gt; Developer Support Internet (DSI) ってどのような製品の技術サポートをしているの？</title>
    <link href="https://jpdsi.github.io/blog/general/career1-dsi-technologies/"/>
    <id>https://jpdsi.github.io/blog/general/career1-dsi-technologies/</id>
    <published>2021-11-01T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.931Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Developer Support Internet (DSI) サポート チームの大嶋です。 </p><p>この度は少し前から <a href="https://careers.microsoft.com/us/en/job/1113264/Support-Engineer-Developer">我々の DSI チームで採用活動が再開</a> したこともあり、ぜひ我々のチーム DSI ってどういうチームなのか？を知っていただきたいという思いから、チーム紹介の Blog を開始します！</p><p>今回は第一弾ということで、シンプルに我々のチームがサポートしている技術製品を紹介し、テクニカルな面にフォーカスしお話しします。</p><p>Developer Support チームということで、お客様の課題解決のために、技術的に幅広く難易度の高い様々な開発系のお問い合わせに触れられることが醍醐味の 1 つであり、それぞれカテゴリごとに技術的な面白さを少しばかりご紹介したいと思います。ちなみに、我々のチームは現在はフルリモートで働いており、既に完全リモートワークを開始して約 1 年半以上が経ちます。(2021 年 11 月現在)</p><hr><h3 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h3><ul><li><a href="#Developer-Support-Internet-%E3%81%8C%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%99%E3%82%8B%E6%8A%80%E8%A1%93%E3%82%AB%E3%83%86%E3%82%B4%E3%83%AA%E3%81%AF">Developer Support Internet がサポートする技術カテゴリは？</a><ul><li><a href="#%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E9%A0%98%E5%9F%9F">ブラウザ領域</a></li><li><a href="#Web-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%83%BBWeb-%E3%82%A2%E3%83%97%E3%83%AA%E9%A0%98%E5%9F%9F">Web サーバー・Web アプリ領域</a></li><li><a href="#Azure-%E9%A0%98%E5%9F%9F">Azure 領域</a></li></ul></li><li><a href="#%E6%9C%80%E5%BE%8C%E3%81%AB">最後に</a><ul><li><a href="#%E3%81%BE%E3%81%A8%E3%82%81">まとめ</a></li><li><a href="#%E7%8F%BE%E5%9C%A8%E6%88%91%E3%81%AE%E3%83%81%E3%83%BC%E3%83%A0%E3%81%AF%E6%8E%A1%E7%94%A8%E4%B8%AD%E3%81%A7%E3%81%99">現在、我々のチームは採用中です！！</a></li></ul></li></ul><hr><h2 id="Developer-Support-Internet-がサポートする技術カテゴリは？"><a href="#Developer-Support-Internet-がサポートする技術カテゴリは？" class="headerlink" title="Developer Support Internet がサポートする技術カテゴリは？"></a>Developer Support Internet がサポートする技術カテゴリは？</h2><p>その名の通り Developer Support 部門の Internet 周りを担当しているチームのため、主な範囲は Web 系の技術全般と多種多様です。</p><p>まず、大きく分けて、オンプレミス製品は Web のクライアントサイドとして Web ブラウザ、サーバーサイドとして Web サーバー・アプリの 2 つのカテゴリがあります。更に、オンプレミス製品のみならず、以下に挙げた Azure 製品カテゴリも一部サポートしております。</p><ul><li>ブラウザ : Chromium ベースの Microsoft Edge, WebView2, IE モード, Internet Explorer etc…</li><li>Web サーバー・Web アプリ : IIS (Internet Information Services), ASP.NET, ASP.NET Core, Blazor etc… </li><li>Azure : Azure Bot Service, Bot Framework SDK, Azure SignalR Service, Azure PubSub Service</li></ul><p>各製品の開発はグローバルで行っているため海外の各関連部門と連携する機会もあり、楽しみの 1 つです。また、DSI のサポートエンジニアの中でも各カテゴリの中で得意領域等がありますが、Web ブラウザ領域は現在 DSI チーム全員で担当している領域です。</p><p>それでは、それぞれの紹介を深掘りしていきましょう。</p><h3 id="ブラウザ領域"><a href="#ブラウザ領域" class="headerlink" title="ブラウザ領域"></a>ブラウザ領域</h3><p>Web ブラウザのサポート領域は Chromium ベースの <a href="https://www.microsoft.com/ja-jp/edge?r=1">Microsoft Edge</a>, <a href="https://docs.microsoft.com/ja-jp/microsoft-edge/webview2/">Microsoft Edge WebView2</a>, Internet Explorer、それに付随するコンポーネントとなり、多岐に渡ります。また、Chromium ベースの 新しい Microsoft Edge は Windows だけでなく、Linux や Mobile (Android や iOS) でも動作します。</p><p>そのため、調査・解析にあたって、技術的に触れることができる領域というのもそれに伴い、数えきれないほど多様なエリアとなります。Microsoft Edge の加速化に伴い、お問い合わせも日々増加傾向にあり、以前より更にお問い合わせ内容の幅も大きく広がっています。また Web ブラウザ領域は現在 DSI チーム全員で担当していることもあり、それぞれのエンジニアが感じる魅力も異なるのでは？という疑問から実際に複数人にヒアリングをしてみました。以下に回答いただいた魅力の一部を紹介します。</p><ul><li>ブラウザは世界中のユーザーが、必ず利用する様々なサービスの入り口となる存在で必要不可欠であり、OS に匹敵する巨大なプラットフォームで最先端の Web 技術に触れられる</li><li>通信ログやパケット、メモリダンプ等の様々なレイヤーの情報を状況毎に多角的に判断・利用し、最終的にお客様の問題解決ができたことに喜びを感じる</li><li>Microsoft Edge も採用した Chromium のサポートを通じてグローバルのモダンな Web 業界の発展に貢献できる</li><li>ブラウー サポートの職という希少なプロフェッショナルとして働くことができ、世界的なシェア向上に貢献できる</li><li>バージョンアップのスピードが加速しており、大変な面もある反面、より新しいことができるようになる瞬間を身近に感じることができる</li></ul><p>ここに記載出来ない魅力も沢山あります。少しでも興味を持ち、アプリケーションの中でも稀有なブラウザに興味がある、Edge のシェアを伸ばしたい、Web 技術の発展の一端に触れたいといった方はぜひ我々と一緒に働きましょう！下部の応募サイトにてお待ちしております。</p><h3 id="Web-サーバー・Web-アプリ領域"><a href="#Web-サーバー・Web-アプリ領域" class="headerlink" title="Web サーバー・Web アプリ領域"></a>Web サーバー・Web アプリ領域</h3><p>それでは今度は別のカテゴリに移ります。我々のサポートする Web サーバー・Web アプリ領域も近年、実は Web ブラウザ同様、多様化しております。</p><p>まず、古くからサポートしている Microsoft の各種 Web 製品を支えている以下の 3 つが挙げられます。</p><ul><li><a href="https://docs.microsoft.com/en-us/iis/get-started/introduction-to-iis/introduction-to-iis-architecture">IIS (Windows に標準搭載されている歴史の長い Web サーバー製品)</a></li><li><a href="https://www.iis.net/downloads/microsoft/application-request-routing">ARR (Application Request Routing / リバース プロキシ・L7 Load Balancer の機能を搭載するサービス)</a></li><li><a href="https://docs.microsoft.com/ja-jp/aspnet/overview">ASP.NET (.NET Framework ベースの Web アプリケーションのプラットフォーム/フレームワーク)</a></li></ul><p>上記の各コンポーネントは各種 Office 製品や Azure 製品の基盤としても利用されているものもあり、クラウド化が進む現在でも、重要な技術の 1 つです。また、内部的に Windows OS の各標準コンポーネントを利用していることから、関連チームともコラボレーションをしながら OS のネットワークレイヤーや認証等の幅広い知識にも触れることができます。また、Classic ASP や WCF といったテクノロジーもサポートしています。</p><p>更に近年は、Windows OS 上の Web アプリ開発には留まりません。Microsoft はクロス プラットフォーム化にも力を入れており、DSI ではクロス プラットフォームで動作する以下の製品をサポートしています。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-5.0">ASP.NET Core (MVC, Web API, Razor, Blazor WebAssembly etc…)</a></li><li><a href="https://docs.microsoft.com/ja-jp/aspnet/core/signalr/introduction?view=aspnetcore-5.0">ASP.NET Core SignalR</a></li><li><a href="https://docs.microsoft.com/ja-jp/aspnet/core/grpc/?view=aspnetcore-5.0">gRPC on .NET</a></li></ul><p>macOS や Linux 上、もちろん Linux コンテナ上でも動作が可能な .NET Core/.NET ベースの ASP.NET Core という Web アプリ開発のプラットフォーム、それに付随する MVC や Web API 等の ASP.NET Core 用のフレームワークをサポートしております。ASP.NET と異なり、ASP.NET Core は IIS にも Windows OS にも縛られません！</p><p>更には、サーバーサイドにも留まらず、WebAssembly (wasm) を活用したフロントエンド フレームワーク Blazor wasm もサポートしており、近年注目が集まる wasm の最新技術の一端に触れることもできます。加えて、WebSockets を含む双方向通信をサポートするための ASP.NET Core SignalR というフレームワークや .NET の gRPC もサポートしており、多様化するプロトコルもサポート範囲となります。</p><h3 id="Azure-領域"><a href="#Azure-領域" class="headerlink" title="Azure 領域"></a>Azure 領域</h3><p>本チームの特徴は、上記のオンプレミス製品に加えて、以下の Azure クラウド製品にも触れることができる点です。</p><ul><li><a href="https://azure.microsoft.com/ja-jp/services/bot-services/">Azure Bot Service</a> / <a href="https://docs.microsoft.com/ja-jp/azure/bot-service/bot-service-overview?view=azure-bot-service-4.0">Bot Framework SDK</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-overview">Azure SignalR Service</a> / <a href="https://azure.microsoft.com/ja-jp/services/web-pubsub/#overview">Azure PubSub Service (Preview)</a></li></ul><p>Azure Bot Service と Bot Framework SDK を利用することで、Bot アプリを開発・運用が可能です。Web Chat という Web アプリ用のクライアントに加えて、Teams やサードパーティ製の LINE や Slack 等様々なクライアントチャンネルをサポートしていることも特徴の一つです。</p><p>また、Bot Framework SDK は C# (.NET Core) だけでなく、JavaScript (Node.js) や Python といった別のプログラミング言語に触れることもできます。</p><p>加えて、Azure Bot Service を利用している場合の多くは <a href="https://azure.microsoft.com/ja-jp/services/app-service/web/">Azure Web Apps という PaaS サービス)</a> に Bot アプリをホストしてお客様が多いことから、Azure Web Apps の専任チームと連携をしながら、PaaS の知識も蓄えることができます。また、Azure 製品という側面から、他の Azure PaaS、Azure Net、Azure AI 部門等の他の各 Azure 製品のサポート チームと連携が必要不可欠で、それらの Cloud に関する知識も得られます。</p><p>更に、Azure SignalR Service や Azure PubSub Service (Preview) 製品をサポートしており、WebSockets を含む双方向通信等の知識が必要となる Azure マネージドな製品の技術支援も行っております。</p><hr><h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>Developer Support Internet チームでは、技術的な面は勿論のこと、技術以外にも伝えきれないほどの魅力、多くのやりがいがまだまだございます。長くなってしまうので、我々のチームならではの上記以外の部分のご紹介は次回以降に持ち越しますが、”Microsoft のテクニカルサポートの魅力や一般的な仕事内容自体が気になる” という方向けに、同じサポート部門の方の以下 2 つの記事のご紹介をして終わろうと思います。</p><p><a href="https://jpaztech.github.io/blog/other/technical_support_engineer_explained/">なぜ今サポートエンジニアが熱いか</a><br><a href="https://www.microsoft.com/ja-jp/mscorp/mid-career/interview-rika.aspx">Escalation Engineer の Rika さんのインタビュー</a></p><p>さらに、動画でも我々テクニカルサポート部門の仕事をご紹介してます。ぜひこちらもご覧ください。</p><p><a href="https://youtu.be/xj4Ovso7M4U">マイクロソフト カスタマーサービス＆サポート ‐ How we deliver best customer experience | 日本マイクロソフト</a></p><h3 id="現在、我々のチームは採用中です！！"><a href="#現在、我々のチームは採用中です！！" class="headerlink" title="現在、我々のチームは採用中です！！"></a>現在、我々のチームは採用中です！！</h3><p>最後に、我々 <strong>Developer Support Internet チームも、採用活動中</strong>です。少しでもご興味を持っていただいた方は、以下から現在ご応募をお待ちしております！</p><p><a href="https://careers.microsoft.com/us/en/job/1113264/Support-Engineer-Developer">Developer Support Internet (DSI) チームの採用応募ページ</a><br>※ あくまで現在 11/2 時点で採用活動中であり、タイミングによって採用が終了している、上記リンクが有効でない可能性もございますので、その点ご了承ください。</p><p>そして、本ブログ内容を見て、まだその分野に詳しくない…技術的なスキルに不安がある…という方、少しでも上記の内容に興味があれば、ぜひご応募をお待ちしております。技術的な部分は本業務を通じて学べる環境がありますし、チームでフォローしていますのでご安心ください！そのため、上記の募集要項に満たないけど、興味がありぜひ受けてみたいという方も、まずはご応募をご検討ください！</p><p>なお、本チームだけではなく、Microsoft やテクニカルサポートの仕事等に興味が出てきたという方は、Microsoft では様々な多種多様な職種を募集しております。ぜひ以下の募集から興味のあるチームを探してみて頂ければと思います。</p><p><a href="https://careers.microsoft.com/us/en">Microsoft Careers - Microsoft 採用検索サイト</a><br><a href="https://www.microsoft.com/ja-jp/mscorp/mid-career/event.aspx">サポートエンジニア - キャリアイベント</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。Developer Support Internet (DSI) サポート チームの大嶋です。 &lt;/p&gt;
&lt;p&gt;この度は少し前から &lt;a href=&quot;https://careers.microsoft.com/us/en/job/1113264/Support-</summary>
      
    
    
    
    
    <category term="Azure Bot Service" scheme="https://jpdsi.github.io/blog/tags/Azure-Bot-Service/"/>
    
    <category term="チーム紹介" scheme="https://jpdsi.github.io/blog/tags/%E3%83%81%E3%83%BC%E3%83%A0%E7%B4%B9%E4%BB%8B/"/>
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
  </entry>
  
  <entry>
    <title>Enterprise Mode Site List (サイトリスト) のお問い合わせの調査に必要な基本的なログ情報について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/</id>
    <published>2021-09-06T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.971Z</updated>
    
    <content type="html"><![CDATA[<p>みなさん、こんにちは!</p><p>サイトにアクセスした際に、Edge や IE モードなど指定したブラウザでページを表示させるために設定する <strong>Enterprise Mode Site List (以下、サイトリスト)</strong> に関連して、<br>「設定したのにうまく反映されない」、「IE モードで開かれない」、<br>「Edge で開かれず IE ブラウザで開かれる」など、様々なお問い合わせをいただいております。</p><p>サイトリストに関するお問い合わせは多岐に及び、その原因もお客様の環境によって様々なため、画一的にこのログを取得すれば原因がわかるということはございません。</p><p>ただし、お問い合わせいただいた最初の段階で、<strong>問題の把握</strong> のためによく取得をご依頼するログがあるため、それを <strong>サイトリストの調査に必要な基本的なログ情報</strong> として以下おまとめいたしました。</p><p>事象が発生した際は、こちらをご参考にログ採取を行い、弊社サポートチームにご提供いただけますと幸いです。</p><p>調査を加速させ、翻ってお客様の問題解決までの時間を短くすることが可能になります。<br>(※ なおあくまでもこちらのログ取得は <strong>問題の把握</strong> のために利用するものであり、こちらのログをいただくことによって <strong>原因究明</strong> を保証するものではございません。状況によってはさらなるログ採取をご依頼することがございますので、予めご了承ください。)</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次<!-- omit in toc --></h2><ul><li><a href="#%E5%8F%96%E5%BE%97%E3%81%84%E3%81%9F%E3%81%A0%E3%81%8D%E3%81%9F%E3%81%84%E3%83%AD%E3%82%B0%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">取得いただきたいログについて</a><ul><li><a href="#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">事前準備が必要なものについて</a><ul><li><a href="#IEDigest-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">IEDigest のインストール</a></li></ul></li></ul></li><li><a href="#1-%E4%BA%8B%E8%B1%A1%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E7%99%BA%E7%94%9F%E9%A0%BB%E5%BA%A6%E3%82%84%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AA%E3%81%A9%E9%96%A2%E9%80%A3%E6%83%85%E5%A0%B1">1 事象に関連する発生頻度や発生するサイトなど関連情報</a></li><li><a href="#2-PowerPoint-%E3%81%AE%E5%8B%95%E7%94%BB%E6%92%AE%E5%BD%B1%E3%81%BE%E3%81%9F%E3%81%AF%E3%82%B9%E3%83%86%E3%83%83%E3%83%97%E8%A8%98%E9%8C%B2%E3%83%84%E3%83%BC%E3%83%AB%E3%81%AB%E3%82%88%E3%82%8B%E4%BA%8B%E8%B1%A1%E3%81%AE%E8%A8%98%E9%8C%B2">2 PowerPoint の動画撮影またはステップ記録ツールによる事象の記録</a><ul><li><a href="#PowerPoint-%E3%81%AE%E5%8B%95%E7%94%BB%E6%92%AE%E5%BD%B1%E3%81%AB%E3%82%88%E3%82%8B%E4%BA%8B%E8%B1%A1%E3%81%AE%E8%A8%98%E9%8C%B2%E6%96%B9%E6%B3%95">PowerPoint の動画撮影による事象の記録方法</a></li><li><a href="#PSR-%E3%81%AB%E3%82%88%E3%82%8B%E4%BA%8B%E8%B1%A1%E3%81%AE%E8%A8%98%E9%8C%B2%E6%96%B9%E6%B3%95">PSR による事象の記録方法</a></li><li><a href="#PSR-%E3%81%AE%E4%BA%8B%E5%89%8D%E8%A8%AD%E5%AE%9A">PSR の事前設定</a></li></ul></li><li><a href="#3-IEDigest-%E3%81%AB%E3%82%88%E3%82%8B%E3%83%AD%E3%82%B0%E5%8F%96%E5%BE%97">3 IEDigest によるログ取得</a></li><li><a href="#4-edge-policy-%E3%81%AB%E3%82%88%E3%82%8B-Edge-%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%8F%96%E5%BE%97">4 edge://policy による Edge に関連するポリシー設定の取得</a></li><li><a href="#5-edge-compat-iediagnostic-%E3%81%AB%E3%82%88%E3%82%8B-%E3%82%B5%E3%82%A4%E3%83%88%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%8F%96%E5%BE%97">5 edge://compat/iediagnostic による サイトリストに関連するポリシー設定の取得</a></li><li><a href="#6-%E3%82%B5%E3%82%A4%E3%83%88%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A8%E3%81%97%E3%81%A6%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B-xml-%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%BC%E3%83%9E%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">6 サイトリストとして設定されている .xml のスキーマファイル</a><ul><li><a href="#edge-compat-iediagnostic-%E3%81%A7%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88">edge://compat/iediagnostic で検索する場合</a></li><li><a href="#GPO-%E3%81%A7%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88">GPO で検索する場合</a></li><li><a href="#%E3%83%AC%E3%82%B8%E3%82%B9%E3%83%88%E3%83%AA%E3%81%A7%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88">レジストリで検索する場合</a></li></ul></li><li><a href="#%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">アップロードについて</a></li></ul><h2 id="取得いただきたいログについて"><a href="#取得いただきたいログについて" class="headerlink" title="取得いただきたいログについて"></a>取得いただきたいログについて</h2><p>取得いただきたいログは以下 6 点ございます。</p><ul><li>1 事象に関連する発生頻度、発生するサイトなど関連情報</li><li>2 PowerPoint 等による動画撮影、または、ステップ記録ツールによる事象の記録</li><li>3 IEDigest による適用されている GPO や レジストリ設定</li><li>4 edge://policy による Edge に関連するポリシー設定</li><li>5 edge://compat/iediagnostic による サイトリストに関連するポリシー設定</li><li>6 サイトリストとして設定されている .xml のスキーマファイル</li></ul><p>それぞれについて説明を行います。</p><h3 id="事前準備が必要なものについて"><a href="#事前準備が必要なものについて" class="headerlink" title="事前準備が必要なものについて"></a>事前準備が必要なものについて</h3><p>取得いただきたいログの中で、唯一事前にインストールが必要なのが IEDigest です。</p><h4 id="IEDigest-のインストール"><a href="#IEDigest-のインストール" class="headerlink" title="IEDigest のインストール"></a>IEDigest のインストール</h4><p>IEDigest のインストーラを以下の URL よりダウンロードします。</p><ul><li>IEDigest : <a href="https://aka.ms/iedigest">https://aka.ms/iedigest</a></li></ul><p>リンクをクリックすると自動的にダウンロードが開始されます。</p><p>端末によってはダウンロード時に以下のような警告が表示される場合がございますが、その場合は [もっと見る] からダウンロードを行ってください。 </p><p><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-10-11-16-55-02.png"></p><p>ダウンロード後、以下の画像のように 2 つのファイルが確認できる場合は、iedigest.exe を利用します。</p><p><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-10-11-16-53-48.png"></p><p>iedigest.exe を起動すると、最初はライセンスに同意するかと表示されますので、[Agree] を選択します。</p><p><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-10-11-16-56-16.png"></p><p>事前準備はこれにて完了です。</p><h2 id="1-事象に関連する発生頻度や発生するサイトなど関連情報"><a href="#1-事象に関連する発生頻度や発生するサイトなど関連情報" class="headerlink" title="1 事象に関連する発生頻度や発生するサイトなど関連情報"></a>1 事象に関連する発生頻度や発生するサイトなど関連情報</h2><p>我々サポートチームが調査をするにあたって、「何をお客様が問題として捉えているのか、そして理想的な状態はどのようなものか」を明確に把握する必要がございます。  </p><p>そのため、弊社にご連絡をする際には以下の 2 択の質問についてメモ帳などにコピーペーストを行い、それぞれの質問についてお答えしたファイルをご提供いただけますと幸いです。</p><ul><li>事象が発生する頻度は 100% か [YES/NO]</li><li>複数のサイトにおいて事象は発生するか、それとも単一のサイトにおいてのみ事象は発生するか [複数/単一]</li><li>事象はユーザー全員で発生するか、複数のユーザーで発生するか、それとも単一のユーザーのみか [全員/複数/単一 複数の場合はその共通項]</li><li>事象が発生するサイトのパスはどこか [http[s]://&lt;path&gt;]</li><li>事象が発生せず問題なくサイトリスト通り読み込めるサイトはあるか [YES/NO, YES の場合はサイトのパス http[s]://&lt;path\ ]</li><li>いつから発生したか [XXXX/XX/XX XX:XX]</li><li>事象が発生した以前にはサイトリストを設定できていたのか [YES/NO]</li><li>事象が発生する以前と以後でなにか設定を行ったか [YES/NO, YES の場合はその詳細]</li></ul><p>特に時間については非常に重要なため、できる限り正確な日時をお答えください。まとめたら <strong>CheckList.txt</strong> などの名前としてテキストファイルを保存します。</p><h2 id="2-PowerPoint-の動画撮影またはステップ記録ツールによる事象の記録"><a href="#2-PowerPoint-の動画撮影またはステップ記録ツールによる事象の記録" class="headerlink" title="2 PowerPoint の動画撮影またはステップ記録ツールによる事象の記録"></a>2 PowerPoint の動画撮影またはステップ記録ツールによる事象の記録</h2><p>我々サポートチームが調査をするにあたって、「何をお客様が問題として捉えているのか、そして理想的な状態はどのようなものか」を明確に把握する必要がございます。<br>そのために事象を動画などで記録することをお願いしております。</p><p>そのために利用するのが、<strong>PowerPoint による動画撮影</strong> または <strong>ステップ記録ツール (以下、PSR)</strong> です。</p><h3 id="PowerPoint-の動画撮影による事象の記録方法"><a href="#PowerPoint-の動画撮影による事象の記録方法" class="headerlink" title="PowerPoint の動画撮影による事象の記録方法"></a>PowerPoint の動画撮影による事象の記録方法</h3><ul><li><p>PowerPoint を開きます。</p></li><li><p>[記録] を表示し、[画面録画] を選択します。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-17-22-54.png"></p></li><li><p>( ※もし [記録] がない場合は、[挿入] から [画面録画] を選択します。)<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-17-38-38.png"></p></li><li><p>領域の選択が行えますので、こちらでディスプレイ全体または対象のブラウザやアプリケーションなどを選択し、録画ボタンを押します。 (なおオーディオは状況に応じてオフにしていただいても構いません)<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-17-26-33.png"></p></li><li><p>録画が開始されるので、事象を再現させその一部始終を記録します。</p></li><li><p>記録が終わりましたら [Windows] + [Shift] + [Q ボタン] を押すか、画面中央上部にマウスカーソルをあわせ ■ のマークをクリックして停止を行ってください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-17-27-41.png"></p></li><li><p>PowerPoint に動画が貼り付けられておりますので、 [メディアに名前を付けて保存] を選択し、保存した動画ファイルをご提供ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-17-41-56.png"></p><p>※ なお PowerPoint がない場合は [Windows] + [G ボタン] でゲームバーを開き、そこから動画取得する方法もございますが、今回は詳述いたしませんので、PowerPoint がインストールされていない環境などではそちらをお調べいただき動画撮影をいただけますと幸いです。<br>※ もしくはディスプレイ自体をスマホなどで撮影頂く方法でも構いません。(その場合は視認がしやすいように画質に注意してください。)</p></li></ul><h3 id="PSR-による事象の記録方法"><a href="#PSR-による事象の記録方法" class="headerlink" title="PSR による事象の記録方法"></a>PSR による事象の記録方法</h3><p>事象の確認のために、原則として動画撮影を推奨しておりますが、同時に以下の PSR による画面キャプチャによるログ取得もいただけますと幸いです。</p><h3 id="PSR-の事前設定"><a href="#PSR-の事前設定" class="headerlink" title="PSR の事前設定"></a>PSR の事前設定</h3><p>PSR は、画面上の操作（クリックなど）の際にスクリーンショットが記録されるものです。これにより問題発生時の GUI 上での動作を確認することができます。</p><ul><li><p>[スタート ボタン] を開き、”PSR” と入力し、[ステップ記録ツール] を開きます。  </p></li><li><p>起動しましたら、右端の [?] マークをクリックし、[設定] を開きます。  </p></li><li><p>[保存する最新の取り込み画像数] に “999” を設定します。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-07-02-01-50-21.png"></p></li><li><p>[記録の開始] をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-20-20-15.png"></p></li><li><p>一連の操作を行い、現象を再現させます。  </p><p>※ 事象が発生しても例えばその画面を操作をせずに取得を終了すると事象発生時の画面状態が記録されません。操作が可能な場合、事象発生後の画面上でクリックをする／ウィンドウを動かす、閉じるなどの操作を実施頂き、事象再現時の状況のスクリーンショットが取得されるようにしたうえで以降の記録の停止を実施ください。<br>PSR によってキャプチャが行われる際は、以下の画像の様に赤い丸が出現し、フェードアウトします。 こちらが生成されていない場合は記録がされていませんのでご注意ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-20-28-02.png"></p></li><li><p>[記録の停止] をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-20-23-20.png"></p></li><li><p>“名前を付けて保存” のダイアログが表示されますので、ファイルの保存場所、ファイル名を指定し、 [保存] をクリックします。</p></li></ul><p>ステップ記録ツールの取得方法について: <a href="https://support.microsoft.com/ja-jp/help/22878/windows-10-record-steps">https://support.microsoft.com/ja-jp/help/22878/windows-10-record-steps</a></p><h2 id="3-IEDigest-によるログ取得"><a href="#3-IEDigest-によるログ取得" class="headerlink" title="3 IEDigest によるログ取得"></a>3 IEDigest によるログ取得</h2><ul><li><p>ダウンロードした IEDigest のツール (iedigest.exe) をダブルクリックします。  </p></li><li><p>[Reports] タブの [Create report] をクリックすると、ログが取得されます。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-22-17-37.png"></p></li><li><p>[Compare] タブに出力先設定がございますので、保存されたログをご提供ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-09-22-26-23.png"></p></li></ul><h2 id="4-edge-policy-による-Edge-に関連するポリシー設定の取得"><a href="#4-edge-policy-による-Edge-に関連するポリシー設定の取得" class="headerlink" title="4 edge://policy による Edge に関連するポリシー設定の取得"></a>4 edge://policy による Edge に関連するポリシー設定の取得</h2><ul><li>Edge を起動し、アドレスバーに edge://policy と入力します。</li><li>[JSON にエクスポート] を行い、その出力した JSON ファイルをご提供ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-01-09-48.png"></li></ul><h2 id="5-edge-compat-iediagnostic-による-サイトリストに関連するポリシー設定の取得"><a href="#5-edge-compat-iediagnostic-による-サイトリストに関連するポリシー設定の取得" class="headerlink" title="5 edge://compat/iediagnostic による サイトリストに関連するポリシー設定の取得"></a>5 edge://compat/iediagnostic による サイトリストに関連するポリシー設定の取得</h2><ul><li><p>Edge を起動し、 edge://compat/iediagnostic と入力します。</p></li><li><p>[診断データをエクスポート] という項目の [Export] をクリックし、出力される .xml ファイルをご提供ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-18-44-44.png"></p><p>※ なお、ダウンロードの際に Edge による警告が表示される場合もございますが、こちらは無視し […] から [保存] を選択ください。</p></li></ul><h2 id="6-サイトリストとして設定されている-xml-のスキーマファイル"><a href="#6-サイトリストとして設定されている-xml-のスキーマファイル" class="headerlink" title="6 サイトリストとして設定されている .xml のスキーマファイル"></a>6 サイトリストとして設定されている .xml のスキーマファイル</h2><p>現在サイトリストとして参照されている .xml のスキーマファイルを edge://compat/iediagnostic または GPO またはレジストリから参照し、取得します。</p><h3 id="edge-compat-iediagnostic-で検索する場合"><a href="#edge-compat-iediagnostic-で検索する場合" class="headerlink" title="edge://compat/iediagnostic で検索する場合"></a>edge://compat/iediagnostic で検索する場合</h3><ul><li>edge://compat/iediagnostic のページの下部に存在する[エンタープライズ モード IE の Web サイト一覧を使用する (IE ポリシー)] と、<br>[エンタープライズ モード サイトリストを構成する(Edge ポリシー)] のいずれかまたは両方において指定されているサイトリストをご提供ください。<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-18-46-38.png"> </li></ul><h3 id="GPO-で検索する場合"><a href="#GPO-で検索する場合" class="headerlink" title="GPO で検索する場合"></a>GPO で検索する場合</h3><p>いずれかの 2 箇所を確認します</p><ul><li>[コンピューターの構成 または ユーザーの構成] - [管理用テンプレート] - [Microsoft Edge] - [エンタープライズ モード サイト一覧を構成する] に存在する、.xml ファイルのパス<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-01-24-34.png"></li><li>[コンピューターの構成 または ユーザーの構成] - [管理用テンプレート] - [Windows コンポーネント] - [Internet Explorer] - [エンタープライズ モード IE の Web サイト一覧を利用する] に 存在する .xml ファイルのパス<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-01-26-59.png"></li></ul><h3 id="レジストリで検索する場合"><a href="#レジストリで検索する場合" class="headerlink" title="レジストリで検索する場合"></a>レジストリで検索する場合</h3><p>いずれかの 2 箇所を確認します</p><ul><li><p>キー (HKEY_LOCAL_MACHINE または HKEY_CURRENT_USER)\Software\Policies\Microsoft\Edge の InternetExplorerIntegrationSiteList の バリューとして存在する .xml のファイルパス<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-01-39-34.png"></p></li><li><p>キー (HKEY_LOCAL_MACHINE または HKEY_CURRENT_USER)\SOFTWARE\Policies\Microsoft\Internet Explorer\Main\EnterpriseMode に存在する SiteList のバリューとして存在する .xml のファイルパス<br><img src="/blog/internet-explorer-microsoft-edge/enterprise-mode-site-list-basic-log-collection/enterprise-mode-site-list-basic-log-collection_2021-08-10-01-35-58.png"></p></li></ul><p>※ それぞれにおいて異なるサイトリストが指定されている場合もございますので、指定されているすべての .xml ファイルをご提供ください。</p><h2 id="アップロードについて"><a href="#アップロードについて" class="headerlink" title="アップロードについて"></a>アップロードについて</h2><p>以上のログ採取により以下 6 点のログ取得をいただきました。</p><ul><li>事象に関連する発生頻度、発生するサイトなど関連情報についての CheckList.txt ファイル</li><li>動画ファイルまたは PSR の.zip ファイル</li><li>IEDigest の .zip ファイル</li><li>edge://policy の .json ファイル</li><li>edge://compat/iediagnostic の .xml ファイル</li><li>サイトリストの .xml スキーマファイル</li></ul><p><strong>これらすべてのログを 1 つの .zip ファイルにまとめ、ファイル名として 202X-XX-XX-SiteList-Basic-Log-Collection.zip のような形にしてご提供ください。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさん、こんにちは!&lt;/p&gt;
&lt;p&gt;サイトにアクセスした際に、Edge や IE モードなど指定したブラウザでページを表示させるために設定する &lt;strong&gt;Enterprise Mode Site List (以下、サイトリスト)&lt;/strong&gt; に関連して、&lt;br</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="IE モード" scheme="https://jpdsi.github.io/blog/tags/IE-%E3%83%A2%E3%83%BC%E3%83%89/"/>
    
    <category term="サイト リスト マネージャー" scheme="https://jpdsi.github.io/blog/tags/%E3%82%B5%E3%82%A4%E3%83%88-%E3%83%AA%E3%82%B9%E3%83%88-%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%83%BC/"/>
    
    <category term="Enterprise Mode Site List" scheme="https://jpdsi.github.io/blog/tags/Enterprise-Mode-Site-List/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET で 拡張子のない URL にてアクセスすると、追加したカスタム ISAPI 拡張ハンドラーが動作しない現象について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/isapi-wildcard/"/>
    <id>https://jpdsi.github.io/blog/web-apps/isapi-wildcard/</id>
    <published>2021-08-30T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:13.015Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです！  </p><p>Windows Server 2012 以降の OS バージョンの IIS (IIS 8.0 以降) にて、カスタムの ISAPI 拡張 (ハンドラー) をワイルドカード マッピングを利用して動作させたい場合に、ASP.NET の機能との関連で動作しない現象について、お知らせします。</p><p>   <a href="https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525172(v=vs.90)">ISAPI 拡張について</a></p><h2 id="現象"><a href="#現象" class="headerlink" title="現象"></a>現象</h2><p> IIS 10.0 , ASP.NET の環境下で、 要求パス に “*” を指定した ISAPI 拡張をハンドラーに追加した場合、 拡張子のない URL でアクセスすると、追加した ISAPI 拡張ハンドラーが動作しない。</p><p> コマンド例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appcmd set config &quot;Default Web Site&quot; /section:handlers /+&quot;[name=&#x27;ISAPI_Extension&#x27;, path=&#x27;*&#x27;, verb=&#x27;*&#x27;, modules=&#x27;IsapiModule&#x27;, scriptProcessor=&#x27;C:\ISAPI\ISAPI_Extension.dll&#x27;, resourceType=&#x27;Unspecified&#x27;, requireAccess=&#x27;None&#x27;,preCondition=&#x27;bitness64&#x27;]&quot; /commit:APPHOST</span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>ASP.NET がインストールされていると既定で 要求パス “*.” に対して Extensionless URL Handler がマップされ、拡張子のない URL は Extensionless URL Handler に処理されるようになります。</p><p>この動作により 要求パスに “*” を指定した場合に、 Extensionless URL Handler が処理する動作となり、追加した ISAPI 拡張機能は機能しません。</p><p> ASP.NET の場合、 MVC で処理される拡張子のない URL へのリクエストを処理できるようにするために意図的に実装した動作になります。</p><h2 id="対処方法"><a href="#対処方法" class="headerlink" title="対処方法"></a>対処方法</h2><p>拡張子のない URL からアクセスするためには、追加する ISAPI 拡張ハンドラーの要求パスに “*.” を指定します。</p><p>なお、拡張子の有無に関わらず 全ての URL に対して 動作するようにするように ハンドラー を追加するためには、 要求パス に “*“ を指定した ハンドラー と “*.” を指定したハンドラー の 2 つを追加し、順序を上にすることで 拡張子の有無に関わらず、全ての URL に対して 動作することができます。</p><p><img src="/blog/web-apps/isapi-wildcard/isapi-wildcard_2021-08-31-11-03-24.png" alt="ハンドラーマッピングの設定"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです！  &lt;/p&gt;
&lt;p&gt;Windows Server 2012 以降の OS バージョンの IIS (IIS 8.0 以降) にて、カスタムの ISAPI 拡張 (ハンドラー) をワイルドカード マッピングを利用して動作させたい場合に、</summary>
      
    
    
    
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="ASP.NET" scheme="https://jpdsi.github.io/blog/tags/ASP-NET/"/>
    
    <category term="ハンドラーマッピング" scheme="https://jpdsi.github.io/blog/tags/%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0/"/>
    
  </entry>
  
  <entry>
    <title>Debug Diagnostics Tool (DebugDiag) の取得方法について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/debugdiag/"/>
    <id>https://jpdsi.github.io/blog/web-apps/debugdiag/</id>
    <published>2021-06-28T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.999Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです！  </p><p>弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供しております。<br>今回は Debug Diagnostics Tool (以降 DebugDiag) によりメモリダンプを取得する手順についてご説明いたします。</p><h2 id="DebugDiag-とは"><a href="#DebugDiag-とは" class="headerlink" title="DebugDiag とは"></a>DebugDiag とは<!-- omit in toc --></h2><p>DebugDiag とはメモリダンプを取得・解析するための強力なツールです。<br>DebugDiag は我々 IIS サポートチームのみならず、別のサポートチームにおいてでも様々なシナリオでダンプを取得し、そのダンプを解析することで日々お客様の問題解決に貢献しております。</p><h3 id="DebugDiag-のメリット"><a href="#DebugDiag-のメリット" class="headerlink" title="DebugDiag のメリット"></a>DebugDiag のメリット<!-- omit in toc --></h3><p>DebugDiag でのダンプ採取のメリットとして、柔軟なタイミングかつ、メモリの領域を指定して取得することが上げられます。</p><p>取得するメモリの領域の指定は以下 2 つが可能です。  </p><ul><li><strong>User Fulldump</strong> : プロセスの全領域を .dmp としてダンプします。サイズは大きいものの詳細な分析が行えます。</li><li><strong>User Minidump</strong> : プロセスの一部領域 を .dmp としてダンプします。サイズは小さいものの、限られた分析しか行なえません。</li></ul><p>なお通常、お問い合わせの調査には、前者の <strong>User Fulldump</strong> の取得をお願いしております。  </p><p>また取得するタイミングについても以下のように柔軟に変更できます。  </p><ul><li>イベントログにアプリケーションの例外コードが記録されたタイミングで取得する</li><li>イベントログに記録された文字列を起点として取得する</li></ul><p>またそれ以外のメリットとして、ログオフした状態であってもバックグラウンドで DebugDiag を実行可能です。</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次 "></a>目次 <!-- omit in toc --></h2><ul><li><a href="#1-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">1. 前提条件</a><ul><li><a href="#1-1-%E4%BA%8B%E5%89%8D%E3%81%AB%E6%BA%96%E5%82%99%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">1.1. 事前に準備が必要なものについて</a></li></ul></li><li><a href="#2-DebugDiag-%E3%81%AE%E5%8F%96%E5%BE%97%E8%A8%AD%E5%AE%9A">2. DebugDiag の取得設定</a><ul><li><a href="#2-1-Enable-Disable-Performance-Logging-%E3%81%AE-%E7%84%A1%E5%8A%B9%E5%8C%96">2.1. Enable Disable Performance Logging の 無効化</a></li><li><a href="#2-2-Rule-Type-%E3%81%A8-Target-Type-%E3%81%AE%E9%81%B8%E6%8A%9E">2.2. Rule Type と Target Type の選択</a></li></ul></li><li><a href="#3-%E5%AF%BE%E8%B1%A1%E3%81%A8%E3%81%AA%E3%82%8B-DebugDiag-%E3%81%AE%E3%82%BF%E3%83%BC%E3%82%B2%E3%83%83%E3%83%88%E3%82%BF%E3%82%A4%E3%83%97-%E3%81%8C-A-specific-IIS-web-application-pool-%E3%81%AE%E5%A0%B4%E5%90%88">3. 対象となる DebugDiag のターゲットタイプ が A specific IIS web application pool の場合</a><ul><li><a href="#3-1-%E3%83%80%E3%83%B3%E3%83%97%E3%81%AE%E5%8F%96%E5%BE%97%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0-%E3%81%8C-First-Chance-%E3%81%AE%E5%A0%B4%E5%90%88">3.1. ダンプの取得タイミング が First Chance の場合</a></li></ul></li><li><a href="#4-%E3%83%80%E3%83%B3%E3%83%97%E7%94%9F%E6%88%90%E5%BE%8C%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%8F%96%E5%BE%97">4. ダンプ生成後ファイルの取得</a></li><li><a href="#5-DebugDiag-%E3%81%AE%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%96%B9%E6%B3%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">5. DebugDiag のアンインストール方法について</a></li><li><a href="#6-DebugDiag-%E3%81%AE%E6%A4%9C%E8%A8%BC%E6%96%B9%E6%B3%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">6. DebugDiag の検証方法について</a><ul><li><a href="#6-1-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">6.1. 前提条件</a></li><li><a href="#6-2-%E4%BE%8B%E5%A4%96%E3%82%92%E6%84%8F%E5%9B%B3%E7%9A%84%E3%81%AB%E7%99%BA%E7%94%9F%E3%81%95%E3%81%9B%E3%82%8B%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E9%85%8D%E7%BD%AE">6.2. 例外を意図的に発生させるアプリケーションの配置</a></li><li><a href="#6-3-%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95">6.3. 確認方法</a></li></ul></li></ul><h2 id="1-前提条件"><a href="#1-前提条件" class="headerlink" title="1. 前提条件"></a>1. 前提条件</h2><h3 id="1-1-事前に準備が必要なものについて"><a href="#1-1-事前に準備が必要なものについて" class="headerlink" title="1.1. 事前に準備が必要なものについて"></a>1.1. 事前に準備が必要なものについて</h3><p>DebugDiag はインストールが必要かつ、フォアグラウンドまたはバックグラウンドで実行するツールになります。</p><p>64bit 版の DebugDiag をインストールします。<br>※ OS が 32bit 版のみ 32bit 版の DebugDiag をインストールしてください。</p><ul><li>64bit 版の DebugDiag : <a href="http://debugdiag.com/">Debug Diagnostic Tool v2 Update 3</a></li><li>32bit 版の DebugDiag : <a href="https://www.microsoft.com/en-us/download/details.aspx?id=49924">Debug Diagnostic Tool v2 Update 2</a></li></ul><p>.msi ファイルをダウンロードできたら、以下の手順でインストールします。</p><ul><li>ダウンロードした .msi ファイルを起動します。  </li><li>起動後、[Next] を押し、ライセンスを承諾します。  </li><li>デフォルトのフォルダパスは C:\Program Files\DebugDiag ですので、それ以外を設定したい場合は [Browse…] から任意のパスに変更します。</li><li>[Next]を押し、[Install] を実行してください。なお<strong>インストールには管理者権限が必要</strong>です。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-23-23-43-07.png" alt="DebugDiag のインストール設定画面の図"></p><p>これで DebugDiag のインストールは終了です。</p><h2 id="2-DebugDiag-の取得設定"><a href="#2-DebugDiag-の取得設定" class="headerlink" title="2. DebugDiag の取得設定"></a>2. DebugDiag の取得設定</h2><ul><li>[すべてのプログラム] - [Debug Diagnostic Tool 2.0] - [Debug Diagnostics Tool 2.0 Collection] を起動します。  </li><li>[Select Rule Type] 画面が自動的に表示された場合、一旦 [キャンセル] ボタンを押してダイアログを閉じます。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-23-23-57-29.png" alt="DebugDiag 2 Collection の起動画面"></p><h3 id="2-1-Enable-Disable-Performance-Logging-の-無効化"><a href="#2-1-Enable-Disable-Performance-Logging-の-無効化" class="headerlink" title="2.1. Enable Disable Performance Logging の 無効化"></a>2.1. Enable Disable Performance Logging の 無効化</h3><ul><li>Debug Diagnostics Tool の [Tools] - [Options And Settings] メニューをクリックします。  </li><li>[Performance log] - [Enable/Disable Performance Logging] にて、[Disable Performance Counter Data Logging] のラジオボタンにチェックがある状態にして、[OK] ボタンを押して閉じます。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-00-06-11.png" alt="Enable-Disable Performance Logging の無効化の設定図"></p><h3 id="2-2-Rule-Type-と-Target-Type-の選択"><a href="#2-2-Rule-Type-と-Target-Type-の選択" class="headerlink" title="2.2. Rule Type と Target Type の選択"></a>2.2. Rule Type と Target Type の選択</h3><p>この辺りから取得する対象により設定方法が変わります。</p><p>弊社から適宜 “&lt;&gt;” 内の設定項目が指定された場合はそちらに従ってください。<br>もし特に指定がない場合や、こちらのブログを参考に DebugDiag の取得を調査している場合は、<br>例に従うことでアクセス違反発生時にダンプを取得する場合の設定手順をお試しいただけます。</p><ul><li>ウィンドウ下部の [Add Rules] ボタンを押します。表示された [Select Rule Type] 画面にて、&lt;対象となる DebugDiag のルールタイプ&gt; を選択し、[次へ] ボタンを押します。  </li><li>次に、[Select Target Type] 画面にて、&lt;対象となる DebugDiag のターゲットタイプ&gt; を選択し、[次へ] をクリックします。  </li></ul><p>※ 例として、アクセス違反発生時にダンプを取得する場合は、</p><ul><li>[Select Rule Type] には [Crash] を選択し、  </li><li>[Select Target Type] には [A specific IIS web application pool] を選択してください。  </li></ul><p>以下の画像のように設定をすることで、 Access Violation による例外発生によるダンプの取得を行います。  </p><!-- [Crash] 以外についてはGUI上の表示も変わってくることから、今回の説明は Crash 後の選択に合わせた形でよいと考える。仮に Crash 以外の選択が必要になった場合は、別記事として分散させることを期待する。別記事じゃなくここの記事にRule Type 自体もヘッダー分けして書くと、非常に長くなりそうなため。Target Type は a specific IIS webapplication pool 以外も選択したことが過去にもあるため、そこは分岐がある想定で目次のヘッダーの深さをターゲットタイプで ## になるように作成する。--><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-00-17-36.png" alt="Rule Type と Target Type の選択画面図"></p><!--仮にここで分岐が起こる場合は、目次を挿入するのも良いとと考える--><h2 id="3-対象となる-DebugDiag-のターゲットタイプ-が-A-specific-IIS-web-application-pool-の場合"><a href="#3-対象となる-DebugDiag-のターゲットタイプ-が-A-specific-IIS-web-application-pool-の場合" class="headerlink" title="3. 対象となる DebugDiag のターゲットタイプ が A specific IIS web application pool の場合"></a>3. 対象となる DebugDiag のターゲットタイプ が A specific IIS web application pool の場合</h2><p>ダンプの取得タイミングにより更に取得方法が分岐します。以下 2 つのうちどちらかのタイミングで取得します。</p><ul><li><strong>First Chance</strong> : 例外が発生したタイミングで取得する設定で、例外処理をしていてアプリケーションがクラッシュしない場合でも取得する</li><li><strong>Second Chance</strong> : 例外が発生し、例外処理がされずにアプリケーションがクラッシュ場合のみ取得する設定で、クラッシュの直前のタイミングで取得する</li></ul><p>弊社より &lt;ダンプの取得タイミング&gt; について設定項目が指定された場合はそちらに従ってください。<br>※ 例として、アクセス違反発生時にダンプを取得する場合は、 &lt;ダンプの取得タイミング&gt; は First Chance を選択してください。  </p><h3 id="3-1-ダンプの取得タイミング-が-First-Chance-の場合"><a href="#3-1-ダンプの取得タイミング-が-First-Chance-の場合" class="headerlink" title="3.1. ダンプの取得タイミング が First Chance の場合"></a>3.1. ダンプの取得タイミング が First Chance の場合</h3><p>First Chance とは、例外発生したタイミングでダンプを取得する方法になります。<br>例えば try/catch による例外処理をしていて、アプリケーションがクラッシュしない場合においても、First Chance により、例外が発生した瞬間にダンプを取得することができます。</p><ul><li>[Advanced Configuration (Optional)] 画面にて [Advanced Settings] -  [Exceptions…] をクリックします。  </li><li>次に、 [First Chance Exception Configuration] - [Add Exception…] をクリックします。  </li><li>次に、 [Configure Exception] 画面にてダンプを生成する例外の条件を設定します。  </li></ul><p>設定条件には以下を入力してください。<br>(&lt;その他の設定&gt; について弊社から特に指示がない場合は無視してください。)</p><ul><li>[Exception Code (hex)] : &lt;First Chance で対象となる例外コード&gt;</li><li>[Action Type] : &lt;First Chance で取得するダンプの領域&gt;</li><li>[Action Limit] : &lt;First Chance で取得するダンプの回数&gt;</li><li>[その他の設定項目] : &lt;First Chance のその他の設定&gt;</li></ul><p>※ 例として、今回ははアクセス違反発生時にダンプを取得する場合の設定条件を紹介します。<br>以下の画像のように設定をすることで、 Access Violation による例外発生によるダンプの取得を行います。</p><ul><li>[Exception Code (hex)] : C0000005 (Access Violation)</li><li>[Action Type] : Full Userdump</li><li>[Action Limit] : 2</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-02-18-47.png" alt="First Chance で Access Violation の設定画面図"></p><ul><li>[Configure Exception] 画面にて [OK] を選択し、  </li><li>[First Chance Exception Configuration] 画面にて [Save &amp; Close] を選択します。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-01-53-13.png" alt="First Chance で設定完了までの設定図"></p><p>こちらで First Chance つまり例外発生時にダンプを取得する設定を完了しました。</p><ul><li>[Advanced Configuration (Optional)] 画面に戻りますので、[次へ] ボタンを押します。  </li><li>[Select Dump Location And Rule Name (Optional)] では、ダンプの出力先やルールの名前を設定できます。  </li><li>&lt;DebugDiag の有効化時期&gt; について弊社から指定がない場合は、 [Rule Completed] - [Activate the rule now] を選択し、 [完了] をクリックします。</li></ul><p>※ 例として、今回はアクセス違反発生時にダンプを取得する設定の場合は、画像の通り、[Activate the rule now] を選択し、[完了] をクリックします。</p><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-02-19-43.png" alt="DebugDiag の設定の有効化の設定図1"></p><p>なお別のログ採取ツールのタイミングに応じて DebugDiag も有効化したい場合などは、 </p><ul><li>[Do not activate the rule at this time] を選択し、  </li><li>別途 DebugDiag を有効化するタイミングで当該の作成したルールを選び [右クリック] から [Activate Rule] を実行してください。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-02-25-05.png" alt="DebugDiag の設定の有効化の設定図2"></p><h2 id="4-ダンプ生成後ファイルの取得"><a href="#4-ダンプ生成後ファイルの取得" class="headerlink" title="4. ダンプ生成後ファイルの取得"></a>4. ダンプ生成後ファイルの取得</h2><p>設定を完了後、現象の再現を待ちます。<br>事象が発生した場合、出力先に設定した箇所にダンプ ファイル (拡張子 .dmp) が出力されます。そちらをアップロードしてください。</p><h2 id="5-DebugDiag-のアンインストール方法について"><a href="#5-DebugDiag-のアンインストール方法について" class="headerlink" title="5. DebugDiag のアンインストール方法について"></a>5. DebugDiag のアンインストール方法について</h2><p>DebugDiag 自体を削除する場合は、有効化したルールすべてを削除します。  </p><ul><li>コントロールパネルを開き、[プログラムのアンインストールまたは変更] を開きます。  </li><li>DebugDiag のアプリケーションを選択し、 [アンインストール] を実行してください。</li></ul><p><img src="/blog/web-apps/debugdiag/debugdiag_2021-05-24-02-34-14.png" alt="DebugDiag のアンインストールの画面図"></p><h2 id="6-DebugDiag-の検証方法について"><a href="#6-DebugDiag-の検証方法について" class="headerlink" title="6. DebugDiag の検証方法について"></a>6. DebugDiag の検証方法について</h2><h3 id="6-1-前提条件"><a href="#6-1-前提条件" class="headerlink" title="6.1. 前提条件"></a>6.1. 前提条件</h3><ul><li>ASP.NET が実行できる環境をご用意ください。</li></ul><h3 id="6-2-例外を意図的に発生させるアプリケーションの配置"><a href="#6-2-例外を意図的に発生させるアプリケーションの配置" class="headerlink" title="6.2. 例外を意図的に発生させるアプリケーションの配置"></a>6.2. 例外を意図的に発生させるアプリケーションの配置</h3><ul><li>以下のコードを .aspx という拡張子で保存して IIS 上の任意のサイトに配置します。</li><li>コード中の &lt;検証用の例外コード&gt; には 例外コードを 10 進数で入力します。  </li></ul><p>例えば C0000005 の例外を発生させたい場合は、それを 10 進数で表した 3221225477 を入力します。  </p><p>以下例として、アクセス違反の例外を意図的に発生させます。<br>具体的にはアクセス違反の例外コードである 0xC0000005 を 10 進数表記した 3221225477 を &lt;検証用の例外コード&gt; に指定してください。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Import Namespace=<span class="string">&quot;System.Runtime.InteropServices&quot;</span> %&gt;</span><br><span class="line">&lt;%@ Page language=<span class="string">&quot;C#&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">   &lt;script language=<span class="string">&quot;cs&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">[<span class="built_in">DllImport</span>(<span class="string">&quot;kernel32.dll&quot;</span>)]</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="built_in">RaiseException</span>(uint dwExceptionCode, uint dwExceptionFlags,  uint nNumberOfArguments, IntPtr lpArguments);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">throwEx</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">RaiseException</span>(&lt;検証用の例外コード&gt;, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="built_in">IntPtr</span>(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Button1_Click</span><span class="params">(object sender, EventArgs e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    System.Threading.Thread t = <span class="keyword">new</span> System.Threading.<span class="built_in">Thread</span>(throwEx);</span><br><span class="line">        t.<span class="built_in">Start</span>();</span><br><span class="line">&#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form id=<span class="string">&quot;form1&quot;</span> runat=<span class="string">&quot;server&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;asp:Button ID=<span class="string">&quot;Button1&quot;</span> runat=<span class="string">&quot;server&quot;</span> Text=<span class="string">&quot;Button&quot;</span> onclick=<span class="string">&quot;Button1_Click&quot;</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>以下の項目を右に読み替えていただき、再度 <a href="#2-DebugDiag-%E3%81%AE%E5%8F%96%E5%BE%97%E8%A8%AD%E5%AE%9A">DebugDiag の取得手順</a> に従って、DebugDiag の設定を行います。</p><ul><li>&lt;対象となるアプリケーションプール&gt;: テスト用の上記のコードが配置されたウェブサイトのアプリケーションプール</li><li>&lt;First Chance で対象となる例外コード&gt;: &lt;検証用の例外コード&gt;</li></ul><p>※ なお、Debug Diagnostic Tool ツール自体のサポートは私共技術サポートではご提供しておりません。<br>そのため、上記ツールのトラブルシューティングやツールの詳細なご紹介等はご支援できませんことをご了承ください。</p><h3 id="6-3-確認方法"><a href="#6-3-確認方法" class="headerlink" title="6.3. 確認方法"></a>6.3. 確認方法</h3><ul><li>設定を終了後、当該の検証用のアプリケーションにアクセスして、[Button] をクリックします。  </li><li>ダンプの出力先として設定したフォルダに、メモリダンプが出力されているかどうかをご確認ください。</li></ul><!--## DebugDiag についての FAQDebugDiag についてよくいただくご質問について以下におまとめしております。- [DebugDiag についての Q&A][DebugDiag についての Q&A]  以上の Q&A を確認したもののご不明点が解決しない場合は、  私共サポートまでお問い合わせいただけますと大変幸いです。 DebugDiag FAQ のネタについて- DebugDiag 取得時にシステムに与える影響について- DebugDiag の解析方法？- DebugDiag の検証方法はこっちじゃなくていいのかな-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです！  &lt;/p&gt;
&lt;p&gt;弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供しております。&lt;br&gt;今回は Debug Diagnostics Tool (以降 DebugDiag) によりメモリダ</summary>
      
    
    
    
    
    <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="DebugDiag" scheme="https://jpdsi.github.io/blog/tags/DebugDiag/"/>
    
  </entry>
  
  <entry>
    <title>失敗した要求トレース (FREB) の取得方法について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/freb/"/>
    <id>https://jpdsi.github.io/blog/web-apps/freb/</id>
    <published>2021-05-26T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:13.007Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです！  </p><p>弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。<br>今回は 失敗した要求トレース 通称 FREB の取得手順についてご説明します。</p><h2 id="FREB-とは"><a href="#FREB-とは" class="headerlink" title="FREB とは "></a>FREB とは <!-- omit in toc --></h2><p>FREB はウェブ リクエストにウェブサーバーがどのように応答したか、その処理過程を .xml 形式のログに出力するモジュールです。<br>リクエストの応答に問題があった場合、FREB のログを確認することで問題の調査を行えます。  </p><p>ログ出力の条件は柔軟に設定することができます。40X や 50X などの応答が起きた時、もしくはリクエストの処理時間が一定時間を超えた時など、状況に合わせた設定可能です。</p><p>FREB の詳しい説明は <a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/cc730608(v=ws.10)#failed-request-tracing-rules">Monitor Activity on a Web Server (IIS 7)</a> をご確認ください。</p><p>なお注意点として [トレース] 機能をサーバーの機能としてインストールしていない場合、インストール時に IIS サービスの再起動が発生します。<br>再起動時に、IIS サーバーが処理している既存のリクエストがエラーになる可能性もあるためご注意ください。<br>慎重を期す場合は、メンテナンス時間などにおいて設定することを推奨します。  </p><h2 id="目次"><a href="#目次" class="headerlink" title="目次 "></a>目次 <!-- omit in toc --></h2><ul><li><a href="#1-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">1. 前提条件</a><ul><li><a href="#11-%E4%BA%8B%E5%89%8D%E3%81%AB%E6%BA%96%E5%82%99%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">1.1. 事前に準備が必要なものについて</a></li></ul></li><li><a href="#2-FREB-%E3%81%AE%E8%A8%AD%E5%AE%9A%E6%89%8B%E9%A0%86">2. FREB の設定手順</a><ul><li><a href="#21-FREB-%E3%81%AE%E6%9C%89%E5%8A%B9%E5%8C%96">2.1. FREB の有効化</a></li><li><a href="#22-FREB-%E3%81%AE%E8%A6%8F%E5%89%87%E4%BD%9C%E6%88%90">2.2. FREB の規則作成</a></li></ul></li><li><a href="#3-FREB-%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%89%8A%E9%99%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">3. FREB の設定の削除について</a></li><li><a href="#4-FREB-%E3%81%AE%E6%A4%9C%E8%A8%BC%E6%89%8B%E9%A0%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">4. FREB の検証手順について</a><ul><li><a href="#41-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90">4.1. ウェブサイトの作成</a></li><li><a href="#42-%E5%A4%B1%E6%95%97%E3%81%97%E3%81%9F%E8%A6%81%E6%B1%82%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B9%E3%81%AE%E8%A8%AD%E5%AE%9A">4.2. 失敗した要求トレースの設定</a></li><li><a href="#43-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%89%8A%E9%99%A4">4.3. ウェブサイトの削除</a></li></ul></li></ul><h2 id="1-前提条件"><a href="#1-前提条件" class="headerlink" title="1. 前提条件"></a>1. 前提条件</h2><h3 id="1-1-事前に準備が必要なものについて"><a href="#1-1-事前に準備が必要なものについて" class="headerlink" title="1.1. 事前に準備が必要なものについて"></a>1.1. 事前に準備が必要なものについて</h3><p>IIS Manager を起動し、中央のアイコンで、[IIS] - [失敗した要求トレース] が存在することを確認します。</p><p>もしこちらが存在しない場合は、失敗した要求トレース (FREB) を記録するモジュールが存在しないため、<br>サーバー マネージャーの役割サービスの追加で、[Web サーバー] - [状態と診断] - [トレース] をインストールします。<br><strong>インストールの際は、IIS の再起動が発生しますのでご注意ください。</strong></p><p><img src="/blog/web-apps/freb/freb_2021-05-23-05-29-05.png" alt="FREB のインストールが必要な場合についての説明図"></p><h2 id="2-FREB-の設定手順"><a href="#2-FREB-の設定手順" class="headerlink" title="2. FREB の設定手順"></a>2. FREB の設定手順</h2><h3 id="2-1-FREB-の有効化"><a href="#2-1-FREB-の有効化" class="headerlink" title="2.1. FREB の有効化"></a>2.1. FREB の有効化</h3><p>IIS マネージャーを起動し、[Web サイト] から現象が発生している &lt;対象となるウェブサイト&gt; を選択します。  </p><p>[操作] - [構成] - [失敗した要求トレース] をクリックします。  </p><p>[失敗した要求のトレースが、この Web サイトに対して有効になっていません。] という警告が表示される場合はクリックしてログを有効にします。</p><p><img src="/blog/web-apps/freb/freb_2021-05-23-22-37-02.png" alt="FREBの有効化の説明図1"></p><p>[操作] ウィンドウの [サイトのトレースの編集] をクリックし、[有効にする] にチェックがあることを確認してください。</p><p><img src="/blog/web-apps/freb/freb_2021-05-18-02-00-38.png" alt="FREBの有効化の説明図2"></p><h3 id="2-2-FREB-の規則作成"><a href="#2-2-FREB-の規則作成" class="headerlink" title="2.2. FREB の規則作成"></a>2.2. FREB の規則作成</h3><p>[失敗した要求トレースの規則] - [操作] - [追加] をクリックします。</p><p>[トレースするコンテンツの指定] で、&lt;トレースするコンテンツ&gt;、<br>[トレース条件の定義] で、&lt;トレース条件の定義&gt;、<br>[トレース プロバイダーの選択] で、 &lt;トレースプロバイダー&gt; を設定し [終了] をクリックします。</p><p><img src="/blog/web-apps/freb/freb_2021-05-20-01-17-01.png" alt="FREB の規則作成手順図"></p><p>[トレース条件の定義] を [状態コード]、[所要時間] それぞれでチェックを有効化した場合、条件は AND ではなく OR として判断されます。<br>つまり、いずれかの条件に合致した場合に FREB によりログが出力されますので、ご注意ください。</p><p>[トレース条件の定義] の詳細については、<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/cc725948(v=ws.10)">Create a Tracing Rule for Failed Requests (IIS 7)</a> をご確認ください。</p><h2 id="3-FREB-の設定の削除について"><a href="#3-FREB-の設定の削除について" class="headerlink" title="3. FREB の設定の削除について"></a>3. FREB の設定の削除について</h2><p>FREB自体を無効化する場合は、<br>&lt;対象となるウェブサイト&gt; の 失敗した要求トレースの規則 を開き、作成した規則を選択し、削除 を押してください。</p><h2 id="4-FREB-の検証手順について"><a href="#4-FREB-の検証手順について" class="headerlink" title="4. FREB の検証手順について"></a>4. FREB の検証手順について</h2><h3 id="4-1-ウェブサイトの作成"><a href="#4-1-ウェブサイトの作成" class="headerlink" title="4.1. ウェブサイトの作成"></a>4.1. ウェブサイトの作成</h3><p>IIS 上にウェブサイトを作成し、ウェブ アクセスした際に 200 レスポンスが返されることを契機として、メモリダンプを取得します。</p><p>以下の画像のように、ウェブサイトを作成し、メモ帳などで作成した iisstart.htm を C:\inetpub\wwwroot 以下に作成します。問題なくアクセスできることを確認します。</p><p><img src="/blog/web-apps/freb/freb_2021-05-20-00-02-46.png" alt="IIS 上でのウェブサイトの作成手順説明図"></p><h3 id="4-2-失敗した要求トレースの設定"><a href="#4-2-失敗した要求トレースの設定" class="headerlink" title="4.2. 失敗した要求トレースの設定"></a>4.2. 失敗した要求トレースの設定</h3><p>トレース条件の定義として、200 を指定し、サイトにアクセスすることで、FREB の出力先に .xml 形式の出力があるかを確認します。</p><p><img src="/blog/web-apps/freb/freb_2021-05-20-00-00-59.png" alt="失敗した要求トレースの出力の確認図"></p><h3 id="4-3-ウェブサイトの削除"><a href="#4-3-ウェブサイトの削除" class="headerlink" title="4.3. ウェブサイトの削除"></a>4.3. ウェブサイトの削除</h3><p>IIS マネージャー より [サイト] を開き、検証用に作成したサイトを削除してください。</p><!-- ## 4. FREB の FAQ についてこちらは [失敗した要求トレース (FREB) でよくいただくご質問について](https://jpdsi.github.io/blog/web-apps/freb-faq/) をご確認ください。以上の Q&A を確認したもののご不明点が解決しない場合は、私共サポートまでお問い合わせいただけますと大変幸いです。-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです！  &lt;/p&gt;
&lt;p&gt;弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。&lt;br&gt;今回は 失敗した要求トレース 通称 FREB の取得手順についてご説明します。&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    
    <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="FREB" scheme="https://jpdsi.github.io/blog/tags/FREB/"/>
    
  </entry>
  
  <entry>
    <title>失敗した要求トレースを契機とするメモリダンプ (FREBDump) のよくあるご質問</title>
    <link href="https://jpdsi.github.io/blog/web-apps/frebdump-faq/"/>
    <id>https://jpdsi.github.io/blog/web-apps/frebdump-faq/</id>
    <published>2021-05-26T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:13.007Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです！  </p><p>弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。 </p><p>FREBDump について、今回はよくいただくご質問についてまとめました。</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次 "></a>目次 <!-- omit in toc --></h2><ul><li><a href="#FREBDump-%E3%81%AE%E6%A4%9C%E8%A8%BC%E6%89%8B%E9%A0%86%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">FREBDump の検証手順について</a></li><li><a href="#FREB-%E3%81%AE-%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B9%E3%81%99%E3%82%8B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AE%E6%8C%87%E5%AE%9A-%E3%81%A7%E3%81%AE-%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0-%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">FREB の [トレースするコンテンツの指定] での [カスタム] の注意点について</a></li></ul><h2 id="FREBDump-の検証手順について"><a href="#FREBDump-の検証手順について" class="headerlink" title="FREBDump の検証手順について"></a>FREBDump の検証手順について</h2><p>以下簡易ではありますが、FREBDump が問題なく取得できるか確認するための取得手順をおまとめいたしました。<br>事前検証が必要な場合は、こちらによりメモリダンプが生成されているかご確認いただけますと幸いです。</p><h3 id="ウェブサイトの作成"><a href="#ウェブサイトの作成" class="headerlink" title="ウェブサイトの作成"></a>ウェブサイトの作成<!-- omit in toc --></h3><p>IIS 上にウェブサイトを作成し、ウェブ アクセスした際に 200 レスポンスが返されることを契機として、メモリダンプを取得します。</p><p>以下の画像のように、ウェブサイトを作成し、メモ帳などで作成した iisstart.htm を C:\inetpub\wwwroot 以下に作成します。問題なくアクセスできることを確認します。</p><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-00-02-46.png" alt="IIS 上でのウェブサイトの作成手順説明図"></p><h3 id="失敗した要求トレースの設定"><a href="#失敗した要求トレースの設定" class="headerlink" title="失敗した要求トレースの設定"></a>失敗した要求トレースの設定<!-- omit in toc --></h3><p>トレース条件の定義として、200 を指定します。<br>サイトにアクセスすることで、FREB の出力先に .xml 形式の出力があるかを確認します。</p><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-00-00-59.png" alt="失敗した要求トレースの出力の確認図"></p><h3 id="構成エディター-での-ProcDump-の設定"><a href="#構成エディター-での-ProcDump-の設定" class="headerlink" title="構成エディター での ProcDump の設定"></a>構成エディター での ProcDump の設定<!-- omit in toc --></h3><p>画像を参考に、サーバーにおいて構成エディタにて customActionEnabled の有効化を行います。<br>その後、サイトの構成エディターにおいて、[customActionExe]、[customeActionParams]、[customActionTriggerLimit] を以下の値で設定します。</p><ul><li>[customActionExe] : C:\Procdump\procdump.exe などのインストールした .exe のパス</li><li>[customActionParams] : -accepteula -ma -s 30 -n 2 %1% &lt;任意のダンプの出力先のフォルダ&gt;</li><li>[customActionTriggerLimit] : 1</li></ul><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-00-20-13.png"></p><h3 id="ダンプ生成の確認"><a href="#ダンプ生成の確認" class="headerlink" title="ダンプ生成の確認"></a>ダンプ生成の確認<!-- omit in toc --></h3><p>作成したサイトにウェブ アクセスを行います。<br>200 レスポンスが返答されたことを契機として FREBDump が取得されます。<br>FREB、 ProcDump の出力先に ファイルが生成されていることをご確認ください。</p><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-00-22-28.png"></p><h2 id="FREB-の-トレースするコンテンツの指定-での-カスタム-の注意点について"><a href="#FREB-の-トレースするコンテンツの指定-での-カスタム-の注意点について" class="headerlink" title="FREB の [トレースするコンテンツの指定] での [カスタム] の注意点について"></a>FREB の [トレースするコンテンツの指定] での [カスタム] の注意点について</h2><p>カスタムにてパスを指定した際に、[既定のドキュメント] の設定によりサイトアクセスが “/“ ディレクトリでアクセスできる場合、FREB がうまく発火しない場合がございます。</p><p>例えば、<a href="http://localhost/iisstart.htm">http://localhost/iisstart.htm</a> がフルパスになるような iisstart.htm のファイルをサイトに配置します。</p><p>既定の設定では、[既定のドキュメント] に iisstart.htm が存在するため、 https://&lt;サイト名/&gt; でアクセスが可能です。</p><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-12-53-09.png"></p><p>この場合、[カスタム] のパスに iisstart.htm や /iisstart.htm を設定していると、 “/“ などのディレクトリアクセスの時は FREB は発火しません。</p><p><img src="/blog/web-apps/frebdump-faq/frebdump-faq_2021-05-20-13-20-16.png"></p><p>[カスタム] の設定は FREB を仕掛けたいアプリケーションを制限する場合に有用な設定ですが、そのアプリケーションやウェブページが [既定のドキュメント] に存在する場合は以上の注意が必要になります。</p><!-- - FREBDump の customActionExe, customeActionParam, customeActionTrigger の説明- ProcDump のオプションについて-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです！  &lt;/p&gt;
&lt;p&gt;弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。 &lt;/p&gt;
&lt;p&gt;FREBDump について、今回はよくいただくご質問についてまとめました。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="FREBDump" scheme="https://jpdsi.github.io/blog/tags/FREBDump/"/>
    
    <category term="FAQ" scheme="https://jpdsi.github.io/blog/tags/FAQ/"/>
    
  </entry>
  
  <entry>
    <title>失敗した要求トレースを契機とするメモリダンプ (FREBDump) の取得方法 について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/frebdump/"/>
    <id>https://jpdsi.github.io/blog/web-apps/frebdump/</id>
    <published>2021-05-26T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:13.011Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです！  </p><p>弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。<br>今回は IIS のワーカープロセス (w3wp.exe) のメモリダンプを取得する手法の一つ、FREBDump の手順についてご説明します。</p><h2 id="FREBDump-とは"><a href="#FREBDump-とは" class="headerlink" title="FREBDump とは "></a>FREBDump とは <!-- omit in toc --></h2><p>FREBDump とは、失敗した要求トレース (通称: FREB) を契機として ProcDump を実行することを指します。</p><p>(なお FREBDump は正式名称ではございません。失敗した要求トレース が 英語で Failed Request Event Buffering (FREB) と呼ばれること、ProcDump の Dump から FREBDump と呼称しております。)</p><p>このログ取得のポイントは FREB の発火点によって ProcDump を制御するところにあります。</p><h2 id="FREBDump-のメリット"><a href="#FREBDump-のメリット" class="headerlink" title="FREBDump のメリット "></a>FREBDump のメリット <!-- omit in toc --></h2><p>FREBDump でのダンプ採取のメリットは、ProcDump よりも柔軟なタイミングでのダンプの取得ができることです。<br>例えば以下は ProcDump では難しいですが、 FREBDump では可能になります。</p><ol><li>IIS サーバーが受け取ったリクエストで特定の時間以上になった場合にダンプを取る</li><li>40X や 50X など、特定のエラーレスポンスで応答されたタイミングでダンプを取る</li></ol><p>例えば、お客様から IIS サーバーが不定期にスローダウンし、リクエストのレスポンスが遅くなるといったお問い合わせをいただくことがございます。<br>このような場合は 1) のように特定の時間でダンプを生成するように設定することで調査をすることができます。</p><h2 id="目次"><a href="#目次" class="headerlink" title="目次 "></a>目次 <!-- omit in toc --></h2><ul><li><a href="#1-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">1. 前提条件</a><ul><li><a href="#11-%E4%BA%8B%E5%89%8D%E3%81%AB%E6%BA%96%E5%82%99%E3%81%8C%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">1.1. 事前に準備が必要なものについて</a></li></ul></li><li><a href="#2-FREBDump-%E3%81%AE%E8%A8%AD%E5%AE%9A%E6%89%8B%E9%A0%86">2. FREBDump の設定手順</a><ul><li><a href="#21-FREB-%E3%81%AE%E6%9C%89%E5%8A%B9%E5%8C%96">2.1. FREB の有効化</a></li><li><a href="#22-FREB-%E3%81%AE%E8%A6%8F%E5%89%87%E4%BD%9C%E6%88%90">2.2. FREB の規則作成</a></li><li><a href="#23-ProcDump-%E3%81%AE%E8%A8%AD%E5%AE%9A">2.3. ProcDump の設定</a><ul><li><a href="#231-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A7%E3%81%AE-customActionEnable-%E3%81%AE%E8%A8%AD%E5%AE%9A">2.3.1. サーバーでの customActionEnable の設定</a></li><li><a href="#232-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E5%81%B4%E3%81%A7%E3%81%AE-customActionExe-%E3%81%AA%E3%81%A9%E3%81%AE%E8%A8%AD%E5%AE%9A">2.3.2. ウェブサイト側での customActionExe などの設定</a></li></ul></li><li><a href="#24-FREBDump-%E3%81%AE%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%96%B9%E6%B3%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">2.4. FREBDump のアンインストール方法について</a></li><li><a href="#25-FREB-%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%AE%E5%89%8A%E9%99%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">2.5. FREB の設定の削除について</a></li><li><a href="#26-ProcDump-%E3%81%AE%E5%89%8A%E9%99%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">2.6. ProcDump の削除について</a></li></ul></li><li><a href="#3-FREBDump-%E3%81%AE%E6%A4%9C%E8%A8%BC%E6%96%B9%E6%B3%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">3. FREBDump の検証方法について</a></li><li><a href="#4-FREBDump-%E3%81%AE-FAQ-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">4. FREBDump の FAQ について</a></li></ul><h2 id="1-前提条件"><a href="#1-前提条件" class="headerlink" title="1. 前提条件"></a>1. 前提条件</h2><h3 id="1-1-事前に準備が必要なものについて"><a href="#1-1-事前に準備が必要なものについて" class="headerlink" title="1.1. 事前に準備が必要なものについて"></a>1.1. 事前に準備が必要なものについて</h3><p>FREBDump の取得のためには以下がインストールされている必要がございます。</p><ul><li>失敗した要求トレース (FREB) がインストールされていること</li><li>ProcDump がインストールされていること</li></ul><p>IIS Manager を起動し、中央のアイコンで、[IIS] - [失敗した要求トレース] が存在することを確認します。</p><p>もしこちらが存在しない場合は、失敗した要求トレース (FREB) のモジュールが存在しません。<br>その場合、サーバー マネージャーの役割サービスの追加で、[Web サーバー] - [状態と診断] - [トレース] をインストールします。<strong>インストールの際は、IIS の再起動が発生しますのでご注意ください。</strong></p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-22-38-58.png" alt="FREB のインストールが必要な場合について"></p><h2 id="2-FREBDump-の設定手順"><a href="#2-FREBDump-の設定手順" class="headerlink" title="2. FREBDump の設定手順"></a>2. FREBDump の設定手順</h2><h3 id="2-1-FREB-の有効化"><a href="#2-1-FREB-の有効化" class="headerlink" title="2.1. FREB の有効化"></a>2.1. FREB の有効化</h3><p>IIS マネージャーを起動し、[Web サイト] から現象が発生している &lt;対象となるウェブサイト&gt; を選択します。  </p><p>[操作] - [構成] - [失敗した要求トレース] をクリックします。  </p><p>[失敗した要求のトレースが、この Web サイトに対して有効になっていません。] という警告が表示される場合は、クリックしてログを有効にします。</p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-00-53-50.png" alt="FREBの有効化の説明図1"></p><p>[操作] ウィンドウの [サイトのトレースの編集] をクリックし、[有効にする] にチェックがあることを確認してください。</p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-18-02-00-38.png" alt="FREBの有効化の説明図2"></p><h3 id="2-2-FREB-の規則作成"><a href="#2-2-FREB-の規則作成" class="headerlink" title="2.2. FREB の規則作成"></a>2.2. FREB の規則作成</h3><p>[失敗した要求トレースの規則] - [操作] - [追加] をクリックします。</p><p>[トレースするコンテンツの指定] で、&lt;トレースするコンテンツ&gt;、<br>[トレース条件の定義] で、&lt;トレース条件の定義&gt;、<br>[トレース プロバイダーの選択] で、 &lt;トレースプロバイダー&gt; を設定し [終了] をクリックします。</p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-01-17-01.png" alt="FREB の規則作成手順図"></p><h3 id="2-3-ProcDump-の設定"><a href="#2-3-ProcDump-の設定" class="headerlink" title="2.3. ProcDump の設定"></a>2.3. ProcDump の設定</h3><h4 id="2-3-1-サーバーでの-customActionEnable-の設定"><a href="#2-3-1-サーバーでの-customActionEnable-の設定" class="headerlink" title="2.3.1. サーバーでの customActionEnable の設定"></a>2.3.1. サーバーでの customActionEnable の設定</h4><p>IIS マネージャーの[接続] ウィンドウで、最上位に存在するサーバーの [構成エディター] をダブルクリックします。<br>セクションで system.applicationHost/sites を選択します。</p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-20-55-37.png" alt="構成エディターの選択図"></p><p>(コレクション) の行を選択し、右側にある […] ボタンをクリックします。<br>[コレクション エディター] 画面で、&lt;対象となるウェブサイト&gt; を選択します。<br>プロパティより、[traceFailedRequestsLogging] を展開し、以下を設定します。</p><ul><li>[customActionsEnabled] : True  </li><li>[maxLogFileSizeKB] : 1024</li></ul><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-20-57-52.png" alt="サーバー側構成エディターの設定図"></p><p>コレクション エディター ウィンドウを閉じ、適用します。</p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-21-32-52.png" alt="構成エディターの適用図"></p><h4 id="2-3-2-ウェブサイト側での-customActionExe-などの設定"><a href="#2-3-2-ウェブサイト側での-customActionExe-などの設定" class="headerlink" title="2.3.2. ウェブサイト側での customActionExe などの設定"></a>2.3.2. ウェブサイト側での customActionExe などの設定</h4><p>サーバーを選択しましたが、次は &lt;対象となるウェブサイト&gt; を選択して、<br>サイトに存在する構成エディターを開きます。<br>[場所] が &lt;対象となるウェブサイト&gt; Web.config であるを確認してください。<br>[セクション] で  system.webServer/tracing/traceFailedRequests を選択します。  </p><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-26-22-08-45.png" alt="サイトの構成エディターの選択図"></p><p>(コレクション) の行を選択し、右側にある […] ボタンをクリックします。<br>[コレクション エディター] 画面で、path が * となっている行を選択し、<br>[プロパティ] ウィンドウの各項目に ProcDump の設定を行います。</p><p>以下それぞれを入力してください。</p><ul><li>[customActionExe] : &lt;インストールした ProcDump のパス&gt;</li><li>[customActionParams] : &lt;ProcDump の引数&gt;</li><li>[customActionTriggerLimit] : &lt;customActionExe の試行回数&gt;</li></ul><p>※弊社から特に指示がない場合は以下の通りに行ってください。</p><ul><li>[customActionExe] : &lt;C:\Procdump\procdump.exe などのインストールした .exe のパス&gt;</li><li>[customActionParams] : -accepteula -ma -s 30 -n 2 %1% &lt;C:\ProcDump\output などのダンプファイル保存場所&gt;</li><li>[customActionTriggerLimit] : 2</li></ul><p><img src="/blog/web-apps/frebdump/frebdump_2021-05-20-22-30-14.png" alt="構成エディターによる ProcDump の設定図"></p><p>コレクション エディター ウィンドウを閉じます。<br>[操作] ウィンドウで、[適用] を選択します。</p><p>以上で設定は終了です。</p><h3 id="2-4-FREBDump-のアンインストール方法について"><a href="#2-4-FREBDump-のアンインストール方法について" class="headerlink" title="2.4. FREBDump のアンインストール方法について"></a>2.4. FREBDump のアンインストール方法について</h3><p>&lt;対象となるウェブサイト&gt; の構成エディタで設定した以下3つの値を削除します。</p><ul><li>customActionExe</li><li>customActionParams</li><li>customActionTriggerLimit</li></ul><p>サーバーの構成エディタで設定した以下の設定を変更します</p><ul><li>customActionEnabled = True の設定を False</li></ul><h3 id="2-5-FREB-の設定の削除について"><a href="#2-5-FREB-の設定の削除について" class="headerlink" title="2.5. FREB の設定の削除について"></a>2.5. FREB の設定の削除について</h3><p>FREB 自体を無効化する場合は、<br>&lt;対象となるウェブサイト&gt; の 失敗した要求トレースの規則 を開き、作成した規則を選択し、削除 を押してください。</p><h3 id="2-6-ProcDump-の削除について"><a href="#2-6-ProcDump-の削除について" class="headerlink" title="2.6. ProcDump の削除について"></a>2.6. ProcDump の削除について</h3><p>ProcDump はインストールしたフォルダごと削除いただくことでアンインストールできます。</p><h2 id="3-FREBDump-の検証方法について"><a href="#3-FREBDump-の検証方法について" class="headerlink" title="3. FREBDump の検証方法について"></a>3. FREBDump の検証方法について</h2><p>こちらは <a href="https://jpdsi.github.io/blog/web-apps/frebdump-faq/">失敗した要求トレースを契機とするメモリダンプ (FREBDump) でよくいただくご質問について</a> をご確認ください。</p><h2 id="4-FREBDump-の-FAQ-について"><a href="#4-FREBDump-の-FAQ-について" class="headerlink" title="4. FREBDump の FAQ について"></a>4. FREBDump の FAQ について</h2><p>こちらは <a href="https://jpdsi.github.io/blog/web-apps/frebdump-faq/">失敗した要求トレースを契機とするメモリダンプ (FREBDump) でよくいただくご質問について</a> をご確認ください。</p><!-- また今回利用した 失敗した要求トレース(FREB)、ProcDump についての Q&A も合わせてご確認いただけますと幸いです。- [失敗した要求トレース(FREB) についての Q&A][失敗した要求トレース(FREB) についてのQ&A]- [ProcDump についての Q&A][ProcDump についての Q&A]--><p>以上の Q&amp;A を確認したもののご不明点が解決しない場合は、私共サポートまでお問い合わせいただけますと大変幸いです。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです！  &lt;/p&gt;
&lt;p&gt;弊社にお問い合わせいただくお客様に、スムーズな解決をご提供するためにお役に立てる内容をご提供させていただきます。&lt;br&gt;今回は IIS のワーカープロセス (w3wp.exe) のメモリダンプを取得する手法の一つ</summary>
      
    
    
    
    
    <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="FREBDump" scheme="https://jpdsi.github.io/blog/tags/FREBDump/"/>
    
  </entry>
  
  <entry>
    <title>net-export の使い方</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-to-use-net-export/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-to-use-net-export/</id>
    <published>2021-05-20T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.979Z</updated>
    
    <content type="html"><![CDATA[<p>みなさんこんにちは。日本マイクロソフトの IE/Edge サポートチームです。</p><p>今回は Chromium の機能である net-export を使用して、Chromium Edge のネットワーク レベルのイベントや状態に関する詳細情報を確認する方法を紹介します。<br>サポートにお問い合せいただいたときにも、今回の手順でログを取得いただくこともありますので、以下を参考にしていただければと思います。</p><hr><h2 id="ログの取得方法"><a href="#ログの取得方法" class="headerlink" title="ログの取得方法"></a>ログの取得方法</h2><ol><li><p>Microsoft Edge を起動し、アドレス バーに edge://net-export/ を入力してページを開きます。</p></li><li><p>OPTIONS で、[Include raw bytes (will include cookies and credentials)] をオンにします。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export1.png" alt="ログ取得の設定"></p></li><li><p>[Start Logging to Disk] をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export2.png" alt="ログ取得の開始"></p></li><li><p>ファイル名を入力し、保存場所を選択します。</p></li><li><p>[保存] をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export3.png" alt="保存するファイル名を指定"></p></li><li><p>新しいタブを開き、問題を再現させます。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export4.png" alt="現象の再現"></p></li><li><p>現象再現後に net-export のタブに戻り、[Stop logging] をクリックします。</p></li><li><p>停止すると以下の画面になります。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export5.png" alt="ログ取得の終了"></p></li></ol><hr><h2 id="保存したログの確認方法"><a href="#保存したログの確認方法" class="headerlink" title="保存したログの確認方法"></a>保存したログの確認方法</h2><p>上記の手順で取得した json ファイルは、以下のようにして任意の PC で表示できます。</p><ol><li><p>Microsoft Edge を起動し、<a href="https://netlog-viewer.appspot.com/">https://netlog-viewer.appspot.com/</a> を開きます。<br>※ <a href="https://chromium.googlesource.com/catapult/+/refs/heads/main/netlog_viewer">netlog-viewer</a> は、クライアント (ブラウザー) 上だけで json ファイルを解析して視覚化します。外部へデータを送信することはありません。</p></li><li><p>[ファイルの選択] をクリックして json ファイルのパスを指定します。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export-view1.png" alt="表示するログ ファイルの選択"></p></li><li><p>ファイルが読み込まれると以下の画面になります。<br><img src="/blog/internet-explorer-microsoft-edge/how-to-use-net-export/net-export-view2.png" alt="ログの表示画面"></p></li></ol><p>左側のメニューから各種情報を確認できます。</p><ul><li><p>Import<br>net-export で取得した json ファイルを読み込みます。</p></li><li><p>Proxy<br>ブラウザで使用しているプロキシ設定に関する情報を表示します。プロキシを使用していない場合は、”Use DIRECT connections” と表示されます。</p></li><li><p>Events<br>発生したイベントのリストを表示します。イベントには、ソケット接続、SPDY セッション、HTTP-TCP 接続、URL 要求などがあります。エラーは赤い文字で表示されます。</p></li><li><p>Timeline<br>開いているソケット数、使用中のソケット数、URL 要求、DNS 要求、送受信したデータ量などの情報をグラフに表示します。</p></li><li><p>DNS<br>端末の DNS ルックアップのログを表示します。ウェブページを読み込めない場合の問題のトラブルシューティングに役立ちます。ログには、URL とそれに対応する IP だけでなく、DNS 要求の時間も示されます。</p></li><li><p>Sockets<br>開いているソケットと使用されているソケットのログを表示します。このログはネットワークの高度なトラブルシューティングに使用します。</p></li><li><p>Alt-Svc<br>代替サービス マッピングに関する情報を表示します。</p></li><li><p>HTTP/2<br>HTTP/2 セッションと代替サービス マッピングのログを表示します。</p></li><li><p>QUIC<br>Quick UDP Internet Connections（QUIC）に関する情報を表示します。これは、TCP を使用する接続指向のウェブアプリを最適化するネットワーク プロトコル（試験運用中）です。</p></li><li><p>Reporting<br>送信元の設定、ネットワーク エラーのログ記録に関するポリシー、キューに登録されたレポートを表示します。</p></li><li><p>Cache<br>キャッシュされたエントリと統計情報のリストを表示します。</p></li><li><p>Modules<br>アクティブな Edge / Chrome 拡張機能とアプリのリストを表示します。</p></li><li><p>Prerender<br>アクティブな事前レンダリング ウェブサイトとその履歴を表示します。</p></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさんこんにちは。日本マイクロソフトの IE/Edge サポートチームです。&lt;/p&gt;
&lt;p&gt;今回は Chromium の機能である net-export を使用して、Chromium Edge のネットワーク レベルのイベントや状態に関する詳細情報を確認する方法を紹介しま</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Edge 組み込みのサイト リスト マネージャーについて</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/</id>
    <published>2021-05-19T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.971Z</updated>
    
    <content type="html"><![CDATA[<p>みなさんこんにちは！</p><p>Microsoft Edge に組み込まれた サイト リスト マネージャー をご紹介します。</p><p>モダンなブラウザーにまだ対応できていないサイトを IE モードで表示させたい場合や、逆にモダンなサイトを IE で開こうとした場合に Edge に転送したい場合などにサイト リスト (.xml) をご利用いただいているかと思います。</p><p>これまでサイト リストの作成を支援するために <a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/use-the-enterprise-mode-site-list-manager">スタンドアロンの Enterprise Mode Site List Manager というツール</a> を提供してきましたが、今後は機能の更新は行われませんので、代わりに Microsoft Edge の組み込みの機能をご利用ください。</p><p>この機能は <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-site-list-manager">Microsoft Edge の Enterprise Site List Manager</a> でもご紹介していますが、今回は画面ショットを交えてご説明していきます。</p><hr><ol><li>Microsoft Edge を起動してアドレスバーに edge://compat/sitelistmanager と入力し開きます。</li></ol><p>※ 以下ポリシーを設定することで、「Microsoft Edge の互換性」の画面 (edge://compat/) に「エンタープライズ サイト リスト マネージャー」へのメニューを追加することもできます。</p><pre><code>  [コンピューターの構成]or[ユーザーの構成]   ＋[管理用テンプレート]    ＋[Microsoft Edge]  「Enterprise Mode Site List Manager」有効</code></pre><p><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/1.png" alt="エンタープライズ サイト リスト マネージャー"></p><ol start="2"><li><p>「サイトの追加」をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/2.png" alt="サイトの追加"></p></li><li><p>Web サイトの URL を指定します。この時 https:// や http:// などのプロトコルの指定を含めてはいけません。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/3.png" alt="URL の指定"></p></li><li><p>Web サイトを開くブラウザーを選択します。<br>IE モードについては <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/">こちらのブログ記事</a> をご参考ください。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/4.png" alt="ブラウザーの選択"></p></li><li><p>Web サイトに合わせて互換モードを選択します。いままでサイトリストでの制御をおこなっていない場合は “既定のモード” にします。</p></li></ol><p><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/5.png" alt="IE モードで開く場合のドキュメント モードの指定"></p><ol start="6"><li><p>必要に応じてコメントを記載します。そして「追加」をクリックして Web サイトをエンタープライズ サイト リストに追加します。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/6.png" alt="コメントの入力"></p></li><li><p>必要に応じて「XML プレビュー」を使用してエクスポート時に作成される XML の内容を事前に確認します。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/7.png" alt="サイト リスト (XML 形式) のプレビュー"></p></li></ol><p><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/8.png" alt="サイト リスト (XML 形式) の内容"></p><p>また、フィルターを利用してどの URL を追加したか確認できますのでこちらもご活用ください。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/9.png" alt="検索方法"></p><ol start="8"><li><p>Web サイトの追加や確認が完了したら、XML ファイルに書き出すため「XML にエクスポート」をクリックします。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/10.png" alt="エクスポート"></p></li><li><p>バージョン番号とファイル名を指定し、XML ファイルに「エクスポート」します。<br>XML ファイルはダウンロード フォルダーに保存されます。<br><img src="/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/11.png" alt="エクスポート"></p></li></ol><p>以上の方法でサイト リストを作成することができます。<br>会社に管理された環境で新たなソフトウェアをインストールできない場合でもこの方法ならサイト リストを作成できますね。</p><hr><p>&lt;参考情報&gt;</p><p><a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode">エンタープライズ モードとエンタープライズ モード サイト一覧</a></p><p><a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/enterprise-mode-schema-version-2-guidance">エンタープライズ モード スキーマ v.2 ガイダンス</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさんこんにちは！&lt;/p&gt;
&lt;p&gt;Microsoft Edge に組み込まれた サイト リスト マネージャー をご紹介します。&lt;/p&gt;
&lt;p&gt;モダンなブラウザーにまだ対応できていないサイトを IE モードで表示させたい場合や、逆にモダンなサイトを IE で開こうとした場合</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="サイト リスト マネージャー" scheme="https://jpdsi.github.io/blog/tags/%E3%82%B5%E3%82%A4%E3%83%88-%E3%83%AA%E3%82%B9%E3%83%88-%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%83%BC/"/>
    
  </entry>
  
  <entry>
    <title>Internet Explorer から Microsoft Edge への移行ガイドライン</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/guidelines-for-migrating-from-ie-to-microsoft-edge/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/guidelines-for-migrating-from-ie-to-microsoft-edge/</id>
    <published>2021-05-19T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.979Z</updated>
    
    <content type="html"><![CDATA[<p>みなさんこんにちは！</p><p>Microsoft は Internet Explorer (以降 IE) デスクトップ アプリのサポートを 2022 年 6 月 15 日に終了することをブログで公開しました。</p><p><a href="https://blogs.windows.com/japan/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/">Internet Explorer は Microsoft Edge へ – Windows 10 の Internet Explorer 11 デスクトップアプリは 2022 年 6 月 15 日にサポート終了</a></p><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/internet-explorer-app-end-of-support/">Internet Explorer 11 デスクトップ アプリのサポート終了へ! IE モードへの移行を進めましょう!</a></p><p><a href="https://46c4ts1tskv22sdav81j9c69-wpengine.netdna-ssl.com/wp-content/uploads/prod/sites/31/2021/05/a837387e3dad2d655f50ebc0e83c8edf.pdf">(PDF) Microsoft Edge + Internet Explorer モード Getting Started ガイド</a></p><p>これに伴い IE から Microsoft Edge (以降 Edge) やモダン ブラウザーへの移行を本格的に検討される方が多くなることを予想しています。<br>そんなことで今日は IE から Microsoft Edge へのステージ別移行ガイドライン的なブログを書きたいと思います。</p><p>2029 年をターゲットに 4 つのステージでやるべきことをご紹介します。<br>最終的にはステージ 4 の “IE が不要な状態” となることが望ましいので、本記事を参考に Edge への移行を進めてみてください。</p><hr><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li><a href="#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8-1-IE-%E3%82%92%E6%97%A2%E5%AE%9A%E3%81%AE%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%BC%E3%81%A8%E3%81%97%E3%81%A6%E9%81%8B%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B">ステージ 1. IE を既定のブラウザーとして運用している</a></li><li><a href="#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8-2-Edge-%E3%81%AB%E3%81%AF%E7%A7%BB%E8%A1%8C%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8C%E3%80%81IE-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A8-IE-%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97-%E3%82%A2%E3%83%97%E3%83%AA-%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%89%E3%82%A2%E3%83%AD%E3%83%B3%E3%81%AE-IE11-%E3%82%92%E4%BD%B5%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B">ステージ 2. Edge には移行しているが、IE モードと IEデスクトップ アプリ (スタンドアロンの IE11) を併用している</a></li><li><a href="#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8-3-IE-%E3%83%A2%E3%83%BC%E3%83%89%E3%82%92%E9%83%A8%E5%88%86%E7%9A%84%E3%81%AB%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8C-IE-%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97-%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AF%E3%82%82%E3%81%86%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84">ステージ 3. IE モードを部分的に利用しているが IE デスクトップ アプリはもう使っていない</a></li><li><a href="#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8-4-Edge-%E3%81%AB%E5%AE%8C%E5%85%A8%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%A7%E3%81%8D%E3%81%A6%E3%81%8A%E3%82%8A%E3%80%81IE-%E3%83%A2%E3%83%BC%E3%83%89%E5%90%AB%E3%82%81%E3%81%A6%E5%AE%8C%E5%85%A8%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E3%81%84">ステージ 4. Edge に完全に移行できており、IE モード含めて完全に必要ない</a></li></ul><hr><h2 id="ステージ-1-IE-を既定のブラウザーとして運用している"><a href="#ステージ-1-IE-を既定のブラウザーとして運用している" class="headerlink" title="ステージ 1. IE を既定のブラウザーとして運用している"></a>ステージ 1. IE を既定のブラウザーとして運用している</h2><h4 id="1-1-IE-に依存しているサイトの洗い出し"><a href="#1-1-IE-に依存しているサイトの洗い出し" class="headerlink" title="1-1. IE に依存しているサイトの洗い出し"></a>1-1. IE に依存しているサイトの洗い出し</h4><p>まずは IE に依存しているサイトがどれくらいあるのか、また、具体的にどのサイトが依存しているのか洗い出します。<br>1 ページずつ確認することが確実ですが、Enterprise Site Discoveryを使えば従来のドキュメント モードを使用しているサイトを機械的に検出することができます。</p><p><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode-site-discovery">Enterprise Site Discovery ステップ バイ ステップ ガイド</a></p><h4 id="1-2-IE-モードでの動作確認"><a href="#1-2-IE-モードでの動作確認" class="headerlink" title="1-2. IE モードでの動作確認"></a>1-2. IE モードでの動作確認</h4><p>洗い出したサイトが Edge の IE モードで動作するかテストを行い、動作しない場合は改修もしくは Microsoft のサポートに問い合わせてください。<br>なお、簡易的に IE モードでの動作を確認したい場合は IE モード テスト機能が便利です。<br>この機能は IE モードをタブ全体で有効にし、そのタブで開いたサイトはすべて IE モードになる機能です。<br>以下 2 つのポリシーを設定することで「…」-&gt;「その他のツール」-&gt;に「サイトを Internet Explorer モードで開く」のメニューが追加され使用できるようになります。</p><p>※ 参考 <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/#IE-%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%97%E3%81%9F%E3%81%84">IE モードでの表示をテストしたい</a></p><pre><code>  [コンピューターの構成] or [ユーザーの構成]   ＋[管理用テンプレート]    ＋[Microsoft Edge]  「Internet Explorer 統合を構成する」有効にし IE モードを選択  「Internet Explorer モードのテストを許可」有効</code></pre><p><img src="/blog/internet-explorer-microsoft-edge/guidelines-for-migrating-from-ie-to-microsoft-edge/1.png" alt="ポリシーの設定"></p><p>なお <a href="https://youtu.be/XPFx4A32npk">こちら</a> で動画による解説もしていますのでぜひご覧ください。</p><h4 id="1-3-サイト一覧-xml-ファイルの作成とポリシーの設定"><a href="#1-3-サイト一覧-xml-ファイルの作成とポリシーの設定" class="headerlink" title="1-3. サイト一覧 (.xml) ファイルの作成とポリシーの設定"></a>1-3. サイト一覧 (.xml) ファイルの作成とポリシーの設定</h4><p>IE モードで問題なくサイトが動作することを確認したら、サイト一覧ファイルに IE モードで表示したいサイトを定義します。<br>サイト一覧の作り方については <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/">こちらの記事</a> がありますので参考にしてみてください。<br>そして以下のポリシーを使って、作成したサイト一覧の取得先を設定します。</p><pre><code>  [コンピューターの構成] or [ユーザーの構成]   ＋[管理用テンプレート]    ＋[Microsoft Edge]   「エンタープライズ モード サイト一覧を構成する」有効にしサイト一覧の取得先を設定   (例 http://contoso.com/Sitelist.xml)    ※IE モードを使うためには以下ポリシー設定も必要なので合わせて有効にします。   「Internet Explorer 統合を構成する」有効にし IE モードを選択</code></pre><h4 id="1-4-既定のブラウザーの変更"><a href="#1-4-既定のブラウザーの変更" class="headerlink" title="1-4. 既定のブラウザーの変更"></a>1-4. 既定のブラウザーの変更</h4><p>上記までの作業でサイト表示に IE が必要なサイトは IE モードで表示できるになったのでもう IE は必要ありません。<br>既定のブラウザーを IE から Edge に変更します。<br><img src="/blog/internet-explorer-microsoft-edge/guidelines-for-migrating-from-ie-to-microsoft-edge/2.png" alt="既定のブラウザーの設定"></p><p>なお、既定のブラウザーの変更はグループ ポリシーで配布することも可能です。詳細は <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-default-browser">こちら</a> をご覧ください。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ステージ-2-Edge-には移行しているが、IE-モードと-IE-デスクトップ-アプリ-スタンドアロンの-IE11-を併用している"><a href="#ステージ-2-Edge-には移行しているが、IE-モードと-IE-デスクトップ-アプリ-スタンドアロンの-IE11-を併用している" class="headerlink" title="ステージ 2. Edge には移行しているが、IE モードと IE デスクトップ アプリ (スタンドアロンの IE11) を併用している"></a>ステージ 2. Edge には移行しているが、IE モードと IE デスクトップ アプリ (スタンドアロンの IE11) を併用している</h2><h4 id="2-1-IE-デスクトップ-アプリ依存サイトの洗い出し"><a href="#2-1-IE-デスクトップ-アプリ依存サイトの洗い出し" class="headerlink" title="2-1. IE デスクトップ アプリ依存サイトの洗い出し"></a>2-1. IE デスクトップ アプリ依存サイトの洗い出し</h4><p>すでに IE モードを使用している環境であれば、何等かの理由で Edge or IE モード で動作しないサイトを止むを得ず IE デスクトップ アプリで表示させているのだと思います。<br>まずは、なにが IE デスクトップ アプリから IE モードへの移行を妨げているのかを整理し、IE デスクトップ アプリ依存のサイトの改修を進めます。</p><h4 id="2-2-サイト一覧へのサイトの追加"><a href="#2-2-サイト一覧へのサイトの追加" class="headerlink" title="2-2. サイト一覧へのサイトの追加"></a>2-2. サイト一覧へのサイトの追加</h4><p>IE デスクトップ アプリ依存のサイトの改修が完了したら、既存のサイト一覧に改修したサイトを追加して IE デスクトップ アプリではなく IE モードで表示するよう定義してください。</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ステージ-3-IE-モードを部分的に利用しているが-IE-デスクトップ-アプリはもう使っていない"><a href="#ステージ-3-IE-モードを部分的に利用しているが-IE-デスクトップ-アプリはもう使っていない" class="headerlink" title="ステージ 3. IE モードを部分的に利用しているが IE デスクトップ アプリはもう使っていない"></a>ステージ 3. IE モードを部分的に利用しているが IE デスクトップ アプリはもう使っていない</h2><p>IE モードがあれば IE デスクトップ アプリは必要ない状況になったら、IE デスクトップ アプリの起動を無効化する以下のポリシーを配布し、IE モードのみを使用できるようにします。</p><pre><code>    [コンピューターの構成] or [ユーザーの構成]   ＋[管理用テンプレート]    ＋[Windows コンポーネント]     ＋[Internet Explorer]  「Internet Explorer 11 をスタンドアロンブラウザーとして無効にする」</code></pre><p>参考 : <a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-disable-ie11">Internet Explorer 11 を無効にする</a></p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><h2 id="ステージ-4-Edge-に完全に移行できており、IE-モード含めて完全に必要ない"><a href="#ステージ-4-Edge-に完全に移行できており、IE-モード含めて完全に必要ない" class="headerlink" title="ステージ 4. Edge に完全に移行できており、IE モード含めて完全に必要ない"></a>ステージ 4. Edge に完全に移行できており、IE モード含めて完全に必要ない</h2><p>IE に依存したサイトはすべて改修され、すべてのサイトを Edge で動作させることができるようになったら、IE デスクトップ アプリの機能を無効化することを検討してください。<br>「Windows の機能の有効化または無効化」にて「Internet Explorer 11」のチェックを外すことで無効化できます。<br>以下ドキュメントの「Method 1 - Use Control Panel (client systems only)」でも紹介しているので参考にしてください。</p><p><a href="https://docs.microsoft.com/en-us/troubleshoot/browsers/disable-internet-explorer-windows">Disable Internet Explorer on Windows</a> (機械翻訳版は <a href="https://docs.microsoft.com/ja-jp/troubleshoot/browsers/disable-internet-explorer-windows">こちら</a> )</p><ul><li><a href="#%E7%9B%AE%E6%AC%A1">目次へ</a></li></ul><hr><p>IE デスクトップ アプリから IE モードへの移行にあたり、互換性の問題でお困りの場合は <a href="https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/">こちらの FAQ No.17</a> にある App Assure のご利用をご検討ください。</p><p>&lt;参考リンク&gt;<br><a href="https://46c4ts1tskv22sdav81j9c69-wpengine.netdna-ssl.com/wp-content/uploads/prod/sites/31/2021/05/a837387e3dad2d655f50ebc0e83c8edf.pdf">(PDF) Microsoft Edge + Internet Explorer モード Getting Started ガイド</a></p><ul><li><p>Edge のポリシーを使うための情報</p><ul><li><a href="https://docs.microsoft.com/ja-jp/deployedge/configure-microsoft-edge">Windows 用に Microsoft Edge を構成する</a></li></ul></li><li><p>Edge ポリシーの一覧</p><ul><li><a href="https://docs.microsoft.com/ja-jp/deployedge/configure-microsoft-edge">Microsoft Edge ブラウザー ポリシーに関するドキュメント</a></li></ul></li><li><p>IE モードについて</p><ul><li><a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode">Internet Explorer モードとは</a></li><li><a href="https://youtu.be/XPFx4A32npk">(動画) Microsoft Edge で IE モードを使ってみよう (IT 管理者向け)</a></li></ul></li><li><p>エンタープライズ モード サイト一覧について</p><ul><li><p><a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode">エンタープライズ モードとエンタープライズ モード サイト一覧 (IT 担当者向け Internet Explorer 11)</a></p></li><li><p><a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-deploy-guide/add-multiple-sites-to-enterprise-mode-site-list-using-the-version-2-schema-and-enterprise-mode-tool">ファイルと Enterprise Mode Site List Manager (スキーマ v.2) を使ってエンタープライズ モード サイト一覧に複数のサイトを追加する (IT 担当者向け Internet Explorer 11)</a></p></li></ul></li></ul><p>それでは皆様またの機会に！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさんこんにちは！&lt;/p&gt;
&lt;p&gt;Microsoft は Internet Explorer (以降 IE) デスクトップ アプリのサポートを 2022 年 6 月 15 日に終了することをブログで公開しました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blogs</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="IEからEdgeへの移行" scheme="https://jpdsi.github.io/blog/tags/IE%E3%81%8B%E3%82%89Edge%E3%81%B8%E3%81%AE%E7%A7%BB%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Internet Explorer 11 デスクトップ アプリのサポート終了へ! IE モードへの移行を進めましょう!</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/internet-explorer-app-end-of-support/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/internet-explorer-app-end-of-support/</id>
    <published>2021-05-19T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.987Z</updated>
    
    <content type="html"><![CDATA[<p>みなさんこんにちは。日本マイクロソフトの IE/Edge サポートチームです。</p><p>本日、以下の情報が公開されました。<br><span style="color: #ff0000;font-weight:bold;">FAQ を含め日本語での資料が充実していますので、まず以下のふたつの公式ドキュメントを一通りご覧ください。</span></p><p><a href="https://blogs.windows.com/japan/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/">Internet Explorer は Microsoft Edge へ – Windows 10 の Internet Explorer 11 デスクトップアプリは 2022 年 6 月 15 日にサポート終了</a></p><p><a href="https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/">「Internet Explorer 11 デスクトップ アプリケーションのサポート終了」の発表に関連する FAQ</a></p><p>(英語原文)<br><a href="https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/">The future of Internet Explorer on Windows 10 is in Microsoft Edge—the Internet Explorer 11 desktop application will be retired on June 15, 2022</a></p><p><a href="https://aka.ms/IEModeFAQ">Internet Explorer 11 desktop app retirement FAQ</a></p><p>以下には上記の公式ドキュメントにある内容から要点のみ簡潔にまとめています。</p><hr><h2 id="2022-年-6-月-15-日に-Windows-10-の-Internet-Explorer-11-“デスクトップ-アプリ”-のサポートを終了し、Microsoft-Edge-に組み込まれている-“IE-モード”-で少なくとも-2029-年までは引き続きサポートします。"><a href="#2022-年-6-月-15-日に-Windows-10-の-Internet-Explorer-11-“デスクトップ-アプリ”-のサポートを終了し、Microsoft-Edge-に組み込まれている-“IE-モード”-で少なくとも-2029-年までは引き続きサポートします。" class="headerlink" title="2022 年 6 月 15 日に Windows 10 の Internet Explorer 11 “デスクトップ アプリ” のサポートを終了し、Microsoft Edge に組み込まれている “IE モード” で少なくとも 2029 年までは引き続きサポートします。"></a>2022 年 6 月 15 日に Windows 10 の Internet Explorer 11 “デスクトップ アプリ” のサポートを終了し、Microsoft Edge に組み込まれている “IE モード” で少なくとも 2029 年までは引き続きサポートします。</h2><h3 id="サポート終了対象"><a href="#サポート終了対象" class="headerlink" title="サポート終了対象"></a>サポート終了対象</h3><ul><li><span style="color: #ff0000;font-weight:bold;">半期チャネル (SAC) で配信される</span>以下の OS 上の Internet Explorer 11 デスクトップ アプリ (スタンドアロンの IE11)<ul><li>Windows 10 desktop 全エディション (20H2 およびそれ以降にリリースされるバージョン) </li><li>Windows 10 IoT (20H2 およびそれ以降にリリースされるバージョン)</li></ul></li></ul><h3 id="サポート終了対象外"><a href="#サポート終了対象外" class="headerlink" title="サポート終了対象外"></a>サポート終了対象外</h3><ul><li>IE モード</li><li>Internet Explorer platform (MSHTML / Trident) (WebBrowser コントロールの利用)</li><li>現在リリースされている 以下の OS 上の Internet Explorer 11 デスクトップ アプリ (スタンドアロンの IE11)<ul><li>Windows 8.1</li><li>Windows 7 ESU</li><li>Windows 10 Server SAC (全バージョン)</li><li>Windows 10 IoT LTSC (旧 LTSB 含む) (全バージョン)</li><li>Windows 10 Server LTSC (旧 LTSB 含む) (全バージョン)</li><li>Windows 10 client LTSC (旧 LTSB 含む) (全バージョン)</li></ul></li></ul><p>なお、上記 Windows OS のサポート終了日は <a href="https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/">こちらの “8) IE モードはいつまでサポートされますか？” の部分にある表</a> をご覧ください。</p><ul><li>IE でなければ閲覧できない古い技術を使って作成されたレガシーな Web サイトは、2022 年 6 月 15 日以降は IE モードで閲覧してください。(以下のイメージをご覧ください)</li><li>スタンドアロンの IE についてはサポートを終了しますが、IE モードは少なくとも 2029 年まではサポートされますので、IE モードへの移行、さらには Edge への移行 (HTML5 に対応したモダンなウェブ アプリへの移行) を計画的に進めていただくことをお勧めします。</li><li>IE モードのよくあるご質問は <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/">こちら</a> をご覧ください。</li></ul><hr><h3 id="これまで-二つのブラウザーを使い分ける"><a href="#これまで-二つのブラウザーを使い分ける" class="headerlink" title="これまで : 二つのブラウザーを使い分ける"></a>これまで : 二つのブラウザーを使い分ける</h3><p><img src="/blog/internet-explorer-microsoft-edge/internet-explorer-app-end-of-support/before.png" alt="これまで : IE と Edge Legacy のブラウザーを使い分ける"></p><h3 id="これから-一つの-Edge-を利用する"><a href="#これから-一つの-Edge-を利用する" class="headerlink" title="これから : 一つの Edge を利用する"></a>これから : 一つの Edge を利用する</h3><p><img src="/blog/internet-explorer-microsoft-edge/internet-explorer-app-end-of-support/after.png" alt="これから : IE が Edge に統合されて IE モードとして利用できる"></p><hr><h4 id="参考-関連する記事"><a href="#参考-関連する記事" class="headerlink" title="(参考) 関連する記事"></a>(参考) 関連する記事</h4><ul><li><a href="https://blogs.windows.com/japan/2021/05/19/internet-explorer-11-desktop-app-retirement-faq/">「Internet Explorer 11 デスクトップ アプリケーションのサポート終了」の発表に関連する FAQ</a></li><li><a href="https://46c4ts1tskv22sdav81j9c69-wpengine.netdna-ssl.com/wp-content/uploads/prod/sites/31/2021/05/a837387e3dad2d655f50ebc0e83c8edf.pdf">(PDF) Microsoft Edge + Internet Explorer モード Getting Started ガイド</a></li></ul><h5 id="これまでに当サポート-チームで公開した記事"><a href="#これまでに当サポート-チームで公開した記事" class="headerlink" title="これまでに当サポート チームで公開した記事"></a>これまでに当サポート チームで公開した記事</h5><ul><li><p><a href="https://social.msdn.microsoft.com/Forums/ja-JP/47290e24-fc66-4d3e-a2de-429643758d40/internet-explorer-12398201702446012395123881235612390?forum=edgeiesupportteamja">Internet Explorer の今後について</a></p></li><li><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-about-using-new-edge/">まだデフォルトIE？ 新しい Microsoft Edge を使いませんか？</a></p></li><li><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ie-mode-faq/">IE モードのよくあるご質問</a></p></li><li><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/guidelines-for-migrating-from-ie-to-microsoft-edge/">Internet Explorer から Microsoft Edge への移行ガイドライン</a></p></li><li><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/edge-ie-mode-site-list-manager/">Microsoft Edge 組み込みのサイト リスト マネージャーについて</a></p></li></ul><h5 id="その他弊社社員が作成した資料"><a href="#その他弊社社員が作成した資料" class="headerlink" title="その他弊社社員が作成した資料"></a>その他弊社社員が作成した資料</h5><ul><li><a href="https://youtu.be/XPFx4A32npk">(動画) Microsoft Edge で IE モードを使ってみよう (IT 管理者向け)</a></li><li><a href="https://www.slideshare.net/takuyaot/it-windows-10-ie11-microsoft-edge">(スライド) IT エンジニアのための 流し読み Windows 10 - IE11 のサポート終了と Microsoft Edge について</a></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさんこんにちは。日本マイクロソフトの IE/Edge サポートチームです。&lt;/p&gt;
&lt;p&gt;本日、以下の情報が公開されました。&lt;br&gt;&lt;span style=&quot;color: #ff0000;font-weight:bold;&quot;&gt;FAQ を含め日本語での資料が充実しています</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
    <category term="IE モード" scheme="https://jpdsi.github.io/blog/tags/IE-%E3%83%A2%E3%83%BC%E3%83%89/"/>
    
  </entry>
  
  <entry>
    <title>Internet Explorer および Microsoft Edge での Flash の今後の対応について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/flash/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/flash/</id>
    <published>2021-04-27T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.979Z</updated>
    
    <content type="html"><![CDATA[<p>更新履歴:<br>2020/9/9 更新: 今後に関する最新情報を追記しました。<br>2020/10/28 更新: Update for Removal of Adobe Flash Player がリリースされました。<br>2020/10/30 更新: Flash のブロックに関して追記しました。<br>2020/11/06 更新: 古くなった情報を削除し、最新情報を見やすくしました。よくあるお問い合わせを追記しました。<br>2020/12/09 更新: Adobe 社の公開情報をもとに、『Flash の既定で無効化』について追記しました。<br>2021/1/5 更新 : 2020 年 12 月末をもって Adobe Flash Player のサポートを終了しました。<br>2021/1/12 更新 : 『Flash の実行ブロック』について内容を更新しました。<br>2021/4/28 更新 : KB4577586 (Update for Removal of Adobe Flash Player) について更新しました。</p><hr><p><span style="color: #ff0000;font-weight:bold;">弊社も Adobe 社も 2020 年 12 月末をもって Adobe Flash Player のサポート (お問い合わせの受付やセキュリティ更新の提供) を終了しました。セキュリティの観点からは 2021 年夏予定の Flash の永久削除を待つのではなく、『Update for Removal of Adobe Flash Player』を使用してできる限り早急に自発的に Flash を永久削除することをお勧めしています。<br></span></p><hr><p>2020 年 9 月 4 日に今後の最新情報が公開されました。以下に概要をまとめます。</p><blockquote><p>Update on Adobe Flash Player End of Support<br><a href="https://blogs.windows.com/msedgedev/2020/09/04/update-adobe-flash-end-support/">https://blogs.windows.com/msedgedev/2020/09/04/update-adobe-flash-end-support/</a></p></blockquote><blockquote><p>Adobe Flash Player のサポート終了に関する最新情報<br><a href="https://blogs.windows.com/japan/2020/09/14/update-adobe-flash-end-support/">https://blogs.windows.com/japan/2020/09/14/update-adobe-flash-end-support/</a></p></blockquote><ul><li>これまでの予定と変わりなく、<span style="color: #ff0000;font-weight:bold;">Adobe Flash Player のサポート終了は 2020 年 12 月 31 日です。</span></li><li>それ以降の法人向け対応サポートについては、<a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">Adobe 社の情報</a>をご覧ください。</li><li><a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">Adobe 社の情報</a>で案内される法人向け対応サポート契約を結び、今まで弊社から提供をしてきた Adobe Flash Player に代わるプラグインの提供を受けた場合、それを『Internet Explorer 11』 および 『Microsoft Edge (Chromium 版) の IE モード』で動作させることができますが、『サードパーティー製のプラグイン』の扱いとなり弊社でのサポートはありません。</li><li><a href="https://docs.microsoft.com/en-us/DeployEdge/microsoft-edge-release-schedule">2021 年 1 月リリース予定</a> の Microsoft Edge (Chromium 版) の <a href="https://docs.microsoft.com/en-us/microsoft-edge/web-platform/site-impacting-changes">バージョン 88 にて Flash が削除される予定</a> です。</li><li>2020 年末以降は、 Microsoft Edge (EdgeHTML 版) と Internet Explorer 向けの『Adobe Flash Player のセキュリティ更新プログラム』の提供はありません。</li><li>2021 年 1 月初旬に、Microsoft Edge (EdgeHTML 版) と Internet Explorer で Flash は既定で無効化され、また、2020 年 6 月リリースの <a href="https://support.microsoft.com/ja-jp/help/4561600/security-update-for-adobe-flash-player">KB4561600</a> より古いバージョンの実行はブロックされます。</li><li>Windows OS のコンポーネントとしての Flash を永久的に削除するための『<a href="https://support.microsoft.com/en-us/help/4577586/update-for-removal-of-adobe-flash-player">KB4577586 Update for Removal of Adobe Flash Player</a>』というタイトルの更新プログラムがリリース予定です。<span style="color: #ff0000;font-weight:bold;">この更新を適用したあとは元に戻すことはできません。</span></li><li>2020 年 10 月 28 日 (日本時間) から『<a href="https://support.microsoft.com/en-us/help/4577586/update-for-removal-of-adobe-flash-player">KB4577586 Update for Removal of Adobe Flash Player</a>』を <a href="https://www.catalog.update.microsoft.com/search.aspx?q=4577586">Microsoft Update カタログから入手</a> できるようになりました。2020 年 12 月 31 日のサポート終了より前に Flash を永久削除したい場合は、カタログから更新プログラムを入手して実行できます。</li><li>『<a href="https://support.microsoft.com/en-us/help/4577586/update-for-removal-of-adobe-flash-player">KB4577586 Update for Removal of Adobe Flash Player</a>』は、2021 年の初めに Windows Update (オプション) と WSUS で配信予定で、その 2 ～ 3 か月後には Windows Update では推奨として配信予定です。</li></ul><p>ロールアップ更新への組み込みについて<br>以下のスケジュールで各更新プログラムに『<a href="https://support.microsoft.com/en-us/help/4577586/update-for-removal-of-adobe-flash-player">KB4577586 Update for Removal of Adobe Flash Player</a>』が組み込まれ、<span style="color: #ff0000;font-weight:bold;">更新プログラムの適用により Flash が永久的に削除されます。</span></p><ul><li>(Windows 10 LTSC 2019 および Windows 10 1909 以上, Windows Server 2019) 2021 年 6 月のプレビューのロールアップ更新から</li><li>(Windows 10 LTSB 2015, LTSC 2016, Windows Server 2016) 2021 年 7 月のロールアップ更新から</li><li>(Windows 8.1, Windows Server 2012 R2, Windows Server 2012 and Windows Embedded 8 Standard) 2021 年 7 月から (マンスリー ロールアップおよびセキュリティのみの更新)</li></ul><h4 id="Adobe-社公開情報"><a href="#Adobe-社公開情報" class="headerlink" title="Adobe 社公開情報"></a>Adobe 社公開情報</h4><p>Adobe Flash Player法人向けサポート終了情報ページ<br><a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html</a></p><p>Update for Enterprise Customers Using Adobe Flash Player<br><a href="https://blog.adobe.com/en/fpost/2020/update-for-enterprise-adobe-flash-player.html">https://blog.adobe.com/en/fpost/2020/update-for-enterprise-adobe-flash-player.html</a></p><p>Adobe Flash Playerサポート終了情報ページ<br><a href="https://www.adobe.com/jp/products/flashplayer/end-of-life.html">https://www.adobe.com/jp/products/flashplayer/end-of-life.html</a></p><hr><h2 id="よくあるお問い合わせ"><a href="#よくあるお問い合わせ" class="headerlink" title="よくあるお問い合わせ"></a>よくあるお問い合わせ</h2><p>Flash に関して弊社のサポートは終了いたしました。<br>サポート期間中に弊社サポートへよくお問い合わせいただいたご質問についてまとめておりますが、2021 年以降の Flash の実行はお勧めできません。セキュリティの観点からは 2021 年夏予定の Flash の永久削除を待つのではなく、『Update for Removal of Adobe Flash Player』を使用してできる限り早急に自発的に Flash を永久削除することをお勧めします。</p><h3 id="全般"><a href="#全般" class="headerlink" title="全般"></a>全般</h3><p>Q. 2021 年 1 月以降、Flash を使い続けるにはどうしたらいいですか？<br>A. Adobe Flash Player のサポート終了は 2020 年 12 月 31 日です。それ以降に使い続ける方法について、弊社ではサポートできません。2021 年以降の法人向け対応サポートについては、<a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">Adobe 社の情報</a> をご覧ください。</p><h3 id="『Flash-の実行ブロック』について"><a href="#『Flash-の実行ブロック』について" class="headerlink" title="『Flash の実行ブロック』について"></a>『Flash の実行ブロック』について</h3><p>Q. ブロックとは具体的にどのような動作ですか？<br>A. サイレントに Flash の実行がブロックされます。</p><p>Q. どうすれば回避できますか？<br>A. <a href="https://support.microsoft.com/ja-jp/help/4561600/security-update-for-adobe-flash-player">KB4561600</a> 以上の Adobe Flash Player のセキュリティ更新プログラムを適用してください。<br>なお、現在入手可能な Adobe Flash Player のセキュリティ更新プログラムは、KB4561600 を置き換える <a href="https://support.microsoft.com/ja-jp/help/4580325/security-update">KB4580325</a> が最新です。KB4561600 もしくは KB4580325 のいずれかがインストールされている環境であれば、『Flash の実行ブロック』の対象外です。</p><p>Q. Adobe Flash Player のセキュリティ更新プログラムは、OS のロールアップ更新プログラムに含まれますか？<br>A. 含まれません。独立した更新プログラムです。前提条件などは更新プログラムの公開ドキュメントをご確認ください。</p><h3 id="『Flash-の既定で無効化』について"><a href="#『Flash-の既定で無効化』について" class="headerlink" title="『Flash の既定で無効化』について"></a>『Flash の既定で無効化』について</h3><p>Q. ブロックとは別ですか？<br>A. はい。『ブロック』はブラウザー側の動作であり、『無効化』は Adobe Flash Player による動作です。</p><p>Q. どうすれば回避できますか？<br>A. <a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">Adobe 社の公開ドキュメント (Adobe Flash Player法人向けサポート終了情報ページ)</a> 内の「デフォルトでFlashの再生をブロック」「Flash Playerは2020年末を過ぎても動作しますか？」をご確認ください。</p><p>Q. 無効化に関してサポートしてほしいのですが。<br>A. <a href="https://www.adobe.com/jp/products/flashplayer/enterprise-end-of-life.html">Adobe 社の公開ドキュメント (Adobe Flash Player法人向けサポート終了情報ページ)</a> の内容も含め、Adobe 社へお問い合わせいただくようお願いしています。</p><p>Q. いつから無効化されますか？<br>A. <a href="https://www.adobe.com/jp/products/flashplayer/end-of-life.html">Adobe 社の公開ドキュメント</a> をご覧ください。</p><h3 id="『Update-for-Removal-of-Adobe-Flash-Player』について"><a href="#『Update-for-Removal-of-Adobe-Flash-Player』について" class="headerlink" title="『Update for Removal of Adobe Flash Player』について"></a>『Update for Removal of Adobe Flash Player』について</h3><p>Q. 今後のスケジュールについて教えてください。<br>A. 2021 年の初めに Windows Update (オプション) と WSUS で配信予定で、その 2 ～ 3 か月後には Windows Update では推奨として配信予定です。2021 年夏には、Windows 10 での OS のロールアップ更新プログラム、および Windows 8.1, Windows Server 2012 and Windows Embedded 8 Standard での Internet Explorer 用の累積的なセキュリティ更新プログラムやマンスリー ロールアップの一部としてが組み込まれます。</p><p>Q. WSUS に配信される前に展開することは可能ですか？<br>A. はい。手動で WSUS にインポートを行い、配信することが可能です。</p><p>Q. 更新の適用時に OS の再起動は必要ですか？<br>A. 必要に応じて求められる場合があります。</p><p>Q. 更新の適用後にアンインストールできますか？ (Flash が存在する状態に戻せますか？)<br>A. できません。更新適用前に作成した復元ポイントから OS を復元するか、OS の再インストールが必要です。</p><p>Q. Windows 7 のときのようにユーザーが個別に Flash をインストールすることはできますか？<br>A. できません。</p><p>Q. Microsoft Edge (Chromium 版) に影響しますか？<br>A. 影響しません。Microsoft Edge (Chromium 版) は 2021 年 1 月リリース予定のバージョン 88 にて Flash が削除される予定です。それ以前のバージョンはそのままになります。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更新履歴:&lt;br&gt;2020/9/9 更新: 今後に関する最新情報を追記しました。&lt;br&gt;2020/10/28 更新: Update for Removal of Adobe Flash Player がリリースされました。&lt;br&gt;2020/10/30 更新: Flash の</summary>
      
    
    
    
    
    <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
    <category term="Flash" scheme="https://jpdsi.github.io/blog/tags/Flash/"/>
    
  </entry>
  
  <entry>
    <title>異なるドメイン間で仮想ディレクトリを作成する場合の注意点</title>
    <link href="https://jpdsi.github.io/blog/web-apps/VirtualDirectory/"/>
    <id>https://jpdsi.github.io/blog/web-apps/VirtualDirectory/</id>
    <published>2021-04-18T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.999Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。IIS サポート チームです。</p><p>IIS 上で仮想ディレクトリを作成することがありますが、信頼関係がない異なるドメイン間で仮想ディレクトリを作成しようとした場合、仮想ディレクトリの作成に失敗します。具体的には仮想ディレクトリを作成する際に別ドメインの資格情報を記入するタイミングでエラーが発生します。</p><p> <img src="/blog/web-apps/VirtualDirectory/pic.png" alt="IIS仮想ディレクトリ図"></p><p>この現象の再現方法は以下の通りになります。</p><ol><li>ドメインAに参加しているマシン上にあるIISマネージャーを起動します。</li><li>サイト用の仮想ディレクトリを追加します。</li><li>「接続」方法として「特定ユーザー」を選択し、資格情報の設定を行います。</li><li>「資格情報の設定」画面に信頼関係を結んでいないドメイン Bのユーザー名とパスワードを入力します。</li><li>「資格情報の設定」画面のOKボタンを実行すると、「指定したパスワードは無効です。新しいパスワードを入力してください。」とエラーが表示されます。</li></ol><p>資格情報を記入した後、設定を完了するタイミングで行われる IIS の内部処理で、指定したユーザー情報を利用して認証を試みます。「資格情報の設定」画面に入力したドメイン名、ユーザー名、パスワードをもとに認証を試みますが、信頼関係のないドメインのユーザーの資格情報ではログインできないため、認証に失敗し、該当のエラーが記録されます。</p><p>この挙動は IIS の想定された動作になります。そのため、異なるドメイン間で仮想ディレクトリを作成いただく場合は、事前にドメイン間で信頼関係を築いていただく必要があります。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。IIS サポート チームです。&lt;/p&gt;
&lt;p&gt;IIS 上で仮想ディレクトリを作成することがありますが、信頼関係がない異なるドメイン間で仮想ディレクトリを作成しようとした場合、仮想ディレクトリの作成に失敗します。具体的には仮想ディレクトリを作成する際に別ドメインの</summary>
      
    
    
    
    
    <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
    <category term="Virtual Directory" scheme="https://jpdsi.github.io/blog/tags/Virtual-Directory/"/>
    
  </entry>
  
  <entry>
    <title>IE で開いていたページが Microsoft Edge にリダイレクトされる動作について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/</id>
    <published>2021-02-17T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.955Z</updated>
    
    <content type="html"><![CDATA[<p>みなさんこんにちは。<br>日本マイクロソフトの IE/Edge サポートチームです。  </p><p>近頃、「いつのまにか IE で表示されなくなり、新しい Microsoft Edge でサイトが表示されるようになった」とお問い合わせを頂くことがあります。<br>IE での表示を前提として Web アプリを作成されている方では、IE で開くようにしたいという方もいらっしゃるかと思います。  </p><p> <br>そこで、少しでも本事象でお困りな皆様のお力になれればと、本ブログにて情報をまとめました！<br>本記事は以下のような構成となってます。</p><ul><li><a href="#1--%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E5%8B%95%E4%BD%9C">1 : どのような動作？</a><ul><li><a href="#%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AA%E5%86%85%E5%AE%B9">具体的な内容</a></li></ul></li><li><a href="#2--%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE-web-%E3%82%B5%E3%82%A4%E3%83%88%E3%81%8C-edge-%E3%81%A7%E9%96%8B%E3%81%8B%E3%82%8C%E3%82%8B">2 : すべての Web サイトが Edge で開かれる？</a></li><li><a href="#3--%E5%AF%BE%E5%87%A6%E6%B3%95%E3%81%AF%E3%81%82%E3%82%8B%E3%81%AE%E3%81%8B">3 :  対処法はあるのか？</a><ul><li><a href="#%E4%BA%88%E9%98%B2%E7%AD%96">予防策</a></li><li><a href="#%E5%AF%BE%E5%87%A6%E7%AD%96">対処策</a></li></ul></li></ul><p> </p><h1 id="1-どのような動作？"><a href="#1-どのような動作？" class="headerlink" title="1 : どのような動作？"></a>1 : どのような動作？</h1><p>近年のモダンブラウザ移行に伴い、最新の web サイトの多くは、Internet Explorer と互換性のないデザインが多く使用されています。<br>今回の IE で利用していたサイトを新しい Microsoft Edge (以降、単に Edge と表記します)へリダイレクトさせる機能は、  最新のブラウザでユーザーにスムーズにブラウジングをして頂くための機能となります。  </p><p><a href="https://docs.microsoft.com/ja-jp/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection#request-an-update-to-the-ie-compatibility-list">Internet Explorer から Microsoft Edge にユーザーを移動する - Microsoft Edge Development | Microsoft Docs</a>  </p><p>なお、私どもブラウザ チームは Edge へのお早めの移行をお奨めしております。  </p><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-about-using-new-edge/">まだデフォルトIE？ 新しい Microsoft Edge を使いませんか？ | Japan Developer Support Internet Team Blog (jpdsi.github.io)</a></p><h2 id="具体的な内容"><a href="#具体的な内容" class="headerlink" title="具体的な内容"></a>具体的な内容</h2><p>本機能はEdgeの既定のブラウザにおける 「Internet Explorer に Microsoft Edge でサイトを開かせる」の設定項目に依存します。<br>具体的な設定は Edge を開き、アドレスバーに edge://settings/defaultBrowser  と入力することで確認できます。  </p><p><img src="/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/EdgeSettingToEnableOpenWebSiteByIE.png" alt="Picture"></p><p>上記のように「Internet Explorer に Microsoft Edge でサイトを開かせる」の設定で「互換性のないサイトのみ(推奨)」を選択した状態で、<br>互換性のないサイト (例： youtube.com) を IE で開こうとすると、IE上には以下のように表示され、Edgeで YouTube のサイトページが表示されます。</p><p><img src="/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/WebSiteYouAccessedCannotBeOpenedByIE.jpg" alt="Picture"></p><p>互換性のないサイトは以下にリスト化されており、本設定の際にはこちらに当てはまるものは Edge で開かれます。</p><p><a href="https://edge.microsoft.com/neededge/v1">https://edge.microsoft.com/neededge/v1</a></p><p>そのため、もし開こうとしていたサイトがこちらのリストに存在する場合は、<br>「互換性のないサイトのみ(推奨)」の設定をしていた場合には IE ではなく、Edge で開かれます。 </p><h1 id="2-すべての-Web-サイトが-Edge-で開かれる？"><a href="#2-すべての-Web-サイトが-Edge-で開かれる？" class="headerlink" title="2 : すべての Web サイトが Edge で開かれる？"></a>2 : すべての Web サイトが Edge で開かれる？</h1><p>また、上記互換性のないサイトのリストにない Web サイトを含め、全ての Web サイトが IE ではなく、Edge で開かれるパターンもあります。</p><p>IE でブラウジングをしていると、以下のようなオプトインが表示されることがありますが、<br>「Microsoft Edge に切り替える」 を選択することで、今後 全ての Web サイトがEdge で開かれるようになります。</p><p><img src="/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/OptInToInformSomeWebSiteCannotBeOpenedByIE.jpg" alt="Picture"></p><h1 id="3-対処法はあるのか？"><a href="#3-対処法はあるのか？" class="headerlink" title="3 :  対処法はあるのか？"></a>3 :  対処法はあるのか？</h1><h2 id="予防策"><a href="#予防策" class="headerlink" title="予防策"></a>予防策</h2><p>2 の予防措置としては、上記オプトインが表示された場合は、「今は実行しない」を押して切り替えないようにすることが考えられます。</p><p><img src="/blog/internet-explorer-microsoft-edge/IEtoEdgeRedirection/EdgeSettingToDisableOpenWebSiteByIE.jpg" alt="Picture"> </p><h2 id="対処策"><a href="#対処策" class="headerlink" title="対処策"></a>対処策</h2><p>一度設定を変更された場合においても、「Internet Explorer に Microsoft Edge でサイトを開かせる」において「なし」を選択していただくことによって解決可能です。 </p><p>上記方法で、IE のままサイトを閲覧するように変更することも可能ですが、Web サイトの技術も日進月歩進化しており、新しい Microsoft Edge へお早めの移行をご検討ください。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさんこんにちは。&lt;br&gt;日本マイクロソフトの IE/Edge サポートチームです。  &lt;/p&gt;
&lt;p&gt;近頃、「いつのまにか IE で表示されなくなり、新しい Microsoft Edge でサイトが表示されるようになった」とお問い合わせを頂くことがあります。&lt;br&gt;IE</summary>
      
    
    
    
    
    <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
    <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
  </entry>
  
  <entry>
    <title>.NET Framework で TLS 1.1 および TLS 1.2 を有効化する方法 - まとめ -</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/</id>
    <published>2020-11-24T15:00:00.000Z</published>
    <updated>2021-12-22T06:12:12.967Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い、もともとばらばらに存在していた記事を一つのブログに集約／移行したものです。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>(※ 2018 年 10 月 11 日に Japan IE Support Team Blog に公開した情報をアーカイブする目的で、Microsoft 社員にて改めて公開しております。)</p><p>みなさん、こんにちは。</p><p>.NET Framework での TLS 1.1 および 1.2 対応について、以前 .NET Framework で TLS1.1 および 1.2 を有効化する方法 という記事を投稿しています。<br>しかしながら、記載の内容がわかりづらいこと、また、記事の公開以降に Update できていなかった点があるため、まとめとして本記事を作成しました。<br>今後のご対応の一助となれましたら大変うれしく思います。  </p><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><hr><p>本資料は下記の構成でまとめています。</p><ol><li>TLS 1.1 および 1.2 に対応するうえでの考え方  </li><li>Windows OS の TLS 1.1 および 1.2 への対応状況  </li><li>.NET Framework で利用される既定のプロトコル バージョン  </li><li>.NET Framework 3.5 で TLS 1.1 および 1.2 を利用できるようにするための更新プログラム  </li><li>.NET Framework 3.5 で TLS 1.1 および 1.2 を既定値にするための方法  </li><li>.NET Framework 4.5.2 で TLS 1.1 および 1.2 を既定値にするための方法  </li><li>.NET Framework のサポート状況  </li><li>各 OS ごとの対応方法  </li></ol><p>また、本資料と併せて下記の資料もご参考ください。</p><blockquote><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/network-programming/tls">Transport Layer Security (TLS) best practices with the .NET Framework</a><br>(日本語訳) <a href="https://docs.microsoft.com/ja-jp/dotnet/framework/network-programming/tls">.NET Framework でのトランスポート層セキュリティ (TLS) のベスト プラクティス</a> </p></blockquote><h2 id="1-TLS-1-1-および-1-2-に対応するうえでの考え方"><a href="#1-TLS-1-1-および-1-2-に対応するうえでの考え方" class="headerlink" title="1. TLS 1.1 および 1.2 に対応するうえでの考え方"></a>1. TLS 1.1 および 1.2 に対応するうえでの考え方</h2><hr><p>.NET Framework で作成されたアプリケーションを TLS 1.2 (TLS 1.1) に対応させるには下記の点を考慮する必要があります。<br>ご利用の OS が TLS 1.1 および 1.2 を利用できるかどうか、また、アプリケーションで独自に設定しているかどうか、により必要な対応が異なります。<br>このため、まずは下記の観点で、ご利用対象の環境やアプリケーションについて理解することが第一歩となります。  </p><ul><li><span style="color: darkblue;">対象の環境は OS として TLS 1.2 (TLS 1.1) を利用できるかどうか</span>  </li><li><span style="color: darkblue;">アプリケーション側で ServicePointManager.SecurityProtocol プロパティにすでに明示的に設定しているものがないか</span>  </li><li><span style="color: darkblue;">アプリケーションがターゲットしている .NET Framework のバージョンはいくつか</span>  </li><li><span style="color: darkblue;">稼働対象の環境にインストールされている .NET Framework のバージョンはいくつか</span>  </li><li><span style="color: darkblue;">アプリケーションを改修することはできるか</span>  </li></ul><p>各ポイントの詳細については次項以降をご覧ください。  </p><h2 id="2-Windows-OS-の-TLS-1-1-および-1-2-への対応状況"><a href="#2-Windows-OS-の-TLS-1-1-および-1-2-への対応状況" class="headerlink" title="2. Windows OS の TLS 1.1 および 1.2 への対応状況"></a>2. Windows OS の TLS 1.1 および 1.2 への対応状況</h2><hr><p>ご利用対象の Windows OS 自体が TLS 1.1 および 1.2 を利用することができない場合には、.NET Framework 側でいくら対応しても TLS 1.1 および 1.2 に対応することはできません。<br>.NET Framework での対応の前に、<span style="color: red;"><strong>Windows OS 自体を TLS 1.1 および 1.2 を利用できるように構成する必要があります</strong></span>。</p><p><strong>！ご注意ください！</strong><br>Windows OS 自体が TLS 1.1 および 1.2 を利用することができない状態でアプリケーション側で TLS 1.1 および 1.2 が指定されると、アプリケーション実行時に例外が発生します。  </p><h3 id="Windows-Server-2008-SP2"><a href="#Windows-Server-2008-SP2" class="headerlink" title="Windows Server 2008 SP2"></a>Windows Server 2008 SP2</h3><p>既定の状態では OS として TLS 1.1 および 1.2 を<span style="color: red;"><strong>利用することができません</strong></span>。<br>.NET Framework での TLS 1.1 および 1.2 への対応の前に、事前に下記の更新プログラムを適用し、OS として TLS 1.1 および 1.2 を利用できるようにする必要があります。  </p><blockquote><p><a href="https://support.microsoft.com/ja-jp/help/4019276/update-to-add-support-for-tls-1-1-and-tls-1-2-in-windows">Windows Server 2008 SP2、Windows Embedded POSReady 2009、および Windows Embedded Standard 2009 に TLS 1.1 および TLS 1.2 のサポートを追加する更新プログラム</a>  </p></blockquote><p>更新プログラム適用後、必要に応じて上記資料に記載のレジストリ値を設定します。  </p><pre><code>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Client]  &quot;DisabledByDefault&quot;=dword:00000001  [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Client]  &quot;DisabledByDefault&quot;=dword:00000001  [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.1\Server]  &quot;DisabledByDefault&quot;=dword:00000001  [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\Server]  &quot;DisabledByDefault&quot;=dword:00000001  </code></pre><p><strong>設定のポイント</strong><br>クライアント OS として利用する場合 (任意のアプリケーションが別の Web サーバーに接続するような場合) には Client に設定します。<br>サーバー OS として利用する場合 (Web サーバーのように接続を待ち受けるような場合) には Server に設定します。  </p><h3 id="Windows-Server-2008-R2-Windows-7"><a href="#Windows-Server-2008-R2-Windows-7" class="headerlink" title="Windows Server 2008 R2 / Windows 7"></a>Windows Server 2008 R2 / Windows 7</h3><p>OS としては TLS 1.1 および 1.2 を利用できますが、アプリケーション側より明示的に TLS 1.1 もしくは 1.2 を利用する指定がない限り利用されません。<br>アプリケーション側からの指定がなくとも利用されるように構成するには、上記の Windows Server 2008 SP2 に記載したレジストリ値 (DisabledByDefault) を必要に応じて設定します。<br>(参考) <a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/dn786418(v=ws.11)">TLS/SSL Settings</a>  </p><h3 id="Windows-Server-2012-Windows-8-1-以降"><a href="#Windows-Server-2012-Windows-8-1-以降" class="headerlink" title="Windows Server 2012 / Windows 8.1 以降"></a>Windows Server 2012 / Windows 8.1 以降</h3><p>OS として TLS 1.1 および 1.2 を利用でき、かつ、既定の状態で TLS 1.1 および 1.2 が利用されるように構成されています。<br>追加で必要な設定はありません。  </p><h2 id="3-NET-Framework-で利用される既定のプロトコル-バージョン"><a href="#3-NET-Framework-で利用される既定のプロトコル-バージョン" class="headerlink" title="3. .NET Framework で利用される既定のプロトコル バージョン"></a>3. .NET Framework で利用される既定のプロトコル バージョン</h2><hr><p>.NET Framework では、HttpWebRequest クラスなどを利用した通信において ServicePointManager.SecurityProtocol プロパティに指定されたプロトコル バージョンが利用されます。<br>プログラム上で明示的に指定されている場合は指定されたプロトコル バージョンが利用されますが、指定されていない場合に利用される既定のプロトコル バージョンは下記のとおりです。<br>.NET Framework の各バージョンごとに、TLS 1.1 および 1.2 への対応状況と併せてまとめました。  </p><h3 id="NET-Framework-3-5-3-5-1"><a href="#NET-Framework-3-5-3-5-1" class="headerlink" title=".NET Framework 3.5 (3.5.1)"></a>.NET Framework 3.5 (3.5.1)</h3><p>既定では TLS 1.1 および 1.2 は未対応<br>プロパティの既定値は SSL 3.0 および TLS 1.0  </p><h3 id="NET-Framework-4-5-2"><a href="#NET-Framework-4-5-2" class="headerlink" title=".NET Framework 4.5.2"></a>.NET Framework 4.5.2</h3><p>TLS 1.1 / TLS 1.2 に対応済み<br>プロパティの既定値は SSL 3.0 および TLS 1.0  </p><h3 id="NET-Framework-4-6-x"><a href="#NET-Framework-4-6-x" class="headerlink" title=".NET Framework 4.6.x"></a>.NET Framework 4.6.x</h3><p>TLS 1.1 / TLS 1.2 に対応済み<br>プロパティの既定値は TLS 1.0、1.1 および 1.2  </p><h3 id="NET-Framework-4-7-x"><a href="#NET-Framework-4-7-x" class="headerlink" title=".NET Framework 4.7.x"></a>.NET Framework 4.7.x</h3><p>TLS 1.1 / TLS 1.2 に対応済み<br>プロパティの既定値は SystemDefault となり、OS の TLS の設定状態に依存する  </p><h3 id="NET-Framework-4-8-x"><a href="#NET-Framework-4-8-x" class="headerlink" title=".NET Framework 4.8.x"></a>.NET Framework 4.8.x</h3><p>TLS 1.1 / TLS 1.2 に対応済み<br>プロパティの既定値は SystemDefault となり、OS の TLS の設定状態に依存する  </p><h2 id="4-NET-Framework-3-5-で-TLS-1-1-および-1-2-を利用できるようにするための更新プログラム"><a href="#4-NET-Framework-3-5-で-TLS-1-1-および-1-2-を利用できるようにするための更新プログラム" class="headerlink" title="4. .NET Framework 3.5 で TLS 1.1 および 1.2 を利用できるようにするための更新プログラム"></a>4. .NET Framework 3.5 で TLS 1.1 および 1.2 を利用できるようにするための更新プログラム</h2><hr><p>.NET Framework 3.5 は既定の状態では TLS 1.1 および 1.2 を利用することができません。<br>.NET Framework 3.5 で TLS 1.1 および 1.2 を利用できるようにするために下記の更新プログラムを適用する必要があります。<br>※ 下記更新プログラムはそれ以降の更新プログラムで置き換えられていますので、セキュリティの観点では『Windows 10 および Windows Server 2016 の場合は OS 向けの最新のロールアップ』を、『それ以外の OS では .NET Framework 向けの最新の品質ロールアップ』を適用することをおすすめします。</p><p><strong>！ご注意ください！</strong><br>更新プログラムを適用しない状態でアプリケーション側で TLS 1.1 および 1.2 が指定されると、アプリケーション実行時に例外が発生します。  </p><h3 id="Windows-Server-2008"><a href="#Windows-Server-2008" class="headerlink" title="Windows Server 2008"></a>Windows Server 2008</h3><p><a href="https://support.microsoft.com/en-us/help/3154517/support-for-tls-system-default-versions-included-in-the-net-framework">Support for TLS System Default Versions included in the .NET Framework 2.0 SP2 on Windows Vista SP2 and Server 2008 SP2</a>  </p><h3 id="Windows-Server-2008-R2-Windows-7-1"><a href="#Windows-Server-2008-R2-Windows-7-1" class="headerlink" title="Windows Server 2008 R2 / Windows 7"></a>Windows Server 2008 R2 / Windows 7</h3><p><a href="https://support.microsoft.com/en-us/help/3154518/support-for-tls-system-default-versions-included-in-the-net-framework">Support for TLS System Default Versions included in the .NET Framework 3.5.1 on Windows 7 SP1 and Server 2008 R2 SP1</a>  </p><h3 id="Windows-Server-2012"><a href="#Windows-Server-2012" class="headerlink" title="Windows Server 2012"></a>Windows Server 2012</h3><p><a href="https://support.microsoft.com/en-us/help/3154519/support-for-tls-system-default-versions-included-in-the-net-framework">Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows Server 2012</a>  </p><h3 id="Windows-Server-2012-R2-Windows-8-1"><a href="#Windows-Server-2012-R2-Windows-8-1" class="headerlink" title="Windows Server 2012 R2 / Windows 8.1"></a>Windows Server 2012 R2 / Windows 8.1</h3><p><a href="https://support.microsoft.com/en-us/help/3154520/support-for-tls-system-default-versions-included-in-the-net-framework">Support for TLS System Default Versions included in the .NET Framework 3.5 on Windows 8.1 and Windows Server 2012 R2</a><br>※ 更新プログラムの適用には Windows 8.1 Update / Windows Server 2012 R2 Update (KB2919355) が事前に適用されている必要があります  </p><h3 id="Windows-10-v1507-LTSC"><a href="#Windows-10-v1507-LTSC" class="headerlink" title="Windows 10 v1507 (LTSC)"></a>Windows 10 v1507 (LTSC)</h3><p>Windows 10 v1507 環境向けに公開されている更新プログラムを適用します。<br>※ 本記事執筆時点で、最も古い更新プログラムは下記の 2016 年 10 月に公開された更新プログラムです。下記以降の更新プログラムの適用をご検討ください。<br><a href="https://support.microsoft.com/ja-jp/help/4001772/windows-10-update-kb3192440">2016 年 10 月 11 日 — KB3192440 (OS ビルド 10240.17146)</a>  </p><h3 id="Windows-10-v1607-LTSC-Windows-Server-2016"><a href="#Windows-10-v1607-LTSC-Windows-Server-2016" class="headerlink" title="Windows 10 v1607 (LTSC) / Windows Server 2016"></a>Windows 10 v1607 (LTSC) / Windows Server 2016</h3><p>下記のいずれかの更新プログラム以降で対応されています。<br><a href="https://support.microsoft.com/ja-jp/help/4004253/windows-10-update-kb3201845">2016 年 12 月 9 日 — KB3201845 (OS ビルド 14393.479)</a><br><a href="https://support.microsoft.com/ja-jp/help/4004227/windows-10-update-kb3206632">2016 年 12 月 13 日 — KB3206632 (OS ビルド 14393.576)</a></p><h3 id="Windows-10-v1703-Windows-Server-2019-以降"><a href="#Windows-10-v1703-Windows-Server-2019-以降" class="headerlink" title="Windows 10 v1703 / Windows Server 2019 以降"></a>Windows 10 v1703 / Windows Server 2019 以降</h3><p>.NET Framework 3.5 の機能を有効化した時点ですでに対応されています。<br>追加で適用が必要な更新プログラムはありません。  </p><h2 id="5-NET-Framework-3-5-で-TLS-1-1-および-1-2-を既定値にするための方法"><a href="#5-NET-Framework-3-5-で-TLS-1-1-および-1-2-を既定値にするための方法" class="headerlink" title="5. .NET Framework 3.5 で TLS 1.1 および 1.2 を既定値にするための方法"></a>5. .NET Framework 3.5 で TLS 1.1 および 1.2 を既定値にするための方法</h2><hr><p>.NET Framework 3.5 は、SSL 3.0 および TLS 1.0 が既定で利用されるプロトコル バージョンです。<br>既定値を変更するには、Windows OS 側で TLS 1.1 および 1.2 が利用されるよう構成し、かつ、.NET Framework 3.5 で TLS 1.1 および 1.2 を利用できるようにするための更新プログラムを適用したうえで各資料に記載の下記のレジストリ値を設定します。  </p><p>下記のレジストリ値が設定されると Windows OS 側で構成しているプロトコル バージョンに従うようになります。<br>Windows OS 側で TLS 1.1 および 1.2 が利用されるよう構成することで、.NET Framework 3.5 で利用されるプロトコル バージョンも TLS 1.0、TLS 1.1 および TLS 1.2 に変更されます。  </p><pre><code>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\v2.0.50727]  &quot;SystemDefaultTlsVersions&quot;=dword:00000001  </code></pre><p>64 ビット OS の環境の場合は下記にも設定します。</p><pre><code>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v2.0.50727]  &quot;SystemDefaultTlsVersions&quot;=dword:00000001  </code></pre><p><strong>設定のポイント</strong><br>プログラム上で ServicePointManager.SecurityProtocol プロパティに明示的に任意のプロトコル バージョンを指定している場合は、上記のレジストリ値の設定の有無にかかわらずプログラムで指定したプロトコル バージョンが利用されます。  </p><h2 id="6-NET-Framework-4-5-2-で-TLS-1-1-および-1-2-を既定値にするための方法"><a href="#6-NET-Framework-4-5-2-で-TLS-1-1-および-1-2-を既定値にするための方法" class="headerlink" title="6. .NET Framework 4.5.2 で TLS 1.1 および 1.2 を既定値にするための方法"></a>6. .NET Framework 4.5.2 で TLS 1.1 および 1.2 を既定値にするための方法</h2><hr><p>.NET Framework 4.5.2 は、SSL 3.0 および TLS 1.0 が既定で利用されるプロトコル バージョンです。<br>既定値を変更するには、下記のセキュリティ アドバイザリー 2960358 で公開されている更新プログラムを適用します。<br>※ 下記更新プログラムはそれ以降の更新プログラムで置き換えられていますので、セキュリティの観点では『Windows 10 および Windows Server 2016 の場合は OS 向けの最新のロールアップ』を、『それ以外の OS では .NET Framework 向けの最新の品質ロールアップ』を適用することをおすすめします。  </p><blockquote><p><a href="https://docs.microsoft.com/en-us/security-updates/securityadvisories/2015/2960358">Microsoft Security Advisory 2960358</a><br>(日本語訳) <a href="https://docs.microsoft.com/ja-jp/security-updates/securityadvisories/2015/2960358">マイクロソフト セキュリティ アドバイザリ 2960358</a>  </p></blockquote><p>上記のセキュリティ アドバイザリーを適用すると下記のレジストリ値が構成され、.NET Framework 4.5.2 で利用されるプロトコル バージョンが TLS 1.0、TLS 1.1 および TLS 1.2 に変更されます。<br>念のためレジストリ値が構成されているか確認し、万が一構成されていない場合は手動で構成します。  </p><pre><code>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework\v4.0.30319]  &quot;SchUseStrongCrypto&quot;=dword:00000001  </code></pre><p>64 ビット OS 環境の場合は下記にも設定します。</p><pre><code>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\v4.0.30319]  &quot;SchUseStrongCrypto&quot;=dword:00000001  </code></pre><p><strong>設定のポイント</strong><br><span style="color: red;">プログラム上で ServicePointManager.SecurityProtocol プロパティに明示的に任意のプロトコル バージョンを指定している場合は、上記のレジストリ値の設定の有無にかかわらずプログラムで指定したプロトコル バージョンが利用されます。</span>  </p><h2 id="7-NET-Framework-のサポート状況"><a href="#7-NET-Framework-のサポート状況" class="headerlink" title="7. .NET Framework のサポート状況"></a>7. .NET Framework のサポート状況</h2><p><span style="color: red;">.NET Framework 4.x 系は、4.5.2 以降がサポート対象です。</span><br>稼働対象の環境にインストールするバージョンは可能な限り最新のバージョンとすることをご検討ください。  </p><blockquote><p><a href="https://blogs.msdn.microsoft.com/visualstudio_jpn/2015/10/18/net-framework-201510/">.NET Framework サポート ライフサイクル ポリシーについて (2015 年 10 月)</a><br><a href="https://blogs.msdn.microsoft.com/jpvsblog/2015/07/22/net-framework-4-12388/">.NET Framework 4 を対象に作成したアプリケーションのサポートについて</a>  </p></blockquote><h3 id="各-OS-上での-NET-Framework-の既定のバージョン"><a href="#各-OS-上での-NET-Framework-の既定のバージョン" class="headerlink" title="各 OS 上での .NET Framework の既定のバージョン"></a>各 OS 上での .NET Framework の既定のバージョン</h3><p>OS ごとに既定でインストールされている .NET Framework のバージョンは下記の資料をご覧ください。<br>OS によってはクリーンインストールした状態ですでにサポートが終了している状況もあり得るため、インストールすることのできる最新バージョンへの更新をご検討ください。  </p><blockquote><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies">.NET Framework Versions and Dependencies</a><br>(日本語訳) <a href="https://docs.microsoft.com/ja-jp/dotnet/framework/migration-guide/versions-and-dependencies">.NET Framework のバージョンおよび依存関係</a>  </p></blockquote><blockquote><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/install/">Installation guide</a><br>(日本語訳) <a href="https://docs.microsoft.com/ja-jp/dotnet/framework/install/">インストール ガイド</a>  </p></blockquote><h3 id="各-OS-上でサポートされるバージョン"><a href="#各-OS-上でサポートされるバージョン" class="headerlink" title="各 OS 上でサポートされるバージョン"></a>各 OS 上でサポートされるバージョン</h3><p>各 OS ごとにサポートされているバージョンは下表のとおりです。<br><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/dotnet-framework-versions-dependencies.png" alt="各 OS 上でサポートされるバージョン">  </p><h2 id="8-各-OS-ごとの対応方法"><a href="#8-各-OS-ごとの対応方法" class="headerlink" title="8. 各 OS ごとの対応方法"></a>8. 各 OS ごとの対応方法</h2><hr><p>上記までの内容を踏まえたうえでの各 OS ごとの対応方法について下記にまとめました。<br>なお、.NET Framework 3.5(.1) は、事前に <span style="color: red;"><strong>TLS 1.1 および TLS 1.2 に対応するための更新プログラムが適用されていることが前提</strong></span> です。<br>また、Windows Server 2008 は、事前に <span style="color: red;"><strong>OS 向けの TLS 1.1 および 1.2 に対応するための更新プログラムが適用されていることが前提</strong></span> です。  </p><h3 id="各-OS-共通"><a href="#各-OS-共通" class="headerlink" title="各 OS 共通"></a>各 OS 共通</h3><p>何度も記載していますが、ServicePointManager.SecurityProtocol プロパティに明示的にプロトコル バージョンを指定している場合には、当プロパティに指定したプロトコル バージョンが利用されます。<br>下表は当プロパティに TLS 1.2 を設定した場合の対応表になります。<br><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/os_common.png" alt="各 OS 共通">  </p><p>ServicePointManager.SecurityProtocol プロパティに明示的に指定していない場合の各 OS ごとの対応表は下記のとおりです。  </p><h3 id="Windows-Server-2008-1"><a href="#Windows-Server-2008-1" class="headerlink" title="Windows Server 2008"></a>Windows Server 2008</h3><p><strong>※ 前提条件 ※</strong><br>Windows Server 2008 は、既定の状態では OS として TLS 1.1 および 1.2 を利用することができません。<br>事前に <span style="color: red;"><strong>TLS 1.1 および 1.2 を利用できるようにするための更新プログラムの適用が必須</strong></span> です。<br><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-server-2008.png" alt="Windows Server 2008">  </p><h3 id="Windows-Server-2008-R2-Windows-7-2"><a href="#Windows-Server-2008-R2-Windows-7-2" class="headerlink" title="Windows Server 2008 R2 / Windows 7"></a>Windows Server 2008 R2 / Windows 7</h3><p><strong>※ 前提条件 ※</strong><br>Windows Server 2008 R2 / Windows 7 は OS としては TLS 1.1 および 1.2 を利用できますが、アプリケーション側より明示的に TLS 1.1 もしくは 1.2 を利用する指定がない限り利用されません。<br>必要に応じて <span style="color: red;"><strong>アプリケーション側からの指定がなくとも TLS 1.1 および 1.2 が利用されるためのレジストリ値を設定します</strong></span>。<br><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-7-windows-server-2008r2.png" alt="Windows 7 および Windows Server 2008 R2">  </p><h3 id="Windows-Server-2012-1"><a href="#Windows-Server-2012-1" class="headerlink" title="Windows Server 2012"></a>Windows Server 2012</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-server-2012.png" alt="Windows Server 2012">  </p><h3 id="Windows-Server-2012-R2-Windows-8-1-1"><a href="#Windows-Server-2012-R2-Windows-8-1-1" class="headerlink" title="Windows Server 2012 R2 / Windows 8.1"></a>Windows Server 2012 R2 / Windows 8.1</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-81-windows-server-2012r2.png" alt="Windows 8.1 および Windows Server 2012 R2">  </p><h3 id="Windows-10-v1507-LTSC-2015"><a href="#Windows-10-v1507-LTSC-2015" class="headerlink" title="Windows 10 v1507 (LTSC 2015)"></a>Windows 10 v1507 (LTSC 2015)</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-10-1507.png" alt="Windows 10 v1507 (LTSC 2015)">  </p><h3 id="Windows-10-v1607-LTSC-2016-Windows-Server-2016"><a href="#Windows-10-v1607-LTSC-2016-Windows-Server-2016" class="headerlink" title="Windows 10 v1607 (LTSC 2016) / Windows Server 2016"></a>Windows 10 v1607 (LTSC 2016) / Windows Server 2016</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-10-1607-windows-server-2016.png" alt="Windows 10 v1607 (LTSC 2016) および Windows Server 2016">  </p><h3 id="Windows-10-v1803"><a href="#Windows-10-v1803" class="headerlink" title="Windows 10 v1803"></a>Windows 10 v1803</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-10-1803.png" alt="Windows 10 v1803">  </p><h3 id="Windows-10-v1809-LTSC-2019-Windows-Server-2019"><a href="#Windows-10-v1809-LTSC-2019-Windows-Server-2019" class="headerlink" title="Windows 10 v1809 (LTSC 2019) / Windows Server 2019"></a>Windows 10 v1809 (LTSC 2019) / Windows Server 2019</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-10-1809-windows-server-2019.png" alt="Windows 10 v1809 (LTSC 2019) および Windows Server 2019">  </p><h3 id="Windows-10-v1903-v1909-v2004-v20H2"><a href="#Windows-10-v1903-v1909-v2004-v20H2" class="headerlink" title="Windows 10 v1903 / v1909 / v2004 / v20H2"></a>Windows 10 v1903 / v1909 / v2004 / v20H2</h3><p><img src="/blog/internet-explorer-microsoft-edge/dotnet-framework-tls12/windows-10-1903-to-20H2.png" alt="Windows 10 v1903 / v1909 / v2004 / v20H2">  </p><p>いかがでしょうか。<br>本記事が今後のご対応のお役に立てますと幸いです。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い、もともとばらばらに存在していた記事を一つのブログに集約／移行したものです。&lt;br&gt;元の記事の最新の更新情報については、本内容をご参照ください。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(※ 2</summary>
      
    
    
    
    
    <category term=".NET Framewrork" scheme="https://jpdsi.github.io/blog/tags/NET-Framewrork/"/>
    
    <category term="TLS" scheme="https://jpdsi.github.io/blog/tags/TLS/"/>
    
  </entry>
  
</feed>
